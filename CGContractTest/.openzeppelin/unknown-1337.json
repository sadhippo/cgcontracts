{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x418D56A328035E96a9c884Ff400D5d6f5736897D",
    "txHash": "0x4b0d0cf1f16ceacbb234e75b1b998548567fedc1f5b9a98483a0d01d0e111f66"
  },
  "proxies": [
    {
      "address": "0xbD439f9ddeaC7D2661B6598983c69dDe7AA24bBe",
      "txHash": "0x611081baa4ca87395a0400d1c65ea0b97d44efdab64929ca1505890b4e4f9c0c",
      "kind": "transparent"
    },
    {
      "address": "0x8629dd914f62492Fc5262cc4b742D96a5C6524E1",
      "txHash": "0xe6180685eb796085aa4194cf190018698d86dac30a1665bae57ae5a2c63398da",
      "kind": "transparent"
    },
    {
      "address": "0xA9dBE98f1E69b14FC6f1690EdA11652Bf9f4f45D",
      "txHash": "0xe32cbf1e649e52855aabffd14f0fe341500895bccb465c458e6bae729c0d0bd0",
      "kind": "transparent"
    },
    {
      "address": "0x59261f2E6579eE7b4437B4Ea10AB9240570BA43B",
      "txHash": "0xc23cdeffb1e4e16452e5a03c61424daf106f1215a16db45f12c6dd0460ac7059",
      "kind": "transparent"
    },
    {
      "address": "0xAD85B88cF93a786fe813Ee0bF13264529FEDb627",
      "txHash": "0x1865801e60b02f68d0adaffad6a77d7189b1e843c1bae8b2672867db2b5a54d9",
      "kind": "transparent"
    },
    {
      "address": "0xca3704F8a21840de52a63f32f566a22Ef1E5625c",
      "txHash": "0xd99206f7d2d3406bf799d67dc4191fe492d2b73ca3d449f15433df0080a9adce",
      "kind": "transparent"
    },
    {
      "address": "0xD6466eB9a84C06ba1145f5ae395858A3733164C5",
      "txHash": "0xb26eb76ebd4ec3d9720b11e9851c3ba337ab1d3dd8f59e7f1573b5bf45ee6ad8",
      "kind": "transparent"
    },
    {
      "address": "0xC9d019C890b5e992EAb8034cDa22e31d63745EDF",
      "txHash": "0xb94cb849eac8fcfd77f026f2097a93a4ff4862aff3559c30e02b54183aa3112b",
      "kind": "transparent"
    },
    {
      "address": "0xcc9961F425Fa6237eaeFf987E99f9B87AC30f274",
      "txHash": "0x320d0f273362c40c1ff79275fcab7484d39e1785dc9bd3be4928bb7aa57b09a9",
      "kind": "transparent"
    },
    {
      "address": "0x4107653a8df691A0aF40a75005AcfA220D092B98",
      "txHash": "0x918d621cbb701d87536e9f00e2b9a298dc53c1d814a36511032db7ea821f3f31",
      "kind": "transparent"
    },
    {
      "address": "0x1C4c76607af768e38A754156e1EA467b30F53aF4",
      "txHash": "0x706b706b17c1f711b88ea779ea8fcf252fd8650508d3498c38d26a6e92f2a3a5",
      "kind": "transparent"
    },
    {
      "address": "0xb3b3C2b919E970fbd64B79bb1813Fc48b057Bf3b",
      "txHash": "0x3a792f40ea0203fe420b5f2847be915d21e9b1ba81dbf4dffe62a33820494656",
      "kind": "transparent"
    },
    {
      "address": "0x7871C7D2F97594828df0BDf846b3e224396Db452",
      "txHash": "0xb65a31eabf8d2293e1fa977bee730e885c66b9c5c1ee9fce2311e84f47b42348",
      "kind": "transparent"
    },
    {
      "address": "0x824E224458727Bf946A0C3539ceB39759533c57d",
      "txHash": "0xfad725360483de8c0495240c872adc8d351d41f52426409723270fcc2d3fb0a8",
      "kind": "transparent"
    },
    {
      "address": "0x867bB8b236524e0B234DE45d6665C59B8D87e766",
      "txHash": "0x750a9bc876044b7354e89b8f28ecd0944d10ab05bcd942be1b265bcf83ea261d",
      "kind": "transparent"
    },
    {
      "address": "0x92044D1fD149e5ecBD3FB5434C01B6771e115049",
      "txHash": "0x6890dad908e8a17f455da16e8214238683077dccc06972e719586593a13afdef",
      "kind": "transparent"
    },
    {
      "address": "0xB74512D48De709156D6eA17A7dDa145B7adC9E3f",
      "txHash": "0xabff151092fbabd812b7e2139686e974ccd0dac89c4b6b03af63b06858bd17a2",
      "kind": "transparent"
    },
    {
      "address": "0x9e634AB6B3a7c53221DA0cB888f29b4CfdcF27eF",
      "txHash": "0x3adcbfebbd47331ddc9d15dc86dc0f4b0a0ee2563a54de9cc5b100cefa3dc51b",
      "kind": "transparent"
    },
    {
      "address": "0x7BF5024ad032208440C9C37eBfe245474840E38c",
      "txHash": "0x30fd75a40936b416836a3071d2fdc4207ba9f7306d600f98117dfd8d8787a319",
      "kind": "transparent"
    },
    {
      "address": "0x7153027f8AD0068484338564C8ACc105802ba92c",
      "txHash": "0x684e6f67bf58e6cf8f683293bc8e9417ef6de99a6b212101fe585abddea5328e",
      "kind": "transparent"
    },
    {
      "address": "0x8317bE5185d7a7939AF25CD23C763eD733883617",
      "txHash": "0x3aa270edc916b897c7ddd4721385007125be8da713cdc8cd41593f23f920f18a",
      "kind": "transparent"
    },
    {
      "address": "0x1A9d94Fe0a5D2ca7546711784f770cE934DC020F",
      "txHash": "0xc919cfe7ca4c14daa4cc4d30c050134a615005460c5870b08c3450cecf8bc0a8",
      "kind": "transparent"
    },
    {
      "address": "0xc842151A7F2Ac09f6133920961dfb85b2bddD7E9",
      "txHash": "0xd31596f0e8e264965025b7c5761c2bcf0043c6d9c1a119861de819d21717f3c6",
      "kind": "transparent"
    },
    {
      "address": "0x58A6cF0CBfB711ADC2930068CDB32f7b71B335a3",
      "txHash": "0xf417f725f6400ead38649cbf1019148b1111d5f7103ef2f52ea27b70fad2557a",
      "kind": "transparent"
    },
    {
      "address": "0xBcfD90156e41671D4592DeF3500370e2B811b946",
      "txHash": "0x4c4f328b5e09fae4d76c2ff1305a892eecfeb7faaa2f718e0af0f0fd0105bc2b",
      "kind": "transparent"
    },
    {
      "address": "0x4bBE1EC7fC612F3518B3aA3b7CE3815Fb8d6258b",
      "txHash": "0x4eff3de05fe61555d622e9548e466accbad4a700f3475d58ccd0da18e6a5cd11",
      "kind": "transparent"
    },
    {
      "address": "0xaC758BcE2a84FB394ae665d44599e120ce663F9e",
      "txHash": "0x7f2514de73acc0a7314d25a6b68a0acceca721e90968e17123832ac011b44c10",
      "kind": "transparent"
    },
    {
      "address": "0xD83f3cfe3FCCD439679EA5fA1BD79820082B2C03",
      "txHash": "0x01456d43bf2b0fe94957e7740e781266548e3c57b68d578172facf8f30c86117",
      "kind": "transparent"
    },
    {
      "address": "0x40e2988459954C1b7D7ba1840DF0e2C777C6b1BC",
      "txHash": "0x734b502dfbbb94119d305f8abd1a459306f98214461c213336e796fb984828a9",
      "kind": "transparent"
    },
    {
      "address": "0x82e089967Ab5c0A1d460f67031ea9cE3B6412248",
      "txHash": "0xe075af3907014196bb49931c8ec5a1f1419b8b75f04784f2b78c6adac4a74e0a",
      "kind": "transparent"
    },
    {
      "address": "0x657a80da320AEEDFB375f65EBe05a10680C58322",
      "txHash": "0xade37016f9f5fb544614d36abb87d247f9d8573d06c0200c745c7463ed1fceb0",
      "kind": "transparent"
    },
    {
      "address": "0x5D3f5ceb3630A33449129Fbe0683d520883e33a0",
      "txHash": "0xb1fad3019b9a7c01754caf3a3779867225e001b3474a5095670021bd4debc37c",
      "kind": "transparent"
    },
    {
      "address": "0x986955A2AB1E0A64091F516857d32aDfE9050d72",
      "txHash": "0x735464fee5796bdfedcc3e5e09a2625fbe7bac9e9373a872863ecba157d22690",
      "kind": "transparent"
    },
    {
      "address": "0xA29B7cB3379dba6579b3fceB00A6C42d87AB7Caa",
      "txHash": "0xfa9ca2aab24bcffc1720a84190cdfe93be0eab9e1115dcd669b30994df87cd86",
      "kind": "transparent"
    },
    {
      "address": "0x1A7Cc5a1175AAE23ECE704E5b4aC08213E2A4562",
      "txHash": "0x6b275b370a9069006c11ef59fe33dd99596b8eed3f7ba9c05e01739c22807fa6",
      "kind": "transparent"
    },
    {
      "address": "0x22502955A4310a3BdEDdB701f8ABEDC3D123dF65",
      "txHash": "0x89c61224632fa733bae5269c5d2d3403f3a4f106ab0d311f79f5050e66104ebd",
      "kind": "transparent"
    },
    {
      "address": "0xc0285ABC9B5EA3735BC7282FFc71E2e6199e724A",
      "txHash": "0x08da44573fa570b400931d0b177941162b96e28ee37d75b690b97d904f7bc715",
      "kind": "transparent"
    },
    {
      "address": "0x078CDCf5Fc2B87C1494e61afa9A7F66F8d610823",
      "txHash": "0xb210ced2f337923555735cfe987440ed3a9b189298ea197fc17877137d30022a",
      "kind": "transparent"
    },
    {
      "address": "0x4b51f05D390473BD5f7cBd9a09A92f596A774e72",
      "txHash": "0xbac4db62f09ac7c6f7b45a1d48456e273a3db4328810a9437b5214a1f5eade70",
      "kind": "transparent"
    },
    {
      "address": "0xBD96271E18cbDB3532B17761ffAc72d61B6582B1",
      "txHash": "0x8481f2e1600799050196e0818bca141f86d02937d0f73c01ac585eac92b445d6",
      "kind": "transparent"
    },
    {
      "address": "0x231E969BCb1EFD2B30b080CebF2072aFAe116162",
      "txHash": "0xba8454a9eeaf0e3b59bc6b75340f318ebaa25161232975ef2cd5d6426ce89055",
      "kind": "transparent"
    },
    {
      "address": "0x904Cd85Ac6902Db8CDEf8037132EE1779AE3F57b",
      "txHash": "0x6687d439a45c535854a573c33e96f8d9507bc190cf07e7271d69ccfb05d4e5e6",
      "kind": "transparent"
    },
    {
      "address": "0x58A16A3CBEBf6CE5fa440BFe9DcFFeD032639332",
      "txHash": "0x4f8ee3f4c1dba5319f2b7d518a6d205e06e1d3ddfce866aed98c4b61b50522ee",
      "kind": "transparent"
    },
    {
      "address": "0x460b914CB5ADe7F9d8bd6150abe4fe25015Ca2C5",
      "txHash": "0xe4980aa6d06af25c799a6032552c396c069e905bc0e4aa0a9ac165f062f4bdfd",
      "kind": "transparent"
    },
    {
      "address": "0xFbC493d3CD03acA8308D75A644AF48A66b7eFABd",
      "txHash": "0xabb9923a933bff06039e64f3ab21062c4dcc92984218ec8d85bd021e753f1d71",
      "kind": "transparent"
    },
    {
      "address": "0x35785A17Cbb53e22d360adA10572D25756ea9a56",
      "txHash": "0x8b4e15c330f1755738d8c844fdd031d38136dd2db33e9e81ad1349574848c141",
      "kind": "transparent"
    },
    {
      "address": "0x74f3080768BD37fd1156Ee98D47EA65B30Dc2808",
      "txHash": "0xd62d7e37f05fca92a0b88bd4769de533fe48731e648cfa55dc1e3d865812e0c7",
      "kind": "transparent"
    },
    {
      "address": "0x38DDC967bd87fFDbe8f691a738B7a9C74e8E5299",
      "txHash": "0x74d90520cf2e9f6b7aa951e4d5f04a451ee6beda0e84c3d9ed9641f1fd9ddd39",
      "kind": "transparent"
    },
    {
      "address": "0xf964dA90F43eF9E44d6E53397dBaB97AD29186fF",
      "txHash": "0xf1276a2b25d97048795ad43213c639de49212dbe8382a0074640ee8344b9dfcc",
      "kind": "transparent"
    },
    {
      "address": "0x5c157E4fFe7375a76a35285b5Ec4ba80c1Cf4096",
      "txHash": "0x3102303586beaadeb53aaa21b6dda1913f0d1a735c8263ca9695ce051ca03656",
      "kind": "transparent"
    },
    {
      "address": "0x68EDe114244E2c33E3b6CC5851af757Aac369306",
      "txHash": "0xadec935f7b84c59c00e42707a4013f948a20b9407d056b10407a5d5342702502",
      "kind": "transparent"
    },
    {
      "address": "0xc3AEeC4e653F93f161CFA26319113b7B7A91bdED",
      "txHash": "0x1fa36a02a9d63d01948eec3351830c99ac1afac450f3f2fe73f8dba4a9725b58",
      "kind": "transparent"
    },
    {
      "address": "0x72670dD70D9071c3eFB94AE289D49E736CE41E61",
      "txHash": "0xc8500e245468bac4abbd9f6fcdc6854e59233a97a28690b9399825998b4f9e15",
      "kind": "transparent"
    },
    {
      "address": "0xcEdd1E2b1C3a6eEaf34596Dff9b5715B2e02e4ea",
      "txHash": "0x6a684fe22cf7eb82dfed9cf89508c566e4f9a72a6883de27c9d467ca9517d2d3",
      "kind": "transparent"
    },
    {
      "address": "0xF48A538fffD7bBAD54f0bD2F586D5eFA971341E0",
      "txHash": "0x96754a408b728f1201901384d6de9b283b81d514a8fc4d49e1de995d1861ef40",
      "kind": "transparent"
    },
    {
      "address": "0xEB156e88Ef52D86e99EC0816F08143668426701F",
      "txHash": "0xb012991d5bf5df64dc0b7c7ce6d510e100c67a4d9e20a5cf2f4129ca9e09c8b0",
      "kind": "transparent"
    },
    {
      "address": "0x77646888F66c1278A3846f18ec3c962D51551101",
      "txHash": "0xd7f7ae2a9899ee1585f80ee4c6347071be4c6d93503417a8aaf443fd7434798c",
      "kind": "transparent"
    },
    {
      "address": "0x2f2A2e363af8AB5B500990ca1888EE3364Bef6B3",
      "txHash": "0xa599e44c33dd5fcd9380a045a9d25cbbad9fdb3543a9427ce66247198ff95ce6",
      "kind": "transparent"
    },
    {
      "address": "0xc7136c3A5a89AeB01f310873DcBCd4Dce02F9c5A",
      "txHash": "0x65eece1c351e8821d1782ad04c02aae38dcc39a883104f139f41a6699b6741e1",
      "kind": "transparent"
    },
    {
      "address": "0x10d2C802bE2dc049C80622884Bf2EB6d932BA25a",
      "txHash": "0x213c00ffe123d43d78be95e0ae81f7d35f3868408105ea0d2815b35e4446525a",
      "kind": "transparent"
    },
    {
      "address": "0xd3178d9b53Dc7bE0a06f3366557E7569F44e75b2",
      "txHash": "0x4cc811769554f52f6ff6e29ef3a4b067fb1d3833af1a627ff9e0aa19c56542aa",
      "kind": "transparent"
    },
    {
      "address": "0xf529BA6c9791768c2b2B88Ab4B299beBcc3f84a1",
      "txHash": "0x98c5007344975f69bdaa035bd9f2872a3a478d67ba5053a98178cf78a5f86f29",
      "kind": "transparent"
    },
    {
      "address": "0x90eEE05ae0FB15778145fa05E786584548995860",
      "txHash": "0x81b98dfcfd7d774cfcacb12a9e5b4ca97fea52313547b90da59c5d53275f0694",
      "kind": "transparent"
    },
    {
      "address": "0xe6FAa23207Ac82a634fc50F3B514F4D1E586D756",
      "txHash": "0xa776dc7286a8f3a4444fa4b624e56d88e2e1372b4ce35d7fa8a3e79844065f41",
      "kind": "transparent"
    },
    {
      "address": "0xC80E7841ae1BEBb2560718Ee87d6e1B6A74351Fa",
      "txHash": "0xb21d6826cf46f9f3d292294c0dfd9481ea582cd5ef4f346418f0247f52e5bcb4",
      "kind": "transparent"
    },
    {
      "address": "0x98c5fF1E6D2E2A7B27B40dC12464CA95608d10cB",
      "txHash": "0xf87e3261f47ec8d1eae32df94edd32ae6ddbeca2b2a9d379337df691ceb9d341",
      "kind": "transparent"
    },
    {
      "address": "0xCac842df7dEdba23b2E21FA38cdb9d1ff9B3f601",
      "txHash": "0x72cb7553e590de299268464749257ae937ba1d0d7bb5aadec28cf0d45fd74ffa",
      "kind": "transparent"
    },
    {
      "address": "0xd6FD9a5b4daDB48B9C8Ae3ccf0a7FBD840a09E6B",
      "txHash": "0x2ae71ce5a22905ce720d75608a07fbcf4ad17dcb021d552c2ff7721d1cd6f9ff",
      "kind": "transparent"
    },
    {
      "address": "0x7A98803dFb1feC719BA79233aba84596f357d6D8",
      "txHash": "0x1d21f5df35156a70475d0b8c404d4a1c9d67a8bf9edd9ad9b326dc7c2651db42",
      "kind": "transparent"
    },
    {
      "address": "0xF08384842A0e1307d0fFf8CB9Dab66EE2BF10dcb",
      "txHash": "0xf7477f039a594cf7aada9d290207d6ba8756d08b7ca43203c2a4324d29b99d05",
      "kind": "transparent"
    },
    {
      "address": "0x1D6bcEe2B9a117B383c88C9A6DEE9Ad7Ea4ade8a",
      "txHash": "0x4bdff97a53888acfb41a2d722b0cb275172eb794da323f497ea8f1bb720bcea9",
      "kind": "transparent"
    },
    {
      "address": "0x07e35842a57935E02F620079B89fD06254F9C373",
      "txHash": "0x07003e78d66256aaccd5b2e6f78e5b545f6803f264a7ba65f9aff877ce5307c6",
      "kind": "transparent"
    },
    {
      "address": "0xE848d19A1B8eC79C128c3A3Fd85615b5Bf80A777",
      "txHash": "0x2158dbc8c3cce6ee11c08f16ea10175f16e64cc56d8a1e6c2e7848abff381574",
      "kind": "transparent"
    },
    {
      "address": "0x54931B5A0D291f317576674C83c884a4798F047e",
      "txHash": "0x5dc57f3ee21c604004b6d903822ef083efa619567f72290ad1784b22adf379c5",
      "kind": "transparent"
    },
    {
      "address": "0x544B0c176172cA2936727d5CAa5EBAF7c218Aea5",
      "txHash": "0x927269fa4006274295185fa8e7a41638dc960618e3e015425e5374fc892ef2e1",
      "kind": "transparent"
    },
    {
      "address": "0x1bDA85168CD5a8b1470D35080c8D0eCa8D652D5E",
      "txHash": "0xb0af6712ccdbfbdcce134e862f9e8aa060cd35f58948cc4dd1f530256b44b662",
      "kind": "transparent"
    },
    {
      "address": "0x334Ca02fAD6D356695E92137315ebd25c592EA71",
      "txHash": "0x6be0f69b2d69ebc8860fac95716018301e92495b6274a1b306a28d7690d05e5b",
      "kind": "transparent"
    },
    {
      "address": "0x4AC1d484C44f2Be4d7632681D8b9e03FB5777641",
      "txHash": "0xa71222f5527a42dc7a9fdbe150498d7f5245dde5cf76b0a4653eb243f030392b",
      "kind": "transparent"
    },
    {
      "address": "0x359D17998cca9c5b88f672e77D59b81f4D0c2BE1",
      "txHash": "0x8932af9fcab5e5566a5bfac4eaf14c5cb9e8c554bf2f6cea7cb584f97b031de8",
      "kind": "transparent"
    },
    {
      "address": "0xB8CA17C26B33716Ff579e212fCFc7920d8ba026D",
      "txHash": "0xc5fd242c8fd1fa166b70c9b3b89feb946ac932e91cd5a0e4403625f3ff80a72d",
      "kind": "transparent"
    },
    {
      "address": "0x0D08071918f50b0A4fe002e4E35882cA5AEE7D49",
      "txHash": "0xce973dc3a1961427bd584d1fdd0849b63ea38792b786816ca1733ca14d7720ad",
      "kind": "transparent"
    },
    {
      "address": "0xefeC61fE057b16f3F9aef28D3667a1b05f15E6B0",
      "txHash": "0x10280d163cd49dc0a38b45d95b57c302ace0558337ee1a1f9d3d43978166b34f",
      "kind": "transparent"
    },
    {
      "address": "0x3a9B2215cb1A4D666b11E5aA498da0b0E2c6bEd5",
      "txHash": "0xaaae68537ae016b1de12165c15c402da4ddeda6d66459e2f2cfd527a42860df3",
      "kind": "transparent"
    },
    {
      "address": "0x71926A932B2877E324C7bB28eb1459d54be88D84",
      "txHash": "0xa3aa3e73737eb7521771f992282e31e123693df301d8bd442fb471e116b11bb2",
      "kind": "transparent"
    },
    {
      "address": "0xEd1c0651ce0379a33f09242346bd2e7674463944",
      "txHash": "0x3221f6e28905448757235efa2c9fc54a76b4f69d22f5d069eb19ac47be90018e",
      "kind": "transparent"
    },
    {
      "address": "0xFD385b7E880eec0ED3706bc6b08Cfc3336e836a7",
      "txHash": "0x2af8fa0bdc576dbe0da0e86e8102c5492fa73143b78089825d3aa04348cae0e2",
      "kind": "transparent"
    },
    {
      "address": "0x12C344F0e77299846dd0cf758320Ad19cBbfEc2B",
      "txHash": "0xf871f13b9bd4ac0cd83b27d1e38be147a2f2a1b484c743aa12ed50357744fc61",
      "kind": "transparent"
    },
    {
      "address": "0x19df602bbf21Be25d93318234F31B8821625Fe8f",
      "txHash": "0x9253b6d2d3586e5feb4b586bcdfd85ff479098f10200e5822df940948bdbdc63",
      "kind": "transparent"
    },
    {
      "address": "0x2B043Ce3D57d54b7eD85FFE293086626a2B91473",
      "txHash": "0x9530d6ffa77775ee586afa30c6c0cba11da79b2b7835f03d818443294cea8009",
      "kind": "transparent"
    },
    {
      "address": "0x1647F3D5a5665741795771d9E3eD38328d240e31",
      "txHash": "0x1b80b57c8f0a207b540edaab04d36809f76bb71b1686aa8dc2c47f3ade77db17",
      "kind": "transparent"
    },
    {
      "address": "0x2D223fFE4b10499aFF84f7Dab239349990F65B58",
      "txHash": "0xefae0c5776c1b7198c1f7272186f3583d9409c02da13b81806c34252a99e2d0a",
      "kind": "transparent"
    },
    {
      "address": "0xbf88E223eeE5e59Cd4394688Cd6aB4D86438815c",
      "txHash": "0x098eb7ee40df9b7b5351ac0078c1a7188b6c57200fa08dbcecde20c27439d867",
      "kind": "transparent"
    },
    {
      "address": "0x621F9b0046205E2ed8D8A5c3Ca81dCa0F2ccB376",
      "txHash": "0xca6a52952708d8250a2c05e8c523c054ae19ca94b62822a24bd3939b8efdaff9",
      "kind": "transparent"
    },
    {
      "address": "0x35e4373beAE0abf105C94d2Ad30071D66A11bdEF",
      "txHash": "0xcf47df88230a3338ca49c3d59539fbc82f44a69c9a30878d26b3c84e521f61d6",
      "kind": "transparent"
    },
    {
      "address": "0xcFa5BE1eCb8350228cA502dBDf959E9eE324C2cF",
      "txHash": "0xe855d4ca5d6560203241e77fb4ba0bca0b82e13139c263e2a489b6e25c049f96",
      "kind": "transparent"
    },
    {
      "address": "0x15bdCA4f0C293f09330848A531751836C8480c22",
      "txHash": "0x0bed937346811948f9c37d7e08f9da6b92f697a96c40fcf0d3875a9b39efafc7",
      "kind": "transparent"
    },
    {
      "address": "0x1DDeeBc57d604e8b3ADc1E820DEEf27D048E2E6F",
      "txHash": "0xf49f1e1e409b7043a6fa2cc6128659237ec12dbe7c20732ea46b6c41e9de9704",
      "kind": "transparent"
    },
    {
      "address": "0x2c79b5F1F9fa222d99a6fE1a7FEA725ad7F630E6",
      "txHash": "0x362f1d1d8921c7914467eb9830e67cf2aed8be141cf14840f37ec12a6bafeb7d",
      "kind": "transparent"
    },
    {
      "address": "0x243F5DaBA342fF544D451E37360F41Ed4e2EF38C",
      "txHash": "0x7575df6acb1b0bc1e630d936823c43f2a19ba3cd2db50629be76f7e467a90da0",
      "kind": "transparent"
    },
    {
      "address": "0x0F942925e656fC19ebBF5240496e4309C2EF55Bc",
      "txHash": "0x3bb7c09b8a117196cbf20d74a3fcca5315f7da2e410af970de2ff3a0a81f6bff",
      "kind": "transparent"
    },
    {
      "address": "0xB0fcF1a0e17830e5f4D690e0F280b3560ecE6Fb0",
      "txHash": "0xf3ac85248922a84a625d42435a07c6aa5e75fc33d9b3ada6d4e17645aa26774a",
      "kind": "transparent"
    },
    {
      "address": "0x9f87CC6A143B6671BF5111640C8499d7D9C0971e",
      "txHash": "0x13d4a5d0c6893518753ecad533dcf6c772041b29da2cf0eb10c92f596f45e5dc",
      "kind": "transparent"
    },
    {
      "address": "0xdB7F8E3b77abC535102610dBcC478579162BF695",
      "txHash": "0x3a308c95c580f52db4ade39e70aae20bb7dfd4c2e25a3bd3f6be67441c683162",
      "kind": "transparent"
    },
    {
      "address": "0x5B6bfB5202efD7ced81Bac493E97edB3F07834D7",
      "txHash": "0xc8f43fea92be02d6eacd1702e646a159cdf08bcc432b6b46d21e86cfa2c91e9c",
      "kind": "transparent"
    },
    {
      "address": "0x0e17d24cf1BD73A46f41D0ecE25dB08d31873702",
      "txHash": "0x42fd59c599f3d2c1325b8b99ce5d900e66b02e571972b84969553a58b5744200",
      "kind": "transparent"
    },
    {
      "address": "0xA5F222331b85D226591a99FE4ca38C37fF381d3C",
      "txHash": "0x76408ed913bce9c5b0214a42bf6390bfcef86f08e4e7d4ab33e485d31033c706",
      "kind": "transparent"
    },
    {
      "address": "0x3AB1d3B8fA14272E3f9D25f02b4b4DEe6dB8280d",
      "txHash": "0x6046961b30402ab2c07cf2bfd0a2ce6764c812abae51875e301410e8997be0c5",
      "kind": "transparent"
    },
    {
      "address": "0xf4d2955baE5e47D2bE503C1489279237Cf1d29Fb",
      "txHash": "0xb961922ef88583e4275e7e06a81ccb3cfca4e2df56aebf12386f5c7e5b380b3b",
      "kind": "transparent"
    },
    {
      "address": "0xC2E1d937af1d18f12Ff237549C34a7F6d9CcBc58",
      "txHash": "0xb30d77c4d791260581e9c56110d213bdf0a077fb99c328653e39139c5bf8b27f",
      "kind": "transparent"
    },
    {
      "address": "0x32e18F2f6f87216a14C5F6bEC34E5fB1b98A2905",
      "txHash": "0x869e14680330e76f3705320c66242ef0e836a339e27e56b26466e116dbc5262a",
      "kind": "transparent"
    },
    {
      "address": "0xb8192926aD7920A02Ad27C61c6c1214E9896ccF2",
      "txHash": "0x9066043a7b92bc1940d651566b8f40f6630222fd3748be94a357fd4ce5f16109",
      "kind": "transparent"
    },
    {
      "address": "0x5dC546D37090ADeD8D8A362093466ff4Cb2F3640",
      "txHash": "0xee7c25711e39ccd06441a8717e1fded43c9910b6cdbd87798a889f764a6bba6a",
      "kind": "transparent"
    },
    {
      "address": "0x6d0566AE5ccE3396296FaC34e388a5d2906e5cC3",
      "txHash": "0x8dbdc24f5de2fd9225426550e777995728396447851297529683c8b42f89c31b",
      "kind": "transparent"
    },
    {
      "address": "0xa13e5eA9A3a3dfebdBf27CFe9B9b0Ccc3fF7ED25",
      "txHash": "0x62ff3d8d49e50bf10b62f3fe89bd3ade8149d97f527561747fbe59f8cbde3b1c",
      "kind": "transparent"
    },
    {
      "address": "0xF6d521Be89298beD349ac51D6439Bb51f7fb831A",
      "txHash": "0x86c6744e46bc2207f469d1fbbda09b1333a5e36fc3dbdcde6c1235f9b6c7be8c",
      "kind": "transparent"
    },
    {
      "address": "0x3693cA2fFAC4a80302e3Bc02304dACc28Dff9ab3",
      "txHash": "0x80a098f7e253ea1b34e4b4a403f1599296cbc2c43600c5d3cc2c95f88bffadd1",
      "kind": "transparent"
    },
    {
      "address": "0x0E20fDfb5E2305218AED531647C5166Fd261d6b4",
      "txHash": "0xd43fb71f5161c76b5722ce440fe64b0e0a60f48bcaf7d38743989c4f7e719b36",
      "kind": "transparent"
    },
    {
      "address": "0x123A74DC997D34F3ea8F7379A189717053230d4b",
      "txHash": "0x54610820f5f7ee56ba595657c1eb9274c399604fd0b5b6e5ac7f02e16feff457",
      "kind": "transparent"
    },
    {
      "address": "0xad15600271F2E59d64E30493331EE8f4c9DC44Db",
      "txHash": "0x056826ec17bfa6e0f0939e837d668d88edf5340ebd848b7f1c5792411b8de2e8",
      "kind": "transparent"
    },
    {
      "address": "0x95187D2Acca46D67Db00a163608D67C77E9f7dA2",
      "txHash": "0xb46ccaa014012925c6c056cb5858dbdafad6836ea0f65d211f835513950c9044",
      "kind": "transparent"
    },
    {
      "address": "0x4A31cf08F427fb32f09caC32B636d9B11201F6fC",
      "txHash": "0x551043e9d005ae6cacc474ba6311e3a04d15f6b7c6fe2be8b04c9f0e708392e8",
      "kind": "transparent"
    },
    {
      "address": "0x0Bb411Db3C2423b26f4F12761a63BDede9C8E25b",
      "txHash": "0x636ce5bd255c87f23df27f5238e0aa21210ce6d5bbeb0364120b677b52a89558",
      "kind": "transparent"
    },
    {
      "address": "0x642F66751C3911D590ef865B2e9f78888b135BeC",
      "txHash": "0x7976df390a9e780057fc1c59257b69afbcf34e5e47e30184e585ccd4e5dff0d7",
      "kind": "transparent"
    },
    {
      "address": "0x9a3BAB2559Fa0D4d69b1aaD05a27eedE4BCd4EfB",
      "txHash": "0x74dc683f20f60fadf22c6c65a9e9e4ef2ba8a232ec565ba111f1d57be7cc2474",
      "kind": "transparent"
    },
    {
      "address": "0x1A4Bc22B6972447020a3FEddde1DC877733Ab64D",
      "txHash": "0x4e5ef36180ff7c337bbe48dca8860cc5dc5bfff2245df3834c888810a9660c06",
      "kind": "transparent"
    },
    {
      "address": "0x25b44B84Eac1F4bDedEb6260DE66957edF4E5eB9",
      "txHash": "0x6fb0f7b16e9e043792942bcc048d4ff1b678c3e12838b8ec7731459833b71393",
      "kind": "transparent"
    },
    {
      "address": "0x75B130fca8CE3Ee55f8605EfD1505ecFcBA31702",
      "txHash": "0x63ae3f34ab208144c8277a151bb6be186081ff96cee25738794963875cd26614",
      "kind": "transparent"
    },
    {
      "address": "0x8ed528043699c5E843486b5ab1d4484e55bD7DE7",
      "txHash": "0xe1c01d6378705106d4dff74811fdca5d941de9a817ec47b01e7d997c4531ceda",
      "kind": "transparent"
    },
    {
      "address": "0xC3c3a2991667dc2aC4bBE9e4178b69B9162f09a4",
      "txHash": "0x26d1faeb82b21058a986d92f0cc8f6d21551b83efa24e5e5ed7690baf84c7bf8",
      "kind": "transparent"
    },
    {
      "address": "0xceAcbeeFf0a9aA5d118d7B1C41Df9e6Ec8fB1c9B",
      "txHash": "0xa87d389bb17c578450d06a3fcd27afd22d5a54df19f633af723604de12d2dbad",
      "kind": "transparent"
    },
    {
      "address": "0x40e9800B0224a8b45943c7E64967D389B81f601A",
      "txHash": "0x21d9d58e63faf76ba8b728c6b24243adb5f4ceb1d1f7d270c089fe1b15fed2ed",
      "kind": "transparent"
    },
    {
      "address": "0x7Eaa05471269a02776031586CF034f54892144B9",
      "txHash": "0x54b49f021fd31c54b7c38a0bbb7b9043ace518f8d4c0227725fe0843e58bff35",
      "kind": "transparent"
    },
    {
      "address": "0x8c963f03441CEeFDb4d2E8cAc6FD600B2093E50d",
      "txHash": "0xa0411ebf355babbc123711243013ec4576f3aef04db85d324dec10fba459066e",
      "kind": "transparent"
    },
    {
      "address": "0x4aE5390cd250A9dC7E775AEAE0F67c44C6557e9b",
      "txHash": "0xa4714007d45feaf72b256141186cd86a9243bccd0237278ba93e22485d098819",
      "kind": "transparent"
    },
    {
      "address": "0xFf10463afB1f2b5AEce45d2B2d2846627AE7722E",
      "txHash": "0x13c1fa68f79dfaf17da2f02c426b40c3ddb7273e5ff338c8b0391ac9a79fe17b",
      "kind": "transparent"
    },
    {
      "address": "0xD8d090eD8e274349696cD80a3498de76c8E30834",
      "txHash": "0x0528176c7aa25a4ea4284262a57f5e5223ad05d5d83fd7f753618ea59ec44eeb",
      "kind": "transparent"
    },
    {
      "address": "0xa94cDDaCeE54edbf9773484C48970125e1Be1a68",
      "txHash": "0x4c9a983be7b6093122d9832d1bd15fe5e2e87361502b1efe2ed9141adf529470",
      "kind": "transparent"
    },
    {
      "address": "0x79346b35010cdc6e06ca780B673CcC1408a61894",
      "txHash": "0xdaacb741cb9a0c4f03f67d6aa44fddf630e2f1a7554352a9be1618d8f8a2ded2",
      "kind": "transparent"
    },
    {
      "address": "0x22c4289e2cc6E1706084A48953336382aFD87C4C",
      "txHash": "0xa10bd5988cebbe3c725aa313e0f39c7181bd026c9d083e164d35f94d4285ad60",
      "kind": "transparent"
    },
    {
      "address": "0xf4175772a6F1D626B6396171fF7A7C69cf077b62",
      "txHash": "0xde95d294a1fa45d746aadeed8acfd4f229c9df75a6aee1c1f0e9c9a7e8471a8f",
      "kind": "transparent"
    },
    {
      "address": "0x2C53d80bD8C85E8a6b7A3f4b554D1d268ace3628",
      "txHash": "0xf519ce142a8ade4179b7e16bb73cecb2740d958093b0d4e51e7d12055ec3b985",
      "kind": "transparent"
    },
    {
      "address": "0x65F67727230002Fd8cAF31E2a81870D4A1B9312E",
      "txHash": "0x51fa9384ee6751881f929c7447858b038a919adc2fcf8eb60004f818e9ad0c33",
      "kind": "transparent"
    },
    {
      "address": "0x538362587c90e3ab37ffFd0A267e5956AAaE56Da",
      "txHash": "0x90dcaf0526d5b36790b713d28caf3621ae7b1f7bdfc81026cf709c52e208ff4e",
      "kind": "transparent"
    },
    {
      "address": "0xDfaCAa91b52C577143Cb5eAD526e572887270f31",
      "txHash": "0xd339e9201c3241cf42ab0b188b933d6ddcfbbf0a2757ba0b937bd27d310a9e57",
      "kind": "transparent"
    },
    {
      "address": "0x96589e1D321f7B5978a23b3c49D62e6eA29d56D0",
      "txHash": "0x9ff9328fe79f1f13b94d3bd9c8352d81de067c52afb90068fb1dc1c3ebe771f5",
      "kind": "transparent"
    },
    {
      "address": "0x0Cf408110E982cabf0Cac03dFB3A52930e15e682",
      "txHash": "0x16584e420fdb4b70d91b82a801d52d7fe29ed59bc1484e673a3389eb0f7e2c09",
      "kind": "transparent"
    },
    {
      "address": "0xF9b684eC2AA1c6B5B5aF6DdC801BC09bb9F047E9",
      "txHash": "0x960777d4f209136562ef3a441d80d533b95342f1573d0d537811318e08dd5ee9",
      "kind": "transparent"
    },
    {
      "address": "0x9E90Cb7FCb7719676B2ccA1fd2974cF54Bc33513",
      "txHash": "0x4b2298f3afef3382608b709c35f96988e95f568edcd71a9322aeebe1782f317a",
      "kind": "transparent"
    },
    {
      "address": "0x68c4bE44757D932e9F4B683a0c1aF6ABE206B8b4",
      "txHash": "0x9b65fbda58fe9e60ec2f881585e61a10d4cc6909830363fd9504590d5ea7a794",
      "kind": "transparent"
    },
    {
      "address": "0x078462754F9e1cd68FE07Dc2981552b914a084e3",
      "txHash": "0xfe4d457cbae05d314e8de43b76095a8795c20f3386935e639549f62f387108ab",
      "kind": "transparent"
    },
    {
      "address": "0x4Ba93927C6FA11844f722e65c8431Cc9617bA8cb",
      "txHash": "0xc41f87c02312cc8eb4bc3bb0f152bfbef564cdc7b3772182fdd14fd8641cb805",
      "kind": "transparent"
    },
    {
      "address": "0x361eFA6D743e770Ce62b49C6a9F99e755bECcC27",
      "txHash": "0x498f1424901a85051a67970b8ba706ff12a0c21a0896ff138dd84cfb3aeb268a",
      "kind": "transparent"
    },
    {
      "address": "0x7087de75b201F1a864b1833Ff6af190cEdbc45Ec",
      "txHash": "0x948ef4c23951ff453009311eb9b4b5da87da5eb0f9693f89ea17f0aac63d1fea",
      "kind": "transparent"
    },
    {
      "address": "0x035603233577e92b6D96D96075d4d6b9C85BCC3b",
      "txHash": "0xb5d689181c730ae12c525ced04402cba04a75e7b0c8b31cc0f4a138bb34ff0a7",
      "kind": "transparent"
    },
    {
      "address": "0xAE0153b54726A4a076f4157E22C444a95Af0E58b",
      "txHash": "0xf556a0575b42c1287533193bdf87c8e0f14dc7f47d2003d4e74c5ae2e71469f2",
      "kind": "transparent"
    },
    {
      "address": "0x32768201A481C7a4BD94eB9b6b9a74BC9B9E9c22",
      "txHash": "0xf35605ebc4dd6d16bcd02496b398e90d1bcb893532cd6a549fa8da3119171044",
      "kind": "transparent"
    },
    {
      "address": "0xEbE2d4105fa8f55f31E1B3C6a072150Cd72A36Fc",
      "txHash": "0x009acd935aa7a1e42e26acbf4ef4ffe6e9162cc17a9bcea91140f63345207553",
      "kind": "transparent"
    },
    {
      "address": "0x857D9611354aD00d5A2Aac08E43cbcc25d86A959",
      "txHash": "0x8e135ea07a8edfa2dca51dce18020a37f312548d6dc69ae990a52b1f94ba3585",
      "kind": "transparent"
    },
    {
      "address": "0x31952689066FE15640767A66e0f2641F55263fCA",
      "txHash": "0xed42bbbf2163c905997b0c767d8fd1122e9cf78a0ceaf85d67a1d79d9cf8054d",
      "kind": "transparent"
    },
    {
      "address": "0x6483617d1e68F681FdA925290000F8914749Aee3",
      "txHash": "0x839725cb43af9e99e64836530e2db9fb90cd9f0604bf6859ecd1604f727ef677",
      "kind": "transparent"
    },
    {
      "address": "0x835332542d0502facf23aDAc59dCF49f2D7eF483",
      "txHash": "0xc3c34ee283790151c5457fa98031f7421f559f804b636d7791a392e98493e2b1",
      "kind": "transparent"
    },
    {
      "address": "0x138e3cdff0fe615227c5A79488B2302f2E3ad3d9",
      "txHash": "0x36ee9dc3ce993a3b9517075c41444c73a2eda774077cce0e05d772eb0ce098f1",
      "kind": "transparent"
    },
    {
      "address": "0x3dC2F12A97c71726E769abA64C1E9b8a5e1f8c77",
      "txHash": "0x05d8e99da9a48a2b6206026c7e66a84f4c8415213037aeb50ad78df7126a03f7",
      "kind": "transparent"
    },
    {
      "address": "0x4A73ae1dAecd0fA00afFd7Ec5F846b5a96F79959",
      "txHash": "0xe566cc16e6ccf7b528ded1564947cf032021c738b911ceb44bfc0af38fb46444",
      "kind": "transparent"
    },
    {
      "address": "0xCE071eaE7956B44753DFbaDa7F21A0b43fC40F28",
      "txHash": "0xf6fbdc68544436d498744083e14498b555ef9d2fdc0d600c586d98dee0cb30b6",
      "kind": "transparent"
    },
    {
      "address": "0x1f58cB53C6d31ab5024a3a5cF6BBD3bF035Dc9a6",
      "txHash": "0x695a3b4558a219abdd7445147fee9bb581a0fda6db8d46c6fccdf463629742ce",
      "kind": "transparent"
    },
    {
      "address": "0x06F54D26c3AaB696B90845f27a133496cEa8398B",
      "txHash": "0xb957279123bad1771d415ad26dfb6aeba090e7aeac6662dec0d5e7d43f94a961",
      "kind": "transparent"
    },
    {
      "address": "0xD16A55DF6Cc51966b844b3051399b17b6Ace8Dcc",
      "txHash": "0x47a091055bd12e287ac735883522ab1a9ba59885adfbb6d0cd4745682673cf57",
      "kind": "transparent"
    },
    {
      "address": "0x59cF6028e684F63F2583c525E7170f3cDD9C2e3e",
      "txHash": "0x580ab45b4b2a83a1b65615535c91f63214d909d09f3e26c0021df0b7fa48b8a0",
      "kind": "transparent"
    },
    {
      "address": "0xC009e9481ED6cFC8600Aa3649d4ffAd10cA56A49",
      "txHash": "0x009b52c070b5d57bcc38637462135b292578069e4f65587d53118ae3fdafc4ea",
      "kind": "transparent"
    },
    {
      "address": "0x3D0f5F3cFfb0a942b5dCBdE091f27df8D0faa1c0",
      "txHash": "0x915404c9392e2d84dcbf9f330040f1dc2854973e35806e40db366870b695a304",
      "kind": "transparent"
    },
    {
      "address": "0x523bAE5fcC054BFdf2Ac0686a4405ffE5DcB78C3",
      "txHash": "0x1d5ab6ae7a7d5b90f511631bbd2a7c4beac3716b7c1a58c9381e25f554f194d2",
      "kind": "transparent"
    },
    {
      "address": "0x39ED98F77295558DdE1106D2F13ACb9578eb32fB",
      "txHash": "0xdde9cc9a5fbeeb33860e210919aa9af04f5696f9bba2c0fcb2b78e096a594cfa",
      "kind": "transparent"
    },
    {
      "address": "0x158C6fe969ABFd0D6F5C735397719293DEA0D091",
      "txHash": "0xb0cb3913d01aba0e755b650c2bc0e82a11cc18ab90ec8032573eba6676d16e4f",
      "kind": "transparent"
    },
    {
      "address": "0xEe848e93CF6bCE9db3E387FCAEE8a7E8376dB795",
      "txHash": "0x9190a098ad617505980ff635990faaa7b8e36b5f9fa065bd391bb9dff16bfb9c",
      "kind": "transparent"
    },
    {
      "address": "0xdA7D447C228669b743FadFfEd87353210bd2F904",
      "txHash": "0xb3c330f8529645b64aa0f906a90682e1f78a2604ed63e6c294864bb5e0df501f",
      "kind": "transparent"
    },
    {
      "address": "0x7ccE8B233c4cDEf97D02b9c78c6b82fB2B1F6853",
      "txHash": "0x3b888202d81333cc0ce709ad3b54dca7a755f2269b3fcb3705d8d458e2b9fb30",
      "kind": "transparent"
    },
    {
      "address": "0x29B1607841357F1d660d846FE8a3ab6F55dc0075",
      "txHash": "0x25394a9889f83582025e76f6043f0dd8d42f5635f0c1f7f7486ffb49b1aac434",
      "kind": "transparent"
    },
    {
      "address": "0x3C94e5b248A8dDE0ff5A9613Dfb300B1134cBA78",
      "txHash": "0xcd0e5f58f96606134b3fe49b6b7ab11b932c845fd03e405e553f28cfb4385ad4",
      "kind": "transparent"
    },
    {
      "address": "0xeb7c9EE27D0B8a70204c6A39518fceD11E1437Cf",
      "txHash": "0xc212507f4d43f287c89fa14dc6df3102a6e5a53700c3db35c33589b31faaec61",
      "kind": "transparent"
    },
    {
      "address": "0x6cEC18619cde231Af38DA01DA2eEA81a6C9d1Ec7",
      "txHash": "0x8e47039ab8b50ee75f8c03417cd2d415410e9ae4a3402998bd5c621cd639e121",
      "kind": "transparent"
    },
    {
      "address": "0x12648357D19aC6e65D8FEE4d52E937E4fBC8533B",
      "txHash": "0x4019ed014535132e8c78ceea7ad1710cf440514371a6fba3c007a383d12baa6f",
      "kind": "transparent"
    },
    {
      "address": "0xC875Ff38b4ca12E81F559406d573294021B67e19",
      "txHash": "0x1a01a9a8c22425217bea1f4312087f9811cc9dd71aaeb4b569cc7ef0072fe6dc",
      "kind": "transparent"
    },
    {
      "address": "0x0a950db07f850C1118BFAa3068308300300eC23D",
      "txHash": "0x1bac6d7eb3eb856114d805718d4627d737ede536f03b1402df4a73e077967bc5",
      "kind": "transparent"
    },
    {
      "address": "0xB97d8EE92797E3326f05daa0f1D599a8E38DA2df",
      "txHash": "0xec7065923a82e631d5345676558a1d9946f13184eeac9924d4adcc2edc1f6909",
      "kind": "transparent"
    },
    {
      "address": "0x278CAa8e109c745354a29Ce1fef0C2BDB67AA3E6",
      "txHash": "0xd35fd1a120e7a94b5b093a0f5ddbdb0cbe7222c4cd8ee3bddeb3b1629f382480",
      "kind": "transparent"
    },
    {
      "address": "0xf2d12BB8A2E76839fddAcA0184660F283a740a9d",
      "txHash": "0x44980c43dcd9f2a8f6daab72ceb20c1518153d24bb5544d9634d0ee15f47d85d",
      "kind": "transparent"
    },
    {
      "address": "0xbA4cc77bd9385800A0067985DF533C013BfB1DCb",
      "txHash": "0xd29d1870995c1b0702cb7890f55518c806f41674a8d4e08b99422cbeaf71a24b",
      "kind": "transparent"
    },
    {
      "address": "0xeD5A5076083dd6d4aFA0C5a3835cC2D896B02A0D",
      "txHash": "0xbac06ff0eafa70f887544b74ae863ef57ae3311fcb8b1d5ffbedd7ac4a366613",
      "kind": "transparent"
    },
    {
      "address": "0x5fAb3224dB6ea005cc24f8bf66E50629897B336d",
      "txHash": "0x1546daddbca6453a79d0c83e93d91199380e36f70180cba2f8742c1d0ba688b4",
      "kind": "transparent"
    },
    {
      "address": "0x518becB03086d12c2fF38AD2B8e3510a57F0fc9d",
      "txHash": "0x4303c8cb6094a87ecdcd376f7af143f2145f79a24f2c2addc82e3ccacab85722",
      "kind": "transparent"
    },
    {
      "address": "0xB5a49D5C6A875E9Dd45c772175aaaA2755e260d0",
      "txHash": "0x749041783b5a1a69e6b3fdbc824c439607e1ae6a141c827ac89cf5119b80f371",
      "kind": "transparent"
    },
    {
      "address": "0x58B3f84d4736A479B5FBf82558f1Baa837939B64",
      "txHash": "0xcb2c1e597ba563c576d47fa993ba52b08337d0e4f7c689bc4cfc06d7e0d8cf9f",
      "kind": "transparent"
    },
    {
      "address": "0xC1978EBB5318c076DAB0f5554C7ce57AE3667b5B",
      "txHash": "0x8f13865499c6370b6d6200fc349445f8c28365b3f7cf4c2dd0d2fd4d173f41c5",
      "kind": "transparent"
    },
    {
      "address": "0xb1c9515Da403a12a0e83Fd7136b230e09387bcBA",
      "txHash": "0xe889d046ae9bbd516e8d84923b5229445663866da2f4b4333bd6ed0ef24d6dbe",
      "kind": "transparent"
    },
    {
      "address": "0x4eD13b9CFB4d3E43EED25A38AfD8B791a8b290AA",
      "txHash": "0xfef3571c6a00cc8a476d67569dcc9715f124e1d6f7b5a9a0ea029bb82b851b6b",
      "kind": "transparent"
    },
    {
      "address": "0xC645a1DBe9A8a86d15b945d24DE03BD2Ab8E48ec",
      "txHash": "0x6d21c87ae20c43f4d022ed3a6b627ff165069d972ff59d5f24d0fd785fd5f96c",
      "kind": "transparent"
    },
    {
      "address": "0x2Db28CBb3723477F80B3701568A29311967F123b",
      "txHash": "0xca52972d23d8104b1b99e7210bae0a2c81aad58191e35b04677d5349209b5b82",
      "kind": "transparent"
    },
    {
      "address": "0xafF317cEDaf49db26c0674AFd406619f6D707315",
      "txHash": "0xc7ed177a0f78bd7f6fe50b31250ad852ed5a80692f4ee7ad66e404e0d464eb7f",
      "kind": "transparent"
    },
    {
      "address": "0x9c38C57c7aAe5A1A5145D436ee272685F29Af34E",
      "txHash": "0x4b83743b970062f258b29c5561194d8a2ba11ecc9a9c7d71b493bf6458987f75",
      "kind": "transparent"
    },
    {
      "address": "0x3A1cCE0126b5B9Cf5a8B73695931d92C2BDe6f03",
      "txHash": "0x799145fe87243544d3bfbb52390d2904cc8cde0d3cd2bae37795cf1deba5cf47",
      "kind": "transparent"
    },
    {
      "address": "0xAc2D571d3F3B8F6114e477b3E95d8384D4F39dA7",
      "txHash": "0x753ce98c6fa414dba0d0bf770c680b9fa26a269b93ed1b4bfd0ab08648e704ea",
      "kind": "transparent"
    },
    {
      "address": "0x99FF7b546eE61002C69f958F03813F44A28051b3",
      "txHash": "0x5b05f19ddb1f1068521f9162ebf3f0780062c928bfc5f4184536c75571887e27",
      "kind": "transparent"
    },
    {
      "address": "0x53940B350F6954B3cc3d489971F8fDC8415c4a42",
      "txHash": "0x13a209b099533a00828a7d24048d16d4dd6e6c4882fbaf83f4a5c434feecb6d6",
      "kind": "transparent"
    },
    {
      "address": "0xbd8Ae103122cE5D9702632cD691d87c9903e5801",
      "txHash": "0x5ea6e907454b696d39d3c689c5348f36d66b7f5928c75e414495b771fd2aeaf8",
      "kind": "transparent"
    },
    {
      "address": "0x3F91da8D4611aEE80D2437090DB47301Ce77Bc18",
      "txHash": "0x1e2924859ed2af96a944bc5a4496ae9bc772c17c2fb1de669d33e5ae83d55ee0",
      "kind": "transparent"
    },
    {
      "address": "0xD77F909eBF8e9188C17ee15E8CE4d3aDb6525d27",
      "txHash": "0x3c1bfb1594fa78513dd131027ff8cd679ce013f0adaa800cab6c9a6e1e050216",
      "kind": "transparent"
    },
    {
      "address": "0x9D1D09f83F8c43b4a3D2176AD41Ef5cadE4f50eC",
      "txHash": "0x1308506c31ecf6a8a897d5fba794645053fdfde0e70fe99256517c632eaa9e76",
      "kind": "transparent"
    },
    {
      "address": "0xe209fFb610C782BB3c78ECec83f1fA71eDcaA39b",
      "txHash": "0xe37fe0aeada7c8a43bfa809a1e5d262a5ac383259bd59fa28723ca39975d441d",
      "kind": "transparent"
    },
    {
      "address": "0xCcb007e3d71BAba93fA997fB6323760d8F303F06",
      "txHash": "0x6fe72c1da57382d3eadee912795c5e79a717de213c4cd9baba9dc5f31b9c804c",
      "kind": "transparent"
    },
    {
      "address": "0x254cC4542E1D618A395319d36355875628D8D8d4",
      "txHash": "0x08e4bd13fb6b3dfe48a95c2cb0a57afeadd0285005e83260e0564a3a3b1b32dd",
      "kind": "transparent"
    },
    {
      "address": "0xc8758179f335681B6bEf74e0F441e5aF9d76CFb6",
      "txHash": "0xbda695a01197d1a08ea9eee5c7883ab61ea3e3f6b38e0ed07523e49e0a9b3801",
      "kind": "transparent"
    },
    {
      "address": "0x44bbc19c9CBe5b506A45a3CD9247e58B47375bdc",
      "txHash": "0x5ae4af4d7bba79b9a53ff28e2fccc33194709520dadce1116efca95ae0dacf7c",
      "kind": "transparent"
    },
    {
      "address": "0x0837002372aaaD05f15390dEc1B555af2B113f7c",
      "txHash": "0xb6dd280a0fc41ba65ebc5eda51043de4a25b06ba3d680fa1f8341fd505f141d2",
      "kind": "transparent"
    },
    {
      "address": "0x77C72f3bCcB4bD9598457D2AE1A61A2581c540d4",
      "txHash": "0x5ccb47e2eadbe16ba964e251e53d7298030c16201b9e78b111c32b8bf34446c4",
      "kind": "transparent"
    },
    {
      "address": "0x7E72176bbA60BE8F8ce57f270c57f829a991FE03",
      "txHash": "0x564ca56cc07275c989cc696af7dacab88a2b12dab9dbdfb2fdc9a29ab64e37d6",
      "kind": "transparent"
    },
    {
      "address": "0x6f4e26C68e9d564498254528754d6cA456079172",
      "txHash": "0xcf1488bb3622bca676e7e7b14a2e8acf6fbe35e3dffba07fe30b39c91a90cacb",
      "kind": "transparent"
    },
    {
      "address": "0xd08a632E34617b247681978DcB74a2395F844F20",
      "txHash": "0x81c0875970f984feef24858ef30da27fa9e68191480e80e4be33def9e4326e94",
      "kind": "transparent"
    },
    {
      "address": "0x618E0E32b5209BB4A87972cBAfb3060BE3C070b3",
      "txHash": "0x797512f847d6a2ffc605d5d185d881da6c49b71662f8098f19a8bfebcc17d563",
      "kind": "transparent"
    },
    {
      "address": "0x34723fa920326Ade5b5350B1e0EdFd594ebF882B",
      "txHash": "0x82b9c661f2364110350c491d7f9bb34d59c2599c681223f110564026b6753755",
      "kind": "transparent"
    },
    {
      "address": "0xD9a0f9F49F2cb760fE352110B9DB6B1Aa119EA44",
      "txHash": "0x465c666657e6206fe6b09c8feb1989f84b337e0b4c27b0c6c9d9da813da4e873",
      "kind": "transparent"
    },
    {
      "address": "0x1DbEF0b5A4e64DB83721B6b1C6B957e9bf44929B",
      "txHash": "0x1be9b01dd534714815e4c52d72cee40bf43cce30affc528b1f079c00709fbc7f",
      "kind": "transparent"
    },
    {
      "address": "0x69ee43aaB5b2A24Bf87ab767D710db451eca319E",
      "txHash": "0x00953bd61e0d6dc39c5acf2c2f0399288d4f4226689cb4c46a038b857a5ab2a6",
      "kind": "transparent"
    },
    {
      "address": "0x603E27f23D6276D5D11F22Aa401215f8f9ebb6bD",
      "txHash": "0xd0e0c3046cb568da16b950765481511d6ba555ee815c909a957479aaf32a0f7c",
      "kind": "transparent"
    },
    {
      "address": "0xC6A0B1Bcd8a4B4a1d34e9b2F926e646F783e5A45",
      "txHash": "0xecda212233ed0577fa87751bc241fc7cccf0223edb229001c85e8d263f2d6e1c",
      "kind": "transparent"
    },
    {
      "address": "0x78a931bB39d8aD1A803Af503e5A80ceb4f7dA9fC",
      "txHash": "0x3511a4a8204f8189f3c585588688f176174ffa8b121d12947a9f64f2355904eb",
      "kind": "transparent"
    },
    {
      "address": "0x68345Ac4D53a2D516863728a5cA2bE67BB198126",
      "txHash": "0xb440d4d9cb5e1490392dca4072898d800a595336afe3e14c4a78964627c795b4",
      "kind": "transparent"
    },
    {
      "address": "0x755391a8fd67f5ad216Faf002628Eab38eE64320",
      "txHash": "0x6442d756f01c0bdb7140a3cb6b44f9841af086aa321e808f377123f75b903b82",
      "kind": "transparent"
    },
    {
      "address": "0x5214dE5Cdf672b73979EF49e648460b1715d8804",
      "txHash": "0x8425618dfc95561b25bfe2e4b24b6f540b8e28fdb5afa16a16ebdbeeef0b6345",
      "kind": "transparent"
    },
    {
      "address": "0x3ba560F2DC48fE86747C018c6b48fCEf53263857",
      "txHash": "0x874b19aa9dd6a8c82ec825af677a57d5cdf9182df23c64c09517d937a399d271",
      "kind": "transparent"
    },
    {
      "address": "0x7ec521797C5E56edF51909e91cdbA0410f0565b4",
      "txHash": "0x2f3c76997ca979f834b05baa40bbca236c406750ec6b16508ef4a48d3c275ef7",
      "kind": "transparent"
    },
    {
      "address": "0x7D93F6967C6d2f10C73b4450Eadc1Ec5a2a484CA",
      "txHash": "0x0b8256d1f9080eb7553e8c99f4a182f827254ca67a9c4350ae0eea958dea8b15",
      "kind": "transparent"
    },
    {
      "address": "0x473543b968645A4Aba84De5f9D049429062e9D96",
      "txHash": "0xec889252f791af8dab3e12c0c9e0dd0251bfe06abc409180a73d4ab6f07b756b",
      "kind": "transparent"
    },
    {
      "address": "0x2034870f73A154aBEB99Eac697a9F418Ef2a1c17",
      "txHash": "0x00b0f14e86c78de329644be978e24757227464d2609f18d2041b558bc4e3f923",
      "kind": "transparent"
    },
    {
      "address": "0xa288EA89be00611754C9Ec70333d8a3F28f662Dd",
      "txHash": "0xea99c528d11244b0acb27d107f33f18a7e3cdc275f0575140dda70ceeaa93655",
      "kind": "transparent"
    },
    {
      "address": "0x0Ea8C72d8Be4fC83e1D7Fa900b59b697Bfc0bF7A",
      "txHash": "0x1017775349886b9fa0c35eb8bac4c7a450b72f2ce9474bcab6d151a27ac2dbb1",
      "kind": "transparent"
    },
    {
      "address": "0x4A3226FD20B713c176Df0421DbB74B2BfDdf6FC2",
      "txHash": "0x4214ace3cca75eb9ff7046df184957e0a09c045c7ebe1ae639841f5136be3ee8",
      "kind": "transparent"
    },
    {
      "address": "0x57E2f435A8b4e9d5B4d18EC11a4037376F799427",
      "txHash": "0x4a9a3f8a57fc109f1ad9475173182b80d757f8bc0d2f86f9860ba97bc12b2b66",
      "kind": "transparent"
    },
    {
      "address": "0x79d8B86CC855e7B7BFa09C4F4Fcd1cD599E57B49",
      "txHash": "0xe45f8aa2485fb32a66b6f8e8b6ccc281d4da59da2e84e4789f5462dfed770b65",
      "kind": "transparent"
    },
    {
      "address": "0xd4579C4bD2Ba4Ae75FE53789003562b6E5Df374B",
      "txHash": "0x7f7266e3d6a029a1b2e4b38538d52c6190b6aef73a83df22e2a80b89b3a893c9",
      "kind": "transparent"
    },
    {
      "address": "0xb4CCC442DDE37B3989696fC5EFca71ce6FAa8b1D",
      "txHash": "0x76153a1e263108f67ec00896db6f9f8e1606ca6e03a1a82c484fe97d0908d9d8",
      "kind": "transparent"
    },
    {
      "address": "0xaB3Aa92672f90cC9a5222F128aF27cF61EfF48aE",
      "txHash": "0x97af0ea61196b29217cb4e7228a6e394ad6f672539caac39fca6d3e254e8cdf8",
      "kind": "transparent"
    },
    {
      "address": "0x41074076B30feE2765c98823A40823BfAab47f55",
      "txHash": "0xb18f2dcafdc92eb360c59aa43d385737db58f9965e097651c95b92a6bdd74f93",
      "kind": "transparent"
    },
    {
      "address": "0x1DCd76eEc23a8abd66b5b4E79050B7522B1aB79C",
      "txHash": "0xa3f871f148346be5317453f312dd67a0c64c367fe7743b10c41df7fa004b678d",
      "kind": "transparent"
    },
    {
      "address": "0xaA0D195aE983DcE884aF216013E586ba68b6a156",
      "txHash": "0x853fcbc461720bf67950f2ce3b38dc8a77817c9e289a5ab8c08a6c0929627b7f",
      "kind": "transparent"
    },
    {
      "address": "0xC56246d2f0EE2f9d407Db6f7B1cED76421075c2e",
      "txHash": "0xe60b7373e555f75b8cae899527bc63a72ab9f9ca8c4b1fcc09862ba41425c9b3",
      "kind": "transparent"
    },
    {
      "address": "0x4eb416E929FB637Bd51Aa122d5d4F2389d00A1CF",
      "txHash": "0xbae0de4fdfaf7021bb3a7c02e24a4295509103c55ec8b20071b0136a775042e0",
      "kind": "transparent"
    },
    {
      "address": "0x061E32A7B85Ae683c2A8834B1f571b3c14E70350",
      "txHash": "0xf7268b9296c2085ca13c96a35c36a3c2c4fdb22020876c9498832ebd41bfac5d",
      "kind": "transparent"
    },
    {
      "address": "0xDE0E938a120C1Ed547442BF194302d1660094745",
      "txHash": "0x180886564efb9e4327dc5f1ff94cee0141004ac11d1c001483ba33383ece638b",
      "kind": "transparent"
    },
    {
      "address": "0x7F4c0F3EB14f05ccDF556fe0A1a27CFAf929FAe6",
      "txHash": "0xb948b21aa88397d2b7848393b5c152bfdca523258ee14c6ebee09df6634f4927",
      "kind": "transparent"
    },
    {
      "address": "0x36D01F87eCF42C24DA1c3Dc895335188fdE58Eca",
      "txHash": "0x63cdf3f42b98ba5b8140b3d669251743fa4ba8b866a8f2f9a15b4b026c7617e1",
      "kind": "transparent"
    },
    {
      "address": "0x69b2Ca54243B5C1158fF79d67A73f6c83EE01Bc5",
      "txHash": "0xeb02631972dff921a2fc71b0500fa80c376cc856edc5d561b55189a7afc55a12",
      "kind": "transparent"
    },
    {
      "address": "0xDe711F18a1a3475e66175582e17A0055577200DE",
      "txHash": "0x985e5052c3edab2305b97e9d8667c67e74cf04fb1bc0fa3065a04192dc68e718",
      "kind": "transparent"
    },
    {
      "address": "0x18897dea703CbFd66FB28669BF4525aeE310c97d",
      "txHash": "0xfad935f28bb83ef97891b8af8d8bf632cfa80daaeed3c6f7739bc27c5ce3616a",
      "kind": "transparent"
    },
    {
      "address": "0xFEFA0c65A859f1a554B41104CB64463560fA7d76",
      "txHash": "0x6173b2866eef02ce5132d5973c17c2f60ee4c0616becf3ab270bb34de8c5c677",
      "kind": "transparent"
    },
    {
      "address": "0xBF941D6EAea92Ea05c4f2fF11e3BCc163cEe13a4",
      "txHash": "0xe3e2df5ed1592a31240f6d0076e72f127a1be234aeb74c21d874b4e43463323a",
      "kind": "transparent"
    },
    {
      "address": "0xfC4fab745C6CDB166C90f81C853764e1130Fed80",
      "txHash": "0x736fe2ffd28bba779e3eb859f4278ae998cb30a503b40f98ce11ce356cf2d33b",
      "kind": "transparent"
    },
    {
      "address": "0xD2287900Bb751Fa0540c3e1b1dAA366fdE7cc6b6",
      "txHash": "0x1f1c39e3e4ae9a7a38758a6133e46e87a51519c0d703d92b649f9c7b3f635411",
      "kind": "transparent"
    },
    {
      "address": "0x20349102203cc4E5730A880c21ED121B7b2B7e6D",
      "txHash": "0x740cd25297ff4f918fe151bb3e7579ec780c3d1a43c538eb224fe8f2f84fc129",
      "kind": "transparent"
    },
    {
      "address": "0xAC1D7dCC2D9037Ad9a12db531593534ca58Ed60c",
      "txHash": "0x6b20532209a17fa1f2cf1d902bac5682eb7b21f5c3899fbd637971c810778f9e",
      "kind": "transparent"
    },
    {
      "address": "0xD639fdD499A62b1417016bBC61988211E8633b10",
      "txHash": "0xe20e3bbb98b6c386ee9db1c81c8e375b4a89277761fc6f7b44c663b427965cd2",
      "kind": "transparent"
    },
    {
      "address": "0xdD3aBFFF9F5e3691cE3AF5dcD8024756548798cc",
      "txHash": "0x7508bdc7386173501d8b5fbf97110b0f44729babd515bf02d67de186b2c36d4e",
      "kind": "transparent"
    },
    {
      "address": "0x75D46DE2788d7cca2C7d92e7d8788dc58f4E6992",
      "txHash": "0xc40858e590632f4aa69501ac707c2c71ba380150730c63191b554418b43e330e",
      "kind": "transparent"
    },
    {
      "address": "0x25a637a833eDb19848BA01c28a19E00f301627b0",
      "txHash": "0xb6f81c1b8c05546a881494ac6b3e5a58dc5bf4ca03a2dba505eeed74cb0e9274",
      "kind": "transparent"
    },
    {
      "address": "0x17413F6B8358344f669b9fc562353F6B6200595F",
      "txHash": "0xb1686e125ffb9d5fd7986f063cbe5aaea15a996687acd658c0581b6c85a0a622",
      "kind": "transparent"
    },
    {
      "address": "0xC0355Fa58FAa6f690AaEf4fe6E9A65e8C914db0C",
      "txHash": "0x80a4abd9de8cbe8343dd42ffd7cd242837d89195b7cdd14aef542a59ceafde67",
      "kind": "transparent"
    },
    {
      "address": "0x2C4779eAd1e28564Dd061F2b40C395F49457006f",
      "txHash": "0x63f9600181417c6aca0e264abf67d1d6d19d36f6a48907b79a77cdc52a1dcb0c",
      "kind": "transparent"
    },
    {
      "address": "0xbDeE633F5944F37dB59F671188B40Cc8fbbFaBd4",
      "txHash": "0x1194b2001ec6dbdb291b9f68a23a15b90c61810f8a60bad52eb7f804491cc0f4",
      "kind": "transparent"
    },
    {
      "address": "0x7aa5C09108F2b809266C30Da1c87A7FC4CdeAf01",
      "txHash": "0x11bbf516e2f3e7dcfb3d8f6323e3a3d743a36988e59c2d37de7a3fbe1a05d666",
      "kind": "transparent"
    },
    {
      "address": "0x6d5a7ec6908Ef224Ad2516f862892687DC1B3Aac",
      "txHash": "0x315ec8b828c746c9cea3a8a65f2c41cb79f377f251deada989ca2c61b24ecda8",
      "kind": "transparent"
    },
    {
      "address": "0x7b91868dC6A086A2Fb564057E57A74127037a503",
      "txHash": "0xd0c92c41f5ebc9681bad78a8ebeab69800eda30b0effdeeff594136301f209cf",
      "kind": "transparent"
    },
    {
      "address": "0x234C4C4f1E352d02943D2B5567811f62B9A46345",
      "txHash": "0xeaf955aff24dfc66d17edd1275b7b4bdc77dc6ce846ef033a2f2b129af32d207",
      "kind": "transparent"
    },
    {
      "address": "0x12cD80d523Ae8bC849317E859Aea41Dc980239d3",
      "txHash": "0xb0a6d01cca81650f70388fdace9a9ed19ba0e9712e156f051342feac817e26b8",
      "kind": "transparent"
    },
    {
      "address": "0xF90521CdA90EeB3c304B1B8B032B5dA43D53E2c0",
      "txHash": "0x3d016b8ffac05a25fa1e5c383caf7599fb6f2713370db9b43ad3b0049a6716d5",
      "kind": "transparent"
    },
    {
      "address": "0xA22f7D63684854d1Fa6438a2dC9951b5d2feF087",
      "txHash": "0x20bec1f2d86fd387daf2f85d4655b129ec716a378b9913dc72cb4deb3ee99408",
      "kind": "transparent"
    },
    {
      "address": "0x5DAb20E477d5576A0C03e1928A7632C8c9D71D84",
      "txHash": "0x83f3d69ddd104d56b70f9e1a9a45244e6a97233ab135cdfa542fcb2bf0dc8d87",
      "kind": "transparent"
    },
    {
      "address": "0xD445b99d29596be3DFBb5104D772588a0daA9B40",
      "txHash": "0xfdad8a514d9bf0abfddc4272c9d574ce1053e22a1bce8415b32620ad2e07b328",
      "kind": "transparent"
    },
    {
      "address": "0x6b39c39cF661f91264B76e41770Eb8d99CeA58C6",
      "txHash": "0xa01d14c2b382bc0123b422a2851e784f63739049de1a7b310ecda35ac827c88e",
      "kind": "transparent"
    },
    {
      "address": "0x4AEFAa2Bb55a80B6b116B9f7403F5101Fe8f8e17",
      "txHash": "0x563ba63e73c5c0125d5e96a3b3e19cc6bda71bc454b53a9578757ce372d305d7",
      "kind": "transparent"
    },
    {
      "address": "0xF437b6cB1A12abAa6A05b5915B81cb819a4aC1ED",
      "txHash": "0xbaa62c2ff41144ba9adf217754c232f82d22c9cbdf1b59b6d42896118a824e60",
      "kind": "transparent"
    },
    {
      "address": "0x269571D571FF154750996178C72D28cBcE9fD8c1",
      "txHash": "0x78b36f0c49f5eebee9075546e2aac6c61d97ecbb37bbda4461479235950184af",
      "kind": "transparent"
    },
    {
      "address": "0x45eDfaD333475e371e95ED85F235Dd2b043c6B7f",
      "txHash": "0x1a6cd6812ca7f52a28045c0ca0518402bff4aa193ef38d8b8b9accb504e7158c",
      "kind": "transparent"
    },
    {
      "address": "0xE16B62F223979591Edaa307058a92735C52D1861",
      "txHash": "0xf87cb008403afef244e1c0c11fb4073af4d50234cc464e52498f5fa3c6b5995f",
      "kind": "transparent"
    },
    {
      "address": "0x86F69474a582dDC5A03435CC2A0EaC2ccF1DF56f",
      "txHash": "0x2784576e2b901533f1d52c4220d66b40dcb41dc59905a3cb458df356367747ba",
      "kind": "transparent"
    },
    {
      "address": "0x586e0eeC06cF1B8eFFC9FDcA86E867150dcfF4fA",
      "txHash": "0x513e19b0f258af17172dd484a6d95f0c70c1df92d52fc27108a122f3a4314a12",
      "kind": "transparent"
    },
    {
      "address": "0xE421167311f49b32F4E76fb359944259F86091fE",
      "txHash": "0xb0bb01cc80fd2310df4a6e0315d5ef726ede13cbc3178a72ccf1ad6cb77e21d3",
      "kind": "transparent"
    },
    {
      "address": "0xdE4AD233F8A816E0eAe32A57E097F334D126C488",
      "txHash": "0x21555374b03fd5c00b7d5484dec09176a29b092bf133df28fcbbd02b93b856eb",
      "kind": "transparent"
    },
    {
      "address": "0xdB79E6F36cB5b306257136d3a4A32A3C682f3147",
      "txHash": "0x8d4815c139f9256ca5fb4d496a6b173c4872a99fbcb244b10fd7d8a80e73b510",
      "kind": "transparent"
    },
    {
      "address": "0x288A6B71eF866054CCDc6a6cA0d78dB13FedA8f7",
      "txHash": "0xe2437926580749f46e9d0b5f33b1c8e03b5968b4b188b92174dbeae18ae7073f",
      "kind": "transparent"
    },
    {
      "address": "0x0740c872B90Ce907C118C70fc9ae8b885e0FC92f",
      "txHash": "0x140ad73f71dece9321a4d6a24fb0b1a022fd9b2b68459e7fa4074ac627b02f34",
      "kind": "transparent"
    },
    {
      "address": "0x69b58E5d5F9Eea330C5627E7FBF5516Bf8B1Bbdd",
      "txHash": "0x7f150584fa01ca8ea8f18d6b5598894a4ab8baf072c9ea3ad85f9ea423f15605",
      "kind": "transparent"
    },
    {
      "address": "0x0D9F28F17F21fd154D2B22B6881B4BA0E26236e8",
      "txHash": "0xcb803bcef9dcc7140cb35cbb740a0c669a12df11618e646e43e2b4adfa739345",
      "kind": "transparent"
    },
    {
      "address": "0x08A444696F71Fe0014D34579C87Fe4D0AB856bCD",
      "txHash": "0x5590eb20750c19235f77ec9467ce77081f679eec21b97ffcd017e3150a7c4e89",
      "kind": "transparent"
    },
    {
      "address": "0xeBC156ab1605B6c47D5d1dBecB526B4eF2bDEAc0",
      "txHash": "0x6024c861ede7bed356b997f22e04512472789565ba1c33d7877255e61b3b3bda",
      "kind": "transparent"
    },
    {
      "address": "0xf1179E39B2372bf5Ee1243962716Fc1f6a4CEaF3",
      "txHash": "0x0cfc161ff8ef1b2a10b91567a260c07b8899db294ec00013fa8d2046cd29d29b",
      "kind": "transparent"
    },
    {
      "address": "0x697E8Ec2E984cef5f5CB37f38757b05C0966032c",
      "txHash": "0x867781f60a6816f75d94019f0ec68e4b46ec9365ccc3c0c0460846e5fd636a2d",
      "kind": "transparent"
    },
    {
      "address": "0x923017331834393cD7e098d6EC627F31f867e442",
      "txHash": "0x0badd961866846970caebf43a582242e6ea19e42ccee05fb6e4e0113fc93a28a",
      "kind": "transparent"
    },
    {
      "address": "0x7811FB938B9FA83730c9Ef6602aAaBA907235599",
      "txHash": "0x97a08d6e3e3c45ba58235722c32c06887587b76ba5f809ac587d5394afa16df5",
      "kind": "transparent"
    },
    {
      "address": "0x0AdE3c77ADa5E475BDcC45C2A17D03F170EA37cE",
      "txHash": "0xdef7eedeceaccf1111e4bd0deb148f74860fea84d3ca302929319517ff52fcab",
      "kind": "transparent"
    },
    {
      "address": "0x6b62874cf1575a97DF1eBF654982A77296c128bb",
      "txHash": "0xf39fd7c4dd923271313eda53585f7abd8053cde2851dafb6059dcf7e84c33a88",
      "kind": "transparent"
    },
    {
      "address": "0x7b25BDE38d63a2E4Dd13Ca828001589C3Ff972a5",
      "txHash": "0x3e95dfad4b3c9b5ea3ca0759dbceee5e4ff57f8e00c2614c09bcef4cbc19c0a4",
      "kind": "transparent"
    },
    {
      "address": "0xe4504E5E980d6ed8Cc68076D77aD05B1Cd128D6D",
      "txHash": "0xef0959b906ea4336a33c853d8f54725188a758afbfbc37fc4741e5c24666c748",
      "kind": "transparent"
    },
    {
      "address": "0x162306fB0d8B4Ba3560Ad6B8a7e024947373c6f2",
      "txHash": "0x550562799c0103579a28c1f54b51df872f978cf1e57e1a08f7c406c7befb3770",
      "kind": "transparent"
    },
    {
      "address": "0x0aFcE7376ea37525DD46e159b9C117b89bfBd42b",
      "txHash": "0xe05f66d1cf90361e217f74552ec9d54c9cbce649e5bd7ff114118598660daac5",
      "kind": "transparent"
    },
    {
      "address": "0x2fD51662504DC667D12e4a9F4965df052F8D0ED3",
      "txHash": "0xa72f21a826bd4e06b6851f532578a751eb8a7cfa32963ca750bd0e5f25fd1575",
      "kind": "transparent"
    },
    {
      "address": "0x6867B86fe1A71C09CFA35df3DE11580Ee7dE96A2",
      "txHash": "0xe6f0fec4e822e1b13e17227ffc1b2d24a9ca2ee463adf6eb2c72f0b0abfacbb4",
      "kind": "transparent"
    },
    {
      "address": "0xEc9bdA25Ec5Dff8F3a169eF0e534FB33a3c2BC13",
      "txHash": "0xa5c40079b9f0640a73a6e5ff1f371478eb7880a04e0dd373830095f346be3467",
      "kind": "transparent"
    },
    {
      "address": "0x0f0AA15d9DD511b4eC7317A0Bb6Eb6410722a541",
      "txHash": "0x4aa2fcb695aa01f7308df4ba2468064ea2a1742afd19e414a60748c59329687a",
      "kind": "transparent"
    },
    {
      "address": "0xBc6aE88edaabd636bb733F8E2C276Afa98674c9b",
      "txHash": "0x1e3be463549782bb0576594013b21b55ae3008189866ef159ab0fd1908d01696",
      "kind": "transparent"
    },
    {
      "address": "0x96875Bb61b915259EE06cd20EcE3A4860cACc158",
      "txHash": "0xe812731941a6c4e003daf6920ae4136fd7b6b6e2bb0673632e381034171f3d69",
      "kind": "transparent"
    },
    {
      "address": "0x8E80DD5bc4d62c4a5Fe7E0768E582f1703c407a7",
      "txHash": "0xbf32896d490d217b1b4301af11955742236b4cc66e7ff00ca8d4124c7b35b4c8",
      "kind": "transparent"
    },
    {
      "address": "0x4f507D0310b487c447CA9aC1bb347E148C448879",
      "txHash": "0x9ddcd8cc4366c771e3027490c12525ba4b1c486460966c1579439674e65c9afd",
      "kind": "transparent"
    },
    {
      "address": "0xFB55720B8a113663eEc7bd5b1B2c2E7df6e932D7",
      "txHash": "0x698ae0a9ff13ecf13e72b8bfa932b038c13200f3751f7775d0ab9a9d2a75c464",
      "kind": "transparent"
    },
    {
      "address": "0xf8Df4C30EBB54E1ecd13DC8371c9FDfD61a91B7F",
      "txHash": "0x69f2d0aa76ae7f5b9c1cb8a7388b2eef6fa1928713a75037a1d7e1d4b844766c",
      "kind": "transparent"
    },
    {
      "address": "0xFd0373a07db2c225D84fF4eF559B7A5e4f4B76C3",
      "txHash": "0x098efb3fff70eb4e4f4d6e0e2da5a34acd6457423d03f64d7d1fb67de85fc6b3",
      "kind": "transparent"
    },
    {
      "address": "0x21CF88E0433E309ba12a67235a766D65161B663D",
      "txHash": "0x8e1bd23af8a30582338bcf2b9861f81d3beb618c5a249bbfa94443c68576c762",
      "kind": "transparent"
    },
    {
      "address": "0x366370790962cc2f2815c062FBD230bC97935dDf",
      "txHash": "0xff36354e0c3f45c53ae4d06eddfce89e0eeb80e414383268211c4ca0e40177d5",
      "kind": "transparent"
    },
    {
      "address": "0x2141785593da4574dEAeF24263Dac4DD63c63315",
      "txHash": "0xf564a764161ac8b25c530bf4a512214dc377fdbfd609f5c15be183d6771abd27",
      "kind": "transparent"
    },
    {
      "address": "0xD88b7206819131C38051A4fbEf6b6FE52e4efb70",
      "txHash": "0xb2949a4bc89d1607f88670f47f548805a93c90be065ba972d5443480c5b66edd",
      "kind": "transparent"
    },
    {
      "address": "0x687cE7781967C50B33Af626D5ab093304CaF10d4",
      "txHash": "0xc6dc0bbdfab4cd9b6ec9fec930cdf386a65dd799b425d249d68cbb8300e0f47e",
      "kind": "transparent"
    },
    {
      "address": "0x5e537d2Afdc9dE396c370eE71F83Dab0ea1f9432",
      "txHash": "0x614045d28ea7a9f342859d3e48cdb27c7907da0c44bafa88c8e199d648bb8437",
      "kind": "transparent"
    },
    {
      "address": "0xe69e4B5DdE1B7940Eb20Ec412d1c7663bFA2DB8C",
      "txHash": "0x5d8c0961a8888d074786c7eee0236c7a459b277eb643f2908021898429a4a710",
      "kind": "transparent"
    },
    {
      "address": "0xBB31EA901c2c39C7b09692E68511c860acf3f6d9",
      "txHash": "0x24eadf5fd452edbbf0606fbc28fb2383b4bb7456c73ab122c7e7b420a8337a0c",
      "kind": "transparent"
    },
    {
      "address": "0x6f455733E226AAc418BB23FeEAa874279cf2060f",
      "txHash": "0xf379e552e27e4265a707e848090a31535a6316604434256e028a2410d496a84a",
      "kind": "transparent"
    },
    {
      "address": "0x7beb6084219FFf961111ec0BbF3b6C2453928837",
      "txHash": "0xf84d96311c26aea3bb48022098eac098a349c8278d06c34597693469d5dbca3c",
      "kind": "transparent"
    },
    {
      "address": "0xbf843A0bC34dc4bd5161e847C4b283A3D8173F7E",
      "txHash": "0x09cd265cb3445627e191333a3503f47f981a6bf56643b4ab803cfc33686eae4c",
      "kind": "transparent"
    },
    {
      "address": "0xFB46267851fAe60837fbdB0c6Bb0bd5B2384bC3F",
      "txHash": "0x3fa9dd3608276472485765eba7e4617497f6d563750d7b476934871d035250b0",
      "kind": "transparent"
    },
    {
      "address": "0x627dFCDcD4fb617C4b4f1346DF3bae9362072CfA",
      "txHash": "0x8d90af56aec7e933f4de85419e1beb021f2ee2687e45ed87c5b9b0677eafb074",
      "kind": "transparent"
    },
    {
      "address": "0xf8855A69907c4a8616Eb360d2BeB7f9EfF3D2C1D",
      "txHash": "0x62ff7bc2fca14f451dbde326445884b8a7480d3e136101d904fa0837a4f8158e",
      "kind": "transparent"
    },
    {
      "address": "0x9Ef65452e8e3c64723c5999293001f94FA1022FD",
      "txHash": "0x8224d3c38134dae0ace2e845492b957ff6e0ae9b94d5268748ba12dfe843b704",
      "kind": "transparent"
    },
    {
      "address": "0x8c4Fc84402789d4C96D40C950b06D5Cb5D619960",
      "txHash": "0x95c3c552d4ea50e3866df0564845dc250ed5dfe671f280fdfacab1466a477914",
      "kind": "transparent"
    },
    {
      "address": "0x03D54Ec069D056d47B50dca9d0b9Ea494b2B4C4f",
      "txHash": "0xf8914838328cad5973a898106aa3625625797cff551e295490a3796c473d46a0",
      "kind": "transparent"
    },
    {
      "address": "0xe2139526DB50Abca17cE9A6423A6f03667F4EA90",
      "txHash": "0x7105e66789357ea12c563c8399711c8a91a1567ae6cea10aeddb9db0d4265ab4",
      "kind": "transparent"
    },
    {
      "address": "0x6612580f3003929E5fDE2D3f133A28C0DD854a4a",
      "txHash": "0x22464f53a454f00768d459ce27995293a5b808a55adb2f15ddaeeb751a69790d",
      "kind": "transparent"
    },
    {
      "address": "0x7CC8F2A0eDF7b1d3f2B84b6c5C5fb20300cecc39",
      "txHash": "0xd68fba0d990c6ac9e1cf48c155f4ccf4a4cd79e2cc16bfd026b45d16f55d6f13",
      "kind": "transparent"
    },
    {
      "address": "0x86Dd2dC8DE74078B74B8eFB3C100F761B09Aa4b2",
      "txHash": "0xd26eb73d56f3aa790411d37262a0479e9c677f100dfcb62e666ddba14b0ffeec",
      "kind": "transparent"
    },
    {
      "address": "0x585128d4948cB79B08687EB7c8d87F05494dcd39",
      "txHash": "0x645c6b8c211605c48c6ad10ab71c6126d86a6b3380c2a17dcb3ce58d7757e6f3",
      "kind": "transparent"
    },
    {
      "address": "0x7D014B6A05074198581BFF3E2174f07020D75dA1",
      "txHash": "0x3e0ae3e7cee937d94c88ba0420a8d23e10db898071121f885d82b244d1b1189f",
      "kind": "transparent"
    },
    {
      "address": "0xBB23E47330aD689B09633eF6dC8Caf6a0b47a57f",
      "txHash": "0x5b4da8722a681cd8023ebc470a64db216691eac2b07e4228687437c4da9766f4",
      "kind": "transparent"
    },
    {
      "address": "0x2A46FE1f3B610886c80f71118C2e36bBfEeEb144",
      "txHash": "0x7a68ddb2e6bc73fd55c2cb7db9abf6959ebec3a9dc302269ece3a9d157e8e616",
      "kind": "transparent"
    },
    {
      "address": "0x4A0267651164ced0a124B2dE894e52f4160aF3ac",
      "txHash": "0xf6c184162f6721f5ad0307423046ec9010a42bb871022e869d2d7dc546858576",
      "kind": "transparent"
    },
    {
      "address": "0x84e33624d39Be67f83b10fb6284df506252A72c7",
      "txHash": "0x4a808ff3d735cbbdbbc4890f1acba52290aea40a729795050603435f795de9a3",
      "kind": "transparent"
    },
    {
      "address": "0x87Bf65CF972499aFC7477be2722ad111eACc0bca",
      "txHash": "0xaa59709d2b1e8c98ded78c1752da9c208e6f985f9cff9acd0d2ffe806df7b6a8",
      "kind": "transparent"
    },
    {
      "address": "0x8F112e31D6B1f01Dcb670eb024DB78E33891E3f4",
      "txHash": "0x40c08aa454ad3ea069e90f1602340a07dfaf3f211132b632b508d466c1f8bff2",
      "kind": "transparent"
    },
    {
      "address": "0xbF62F83c78A5A454C726Bb2614F0dF8b3178B239",
      "txHash": "0x3a7a0c2b81c727fd4a456a76bb3c27733c4483ff22ac77b7ce9be2bd7a03838c",
      "kind": "transparent"
    },
    {
      "address": "0x3e81fE4A827bbF1370FcBf45cc0170039d8D715e",
      "txHash": "0x639f594a730ddc2abd9bd1e03daad0ca8e5cac20b3c89887c740f2f8e69950ae",
      "kind": "transparent"
    },
    {
      "address": "0x8F88008F2aC6528513B785Bc4222dD101552e2a8",
      "txHash": "0x0301d699f654f1c22ca33ff0cf5b8d5785a507c9f32c41d6a3b9d1d44ed1f20d",
      "kind": "transparent"
    },
    {
      "address": "0x90Bdaae33A587CEDc4a389985aFf6B4213841a90",
      "txHash": "0x1cb4a73b711807e31b5bb799eadc4a2573eab926f0569dacc75335ca56d5c61e",
      "kind": "transparent"
    },
    {
      "address": "0xB6A7a38183ef8b10F30DAbE70D5906Bb7d5411B2",
      "txHash": "0x69594a514af5a39eba3402a60a69b40a8b218cffa0b0882a8e7c6e15cab7c997",
      "kind": "transparent"
    },
    {
      "address": "0xC662a9c85B6352D8FFAEF0D9d0a3bA82f23B25Ec",
      "txHash": "0x455745048c4a4d38ce7dcfb33a8bccc2b98bacf2338da0ae95fe5138084016b9",
      "kind": "transparent"
    },
    {
      "address": "0x81686Dc5A7217860f6bc95b518A4e41a39482911",
      "txHash": "0x452b4d323a061de0ce3da17299b4901dbf65a975f261599df2e7e503fed77dd7",
      "kind": "transparent"
    },
    {
      "address": "0x82e8E58d5B7D7536D499b1b80b927F3e309d3Ecb",
      "txHash": "0x24e5786072e7dd52a0a016a01267289f1cd276d3918e58d1b34a31224f3e47df",
      "kind": "transparent"
    },
    {
      "address": "0xFAA1B9e39BEF7B2Cd08abd006E0A2F4d64A3f307",
      "txHash": "0xc1a8fc44f9ed59e970cbd3197f37f60225860750fa872282e4047224a28c2ce4",
      "kind": "transparent"
    },
    {
      "address": "0xd73a58D49Cd85D44d026c154C5C3a1fDf8eA4461",
      "txHash": "0x130606e5c1b362c3b6a38d5c45a530e3369f348efa8c860cc79598933a865d56",
      "kind": "transparent"
    },
    {
      "address": "0x181770082970164ee5FdEA654431a54085829e75",
      "txHash": "0x4f3d5df33244f06e639507b175ab750e16a37c0d712b86390ebf03c18220c3ec",
      "kind": "transparent"
    },
    {
      "address": "0x5cdAfC3CD042fD811bBC05085164cFE7180829Ac",
      "txHash": "0x99dc5512365d4a5841dfaa70636c2bc5d0b796921be17c8de7f8d012df5f7330",
      "kind": "transparent"
    },
    {
      "address": "0x938715e94D15DB6a257A8a9676e17d715a90B22F",
      "txHash": "0xd7b3adeeefee7673e86bfd4d4b5f0d7e950f24a0d99d0615c17a9c09255ccd03",
      "kind": "transparent"
    },
    {
      "address": "0xAed90E7AA426Fa81f9241Cc0c70c501D3b5f43c2",
      "txHash": "0x3de56fb3e19798b476aa971511b72ab67def0ac1c9221f688540a94014d80a54",
      "kind": "transparent"
    },
    {
      "address": "0x993CE943d977C4149e2Ce8e6271dC64e912D9D8f",
      "txHash": "0x39f6476c26ba7163f46e5c7f71cfceb5a7ea41c103e70e1e823d52b8074b374c",
      "kind": "transparent"
    },
    {
      "address": "0x305CA6CC5A04dc58a0BF52A5C043321C01d6b118",
      "txHash": "0xd7bec26ddec882e44c6088ab2e908f00725ba7f3b093eb91fcd63bf257fdf3cc",
      "kind": "transparent"
    },
    {
      "address": "0xa054A55Ff7C01137c0500991cE434a6d040348Cc",
      "txHash": "0x60916a69721996a8077ee9852f1d96305274007fdf71b159e3e81ba681acf528",
      "kind": "transparent"
    },
    {
      "address": "0xa97DD12A054AbF2949980d79e14008E6006c1134",
      "txHash": "0xc04f8b4d5d89b3afee4293ebb174faa9126912e9890109a7db59bb6b3ede6928",
      "kind": "transparent"
    },
    {
      "address": "0x0950c4B080B253d822b7c89b827241Afdc0d5eD4",
      "txHash": "0x8c73f1648ca6497afcd764ca1168525c6636e0957264186e0965494281bb5aaf",
      "kind": "transparent"
    },
    {
      "address": "0x629DbFF100AB29B2a833A15d1e71f4D44625ed9F",
      "txHash": "0xb10ed76b63f08c980821506e047a877562379377e6790c37162bf7a0781fcabf",
      "kind": "transparent"
    },
    {
      "address": "0x4de07094d3A4d05b63C7d413C9208f74f7845F0f",
      "txHash": "0xbd34c538d04b8402d9940316963880457db7855132c0ce30a1a615584783cbd5",
      "kind": "transparent"
    },
    {
      "address": "0x92C10A85eedA5BE0a97Fb5E6F1d8f42634089678",
      "txHash": "0x3d4d0ba44afcc1f790712ff46bc830b6a2eee5d0fbc00676a35c62740d43a03d",
      "kind": "transparent"
    },
    {
      "address": "0x6Bd74d77dc2A18cB4016A4664468f9ED06211474",
      "txHash": "0x69daf66ae4ca5784b8e8c54df49d51af1913cb0c72d863a44b835d28ac4fe218",
      "kind": "transparent"
    },
    {
      "address": "0x9c530298dEA4320e21786b2B20502565b62f9BB1",
      "txHash": "0x633b70ada9ccbffa3986103779d757981143e457f31d219b74f5c29e29cb6088",
      "kind": "transparent"
    },
    {
      "address": "0x60191E68710791C6F654Df7E3FECc9E578Fbc1D5",
      "txHash": "0x6eb724bf46981621081d90331895011af4becd86d6c06a682a7aee1b67605257",
      "kind": "transparent"
    },
    {
      "address": "0x45ED617b941adBf66517375D19A210F15Dab9393",
      "txHash": "0x6838bcbd674cafcce605240b534a641796fb7a037d45e6a8d9e1d8d6c28325d0",
      "kind": "transparent"
    },
    {
      "address": "0x4E09bfF5A0693dB19E20593012acd2567bD36F51",
      "txHash": "0x0aedf2a9f6c6423d7ade4f220ff44967f0f9e54b057a9dd40f35044f8420ec7a",
      "kind": "transparent"
    },
    {
      "address": "0x8D27597A55f482dD976F02A2A87c1CB581378d11",
      "txHash": "0xd081daf8027c37703ae17bdeafdccfdff73a862675e5f9fcee5afae1164cbfb4",
      "kind": "transparent"
    },
    {
      "address": "0xEc8cdeA6023d6E6aa34Ca2af42240Ab83082Fe66",
      "txHash": "0x52b23feed28b63838b10fd5de7421bee354b3ee1959e6a4a352a108e94b274e8",
      "kind": "transparent"
    },
    {
      "address": "0x2fcF9EC01A133Fb3EA3764ED4A2e0D5F8A4Ac275",
      "txHash": "0xe1994fefbad11223bf9a3a3ba21eb573513e82db5789e4210fc02c655d309261",
      "kind": "transparent"
    },
    {
      "address": "0x56C88a00f042d20005b3b40399b215bd2B6717A1",
      "txHash": "0xd6419a3cd0fb7de65a38e3640383141a81cf454bca2212aad21e8ddc71093e35",
      "kind": "transparent"
    },
    {
      "address": "0x91fB4a9811bCFCa1378A91Ff2636fa952cB24e25",
      "txHash": "0x5140ef5f092abc5f87da85d97c4ac34badc98712eecdb49945a0fdb275cb13fd",
      "kind": "transparent"
    },
    {
      "address": "0x0c390D59a3d65518969b035987c08fF080F02313",
      "txHash": "0x83c30c4c06057386ffca07e5c6b2eef9f0cd9e1b622d5e7bd0d5c3476fc709ec",
      "kind": "transparent"
    },
    {
      "address": "0x9492d2527dd90f1A2F83f7f7d00105fFe79422A7",
      "txHash": "0xf89b730550b3eaaee15965aa0e2086b1f0a9e8acce8ecab62ef2a62369f1c7e7",
      "kind": "transparent"
    },
    {
      "address": "0x0d5fb1b81F4E01BC0C8F529e029AD20D09D32205",
      "txHash": "0xb9911973cd988f6dbce5f4e6dd636d5896b68f468cbfb3f4ccdd896f3f2d7545",
      "kind": "transparent"
    },
    {
      "address": "0xE2E469705311Bb7bE022051Eec654e3cA3c57ace",
      "txHash": "0x67c54ebc7fc8eb68f9ef3ac779590f55e648c180c5518a3aaa79e7f74a784bc6",
      "kind": "transparent"
    },
    {
      "address": "0x79D2866d5c030404B105c9Ef4EC69d15A56be209",
      "txHash": "0x436784f5494427781accd7e4d5712b6214b2da2f005da58db13a7a00524b506d",
      "kind": "transparent"
    },
    {
      "address": "0x65Cf305811B784De2e278302f58eaaE9F97c5De1",
      "txHash": "0x9be1112ed2dd2740c81131ac55d1de7498a4abee1eb186bc376e1d0c69777836",
      "kind": "transparent"
    },
    {
      "address": "0x6982d01f0d104047C83c49e97182651F53292028",
      "txHash": "0x6b2563186879bfe4cf7d6dc3950200ca6060f0177ae1d378df8fde1ffacb8787",
      "kind": "transparent"
    },
    {
      "address": "0xD6A318B14Fd8531D05E9926695678fd88cCB8D80",
      "txHash": "0xe0bfad6cb50229d00a102704e8540b2940ae125e8ad7b368db19df1f089d63b8",
      "kind": "transparent"
    },
    {
      "address": "0xCbF3732E7dF4EeC09e9176363aB5Ae88951DCc84",
      "txHash": "0x0ded45021cb7a1fd089643a8d96688edb795021fafa6d7392a4815b75c38f977",
      "kind": "transparent"
    },
    {
      "address": "0xab4607Aca55e2ccdF989Da98590543b26f6849e3",
      "txHash": "0x51174d116d65ffc4b7138f54e035b2b44a6defd1d7f2e2c91009085425174ca8",
      "kind": "transparent"
    },
    {
      "address": "0x35557fC0Ff8Cb7Be24Ae918cAaFd14a3807b7D37",
      "txHash": "0x786dc339ded603909838fed8d345f1e98e875bd72cdf143b9db1abeb1b3964f6",
      "kind": "transparent"
    },
    {
      "address": "0x7A5E0938191A5652146aCAb9E1d7D2A39696FA2a",
      "txHash": "0x507e2cbf2600bc52dfa29fee32622b0d610da0c553290b24c1cc808353fbd685",
      "kind": "transparent"
    },
    {
      "address": "0x1137A8f807744D67f872f5089bf54ADA1677B11A",
      "txHash": "0x1023d417ed5567cb98be6926d89231c918a06443c0b478d260ddf65eedded5e6",
      "kind": "transparent"
    },
    {
      "address": "0x9998CF4c796BEABa0A99F50F64DDa6bBA1208b47",
      "txHash": "0x380a0dcfb390fda6d20335b79f6ccc79011bf04ae25e526e84937690708507ca",
      "kind": "transparent"
    },
    {
      "address": "0xAa57D04cd8B267f2aa749df711fcC14BcF9bAbB9",
      "txHash": "0xa48715e2a0f4c50fedef0f90cb64cf7d706f6f1cb0e771167c07fa3d2db1e20f",
      "kind": "transparent"
    },
    {
      "address": "0xd8A155A6dD928ce7544FC84f295bC8e967197aA9",
      "txHash": "0x5b476e3d44e1526461d22813145e655946e711433e97495800933bc8624b57ed",
      "kind": "transparent"
    },
    {
      "address": "0xd32301EAf8B010BCB9bEABE6a79ff3217C924e16",
      "txHash": "0x6b4bf1bf091d82d65ff279d1afc20c826156ab549fcba2ad32b2548885ade4e5",
      "kind": "transparent"
    },
    {
      "address": "0xA4D5799D4FaD1c76729756BD15f26E3C475599A4",
      "txHash": "0x278127a281c1dd58937fdc94f32cc8a031a77aecbf21e0aa3e23228c65563a65",
      "kind": "transparent"
    },
    {
      "address": "0x9b23B87ccD29d2472b4d2377c05526eD6F7977dE",
      "txHash": "0xf815c55f55a2529618daf9109e4121a2296f8bfafd93ecb47b2898d139f04c55",
      "kind": "transparent"
    },
    {
      "address": "0x737Aa32fF3890B82003708d8A68A53d5760962A5",
      "txHash": "0x996c3ecbb2221e19634d40547eb2212f76cb2957f9bd45a2e61ac1c93f8c8d54",
      "kind": "transparent"
    },
    {
      "address": "0xbB9Cb28ff16382C228f58C01501CF4dFDCd32763",
      "txHash": "0xcfe03c79052f5d7e822c540c6188436fdebbfed4d8ba9e0569f28a63f822702b",
      "kind": "transparent"
    },
    {
      "address": "0x7004e04EAEb84B2faf61026304C0BAc93Fe98889",
      "txHash": "0x4fb9660edfe0318b2e07fa9ca0119ece434c95b10beb4c00c2d5522c3fc544a4",
      "kind": "transparent"
    },
    {
      "address": "0x856ddCe1b6000013EDe350Ad2E1CCE186185FdF4",
      "txHash": "0xf2c3b3e5dbe82991e6caaec9a4c4434c3752278c417435af3604ca8cfea123b0",
      "kind": "transparent"
    },
    {
      "address": "0x982bfb326d5ce376674c20601F8BB9c3f7283f11",
      "txHash": "0xd55f256a8368ec5e2c750ff1c98b5054860127bb7e68bfcbc50814f1a5371c04",
      "kind": "transparent"
    },
    {
      "address": "0x6F4d4e32E0Ed08777F68347A7AB41357772A440f",
      "txHash": "0x59feee7aca0ace3f5240e6b713652a8ab1befad0cf020cd6255b6276a68cdb83",
      "kind": "transparent"
    },
    {
      "address": "0x3cc62671dA45E85c93C4fcfABeBE7084C42058Ef",
      "txHash": "0x2240a81e3c7c1f473738b4f4627f776b9c4e1c53e56f76fd43996f38026f2d52",
      "kind": "transparent"
    },
    {
      "address": "0xFCb011aA6fa02E82110aC2208D2FD5f1d48dd6CE",
      "txHash": "0x46ac9c680420b6075e305ee5a5adf0ef05462509a9b353856de0942ff241eee9",
      "kind": "transparent"
    },
    {
      "address": "0xe3b04C4667B7A76A38772bAeB5d0beCC7c4Ae4D6",
      "txHash": "0x40fdcdc9d4f58e7a2d8ba17a65296954bde77f616f85eb3336b6864b9a6bc9bc",
      "kind": "transparent"
    },
    {
      "address": "0xed2A68F20Ccef8714A6196C247eeB7E8e52832cd",
      "txHash": "0xc5c8e3c1519aca9a4614c94ffb65ca22f6c2daa3a85f47ef3810102b73425799",
      "kind": "transparent"
    },
    {
      "address": "0x5318736C4a5bF18534d9c24366E8f9b76A42cEa1",
      "txHash": "0x87af921bf07a5431dfd93d583b8d314f66205691decf24bfc5aa70aaf226ce24",
      "kind": "transparent"
    },
    {
      "address": "0xe9D9f2C4b60528e8497613e038927788961b1383",
      "txHash": "0xe251dc0a0af7c0313d64974eac7cb51d6709f9f702c73b63ed2d894565f550c0",
      "kind": "transparent"
    },
    {
      "address": "0x9A92005e30687c1b6Eb328C89b7a8C291315b2Fe",
      "txHash": "0x9615fe8d415c8d26d5a1c7995468bbc06b145524d04c5a3dc394474d8b4b5007",
      "kind": "transparent"
    },
    {
      "address": "0x9722F2844ea3c9e6D47f0c819F44f71B1A826563",
      "txHash": "0x481b516988f208d94f99eb8e671c5509ac2c224e2c887d96b22e8b936042fae0",
      "kind": "transparent"
    },
    {
      "address": "0xd397d5C7d25C7AF291bf1BE224C4db5bBd387AD6",
      "txHash": "0xf09c2883aabef9f6cfdb6c3f3daea04f24068d5302ab831d7a307685656546c8",
      "kind": "transparent"
    },
    {
      "address": "0x3f0C4A58eDF13da55db1882B3463B6EeA838D373",
      "txHash": "0x92e5165ea162793f687f43168aa46ff68ddbd05ca604404a2c54da8658c06cd7",
      "kind": "transparent"
    },
    {
      "address": "0x2922091485da1a2172D21Be3F079eabFdc1baCE2",
      "txHash": "0x21966fa0c479ff257b290807273d1867f1a0525e5eb0402f9109e50a907b8130",
      "kind": "transparent"
    },
    {
      "address": "0x112E5EB0909505a89f84F27f70566f7bDdF09E6e",
      "txHash": "0x69b5403e736349f1bac1de1a502aa26453f8ffd1adc42f2ae0a3c9f210b4b861",
      "kind": "transparent"
    },
    {
      "address": "0x87DA53De87d117db06FE2f1B4514676d6DEb27E8",
      "txHash": "0xefa7d0d0d2c3da1e164c8d7927b0fb09b1a4e93ecaa8bea74f030c7ae97db0bf",
      "kind": "transparent"
    },
    {
      "address": "0x0404D47f285616178Dc2389790237F0b80c3033D",
      "txHash": "0xf6250fae8c2d67df769f3c34cfc37179ef9330967c82d9ff347947defeef1a2d",
      "kind": "transparent"
    },
    {
      "address": "0x23AE94bB16d0345FAad33c17F5673488fCF5d2F0",
      "txHash": "0x84304e32ac5c68a91428f6bfb88225f6218bf6cda233fab5c16aa8138a7f6d98",
      "kind": "transparent"
    },
    {
      "address": "0xC114be0e88c8FB0A7AfC137F20050c1441d85173",
      "txHash": "0x7f6493ebcd6077e4c9100df740e2f14113763d99cdfa71fdce09745f67e5bf0b",
      "kind": "transparent"
    },
    {
      "address": "0x0e5c5BcD1d8dE68D9212dA51030BDfB45Db7fF74",
      "txHash": "0xa1d62438f2d1f66e1a931b7c7fd83db089a44bc8dcaec88e461026ec8bf32359",
      "kind": "transparent"
    },
    {
      "address": "0xa9447E89dd5A148301077ffEa7aE149f7625141E",
      "txHash": "0x4ecd9e231c9007a3eca759f084ab67a6a9e617164cac7f795edaa4ede03783cd",
      "kind": "transparent"
    },
    {
      "address": "0x5038499596d07075F02156cE574e3Bca38d50fE8",
      "txHash": "0x01c782a522a8e26a425dd81adf7d00890748f794535fc532d06ca995fbd7af78",
      "kind": "transparent"
    },
    {
      "address": "0xC5b8339083BB87423DDbFB7D599668B76d2bd134",
      "txHash": "0x28e0e6c7cbe7526a665c763b311120c462a03e19bb67af8714ccf9137896e80d",
      "kind": "transparent"
    },
    {
      "address": "0x6A5e4B99774f20802C1889fE1844400676E4319F",
      "txHash": "0x2835bedcdbd2c2c4f2a2fe3336c461c4aed3af6b1bf74bd1ab1ae09402cbdfda",
      "kind": "transparent"
    },
    {
      "address": "0x52a33d151DE35bBD4dbFC0066e10015bb06AC4d8",
      "txHash": "0x4f7817968abd30d71b46aaa3c2375abd90621851733a18e9b29346456527a14c",
      "kind": "transparent"
    },
    {
      "address": "0x21cbb671bcB233CB70D43f37f403dA99C811DfB5",
      "txHash": "0xc084e7d681ab8e47748f22e1c0469d0272b06015ebc9822615434c9c1a185c0d",
      "kind": "transparent"
    },
    {
      "address": "0x49e1D7493Cc562f3d2707c37f64bD391472F65A6",
      "txHash": "0x344c9882e5c7d31ccad232eeb28478d6bb851a3d3819615dc9f0c9bb48131e95",
      "kind": "transparent"
    },
    {
      "address": "0x47deb068cFc84Ce34d4755222Ee255D39859007d",
      "txHash": "0x613d449c3d9754d40564709f833add334351ed8037398129d45950f4433d4e80",
      "kind": "transparent"
    },
    {
      "address": "0xa78359cadB7fCDDaAC0D79Ad9B72438A2Fb99B90",
      "txHash": "0x3dcc134aee87ff00836ad1725806b1f098a30f5ead5a84f439c09e462d0c5a46",
      "kind": "transparent"
    },
    {
      "address": "0x8DdB336d7c0F2b65B9792Ea0022C39CD6ebf6dE9",
      "txHash": "0xc61aadbe0d56e016d20e51d6612cda15ee17206263703bb8afabb67f0c3a681f",
      "kind": "transparent"
    },
    {
      "address": "0xC71Fa89E73C4a61d6BaD2aCF823Ff62d4c151227",
      "txHash": "0xfa997c97130cccecb5c516f201f2c10accd471b9a9ea10722e9fcff46b97afca",
      "kind": "transparent"
    },
    {
      "address": "0xd72F5B0DF27eBb7E0bE7d55157814255A27327Df",
      "txHash": "0x596a0e3475ac818776c699dc58212fb119d47557084b1622ec32c9f0af7838a5",
      "kind": "transparent"
    },
    {
      "address": "0x84AB3F930C15eC179C7495CA0ab2704080da26eB",
      "txHash": "0xd3c83c40e31d56427537b3c33cde17e09f19ac17cf01ae5a40b217957d00edaa",
      "kind": "transparent"
    },
    {
      "address": "0x739acfBD3F3135Af95A3074a3b47E30181eB7b40",
      "txHash": "0x46787685a04fc69b0b906024ea553d33218cab1cad99ca8479ee2eef8f2945ae",
      "kind": "transparent"
    },
    {
      "address": "0x1dEbBaA97F293E27A46019C4ba561913510715eC",
      "txHash": "0x38bf1cf1a95140c1c439323e3424d094e7477227470e1fbe4dcb253132bc3125",
      "kind": "transparent"
    },
    {
      "address": "0x08905bB9c00373b6114f254FA7c568E9FEe83f57",
      "txHash": "0x6606f29b19272f238a1a77fec805c98e16d0d7f02b17a1365785cc94d7ee1711",
      "kind": "transparent"
    },
    {
      "address": "0x51ecBa3B6FBaC007C374c34dd570772606FF9Ecf",
      "txHash": "0xa621e82ac98c55a100314eb313253e8274039fad65953df3c063062b217f25f6",
      "kind": "transparent"
    },
    {
      "address": "0x91E77dcDaA9e5dD6699BC5e3860C9684f855829d",
      "txHash": "0x225bf27590111562206ef9a334932c24996c01798ab887a59a25c04fbe161800",
      "kind": "transparent"
    },
    {
      "address": "0xfEE8930B4f23a1eFaAE8d6706846946632D7bBCe",
      "txHash": "0x66a5a0a58b530d39c0dd6b1b621fd7cb92321f53fe7938826f52e99cacbd0e81",
      "kind": "transparent"
    },
    {
      "address": "0xD6b0C64B0CB8Aad3416E96f31A7dD8ef32c685Ac",
      "txHash": "0xc627a435c67944c278a32960adcc2314b2ba8dd71ed3e794aa6170d404f8cef4",
      "kind": "transparent"
    },
    {
      "address": "0xb38c4cb9C11Ef299f9f3aB812de87933741baFf5",
      "txHash": "0xd5217aff0c0475f0d2d1098172e5fee95bcd219573a960224f94397890c03657",
      "kind": "transparent"
    },
    {
      "address": "0x30105d09C9F6108F90816656dd37c532ddC1955F",
      "txHash": "0xad71d2ec17f2552a55056e6c2fd9a2bc196f62f416a034bb7c56c1c8c7344bf5",
      "kind": "transparent"
    },
    {
      "address": "0x467dD98Ee0e46038DDF7B0891B83410a132A4B30",
      "txHash": "0x292c0407550cac1d7338135a37ae02d37eda9cbbdba9ce23a7a4cb740a74d986",
      "kind": "transparent"
    },
    {
      "address": "0x193c593E05F3056068C2FC8C4D6FCa41c3568c86",
      "txHash": "0x5f13254f06bf701ee1c9e48a3aa44a3ba889af20bba5dbde2412b2cbc2baeef4",
      "kind": "transparent"
    },
    {
      "address": "0x6C8F8479bC0256eDF9EC3D90C935c313D8F583e0",
      "txHash": "0x8f6a868bfe92f03cba33c6c1a4cfd6b0279e55151f045c6873be5c312e36c331",
      "kind": "transparent"
    },
    {
      "address": "0xDBF24405C3A611a04b13Ca0eBDeD8Ebd1D8ab8d0",
      "txHash": "0x8673d46217cfb183bfd57afa519e52dab8da018832c3900e2137b47082c32e68",
      "kind": "transparent"
    },
    {
      "address": "0xf146e1213a1adaB105a9A0Cc8b23C58106C881a6",
      "txHash": "0x6eae77cffac5a7e0a55cd638405049b7c5152359c16255ba8fd9de18e2ef2045",
      "kind": "transparent"
    },
    {
      "address": "0xdF75f02f7DC032E2d78474B0Da005BB6130814Db",
      "txHash": "0x7ab0c442df463c5117fd14bc9a5092b946571276d7cf024203ad0dc188ddf2aa",
      "kind": "transparent"
    },
    {
      "address": "0x2E8F32E7849F2b77A18E53b734b7FFE100f11a24",
      "txHash": "0x73485353bfb5cf23af67d09d6aa8723130f0ae31c0c179c70efa574933e41df9",
      "kind": "transparent"
    },
    {
      "address": "0x2E452D1278eBDD5D3204Bb934eab004a9c53F476",
      "txHash": "0xad3fa936a88a255e2b0657822887f6f87f02db1b0a3b38ae8d80bad239884953",
      "kind": "transparent"
    },
    {
      "address": "0x9FF78FDD61b6Eacc262B20b8475038549e34C0D8",
      "txHash": "0x34313632a8a903536ace87e46c2b9e3693fbf7fbcc0c1e145c04d08fbefb7d89",
      "kind": "transparent"
    },
    {
      "address": "0x306Eb4D4bD3f935A85cFb29697287471e97e9f5f",
      "txHash": "0xf7b52682400e8705218ef1d508213748a5dd3136275cd390b39e65df3fd955b5",
      "kind": "transparent"
    },
    {
      "address": "0x7CC724ae21e99F42b8fe55e1B3994fdFa9E5c819",
      "txHash": "0xf993d0107017666010f0790b1eef0c574f7cafaf305f07d5c95b93c39150c364",
      "kind": "transparent"
    },
    {
      "address": "0x4fe3Cb70F361d2a7f977f25c9C636498B4fe44A3",
      "txHash": "0x8a69ecc45d4be6759b12e7c76a0be9c80941f35f604d52a2a33cc89d4b28762d",
      "kind": "transparent"
    },
    {
      "address": "0x7f06E6a6f88d8AC74A0E0de659AE90e16682FeDE",
      "txHash": "0x77ffa4f5800ad7abaa3ad1c88daf04862dc9472871bc233403bf66f16e07f575",
      "kind": "transparent"
    },
    {
      "address": "0x8a08d0836c540984b722D42bd02e9AE2DD5ad109",
      "txHash": "0x26a736bf06da3863e9226e2de2e9a0fb0566c491563ee9f688fd9f0019524ec9",
      "kind": "transparent"
    },
    {
      "address": "0xFF1046748DaFA5bCd4f21F9E08ec9C1BB4B46dA7",
      "txHash": "0x1775689a459d5161208dab8cebf3b1f4b1128481ae3c66eaae5455e2171cf3b4",
      "kind": "transparent"
    },
    {
      "address": "0x6B285B59fC622E8474969Fb70119905c64218661",
      "txHash": "0x8d75dc4a3eb643261975ebdf708431bfc6de8298ddfc341e21508f8db08fb2d1",
      "kind": "transparent"
    },
    {
      "address": "0xf48Ff8B741E67CfaE47449cd0A5E8861690f0430",
      "txHash": "0xbd398121edb2b185affc947f753f637ca2bb2126792faa3c3ce0115993d398b1",
      "kind": "transparent"
    },
    {
      "address": "0x09832628F384BD4D547E8B9854b12C06d513270a",
      "txHash": "0xa044c63dfe3a9a7241db3a69deb496464bbb48ce31e8a09f43b2bc1ee582c88e",
      "kind": "transparent"
    },
    {
      "address": "0xc36F6897454B659E5e8A55Bdf669CE4c30dDa182",
      "txHash": "0x42799b88e84ab73509493d4d919e3c3427fb7bc4dd15e8d0e2c62d982c0a4b76",
      "kind": "transparent"
    },
    {
      "address": "0x6fCe5B2cD5689b6F4ff733d3B41a254f45900E6e",
      "txHash": "0x7f6e554e9e22b7f7d73396989ad44954144cd6ff36ae4890a07605b1af57e20e",
      "kind": "transparent"
    },
    {
      "address": "0x18Eb32DEEaD1D8FBaaC13a264c0D183Ef5600075",
      "txHash": "0x6904a7a2e535856ddc422cb472620e786a54620a7c637723733087c96c6035f4",
      "kind": "transparent"
    },
    {
      "address": "0x0FF6Aa698422FbD63AbDB1986bF2FF613407E4CA",
      "txHash": "0xa4c51e3a11ae24cae1f7f81d8c41d986de0b6f17c8284098163e5283dee5a6f0",
      "kind": "transparent"
    },
    {
      "address": "0x869E55818866b2d266eDd69a624baE0afC656bb7",
      "txHash": "0xad1e8af7f9796659d8e508077639f9675c2af42a76c5041403bec2b1d6cc2054",
      "kind": "transparent"
    },
    {
      "address": "0x629F2E2223a854162643470EdAB5BFA495EFD3Ea",
      "txHash": "0x28592873634e9847f87bf94f055500fa767bf97f31b11a39758364468211e723",
      "kind": "transparent"
    },
    {
      "address": "0x80b3b5FEa0B38c5dd5A7cC79e49bcb3b3aec391a",
      "txHash": "0x853650991c989ff5e4cdce58754b6b0459ce18931cee195a0fcce90aa55ea4d3",
      "kind": "transparent"
    },
    {
      "address": "0xcdf669BB6C4fC853c11Ae722BA37578e0706eBE0",
      "txHash": "0xc6f027d4be70ee6382182368b7f33fca80874aee7afcf40d720d38bb3a4fb1a1",
      "kind": "transparent"
    },
    {
      "address": "0x29FD0889d717A25883b0f8BE1782A25220C40798",
      "txHash": "0xdd2dac1e523cf56f460f562c58856622a2a8258e473c83697741b5e90c7b9ea6",
      "kind": "transparent"
    },
    {
      "address": "0x57cfA8273f08F14D6454ff3EDFeEfE019119Ec40",
      "txHash": "0xc6b9201144ea3c4a80a876eeceb1798ea5534c9487687533b10fddad94214d69",
      "kind": "transparent"
    },
    {
      "address": "0x6d5918052e0A0C181b9D3118cE9D74F1207E7C22",
      "txHash": "0xea63ad3223cbb4ddacd5c5e2751e12cae55bd41d598c73c94d8e407ee2c81e7f",
      "kind": "transparent"
    },
    {
      "address": "0x8072907A6D0f239Ff41B3F0cB376753f5e68b1CC",
      "txHash": "0x9f5248354b1b499cdc186a753f913d598d0716c9bd9cb0d7fe191bd0eec04da6",
      "kind": "transparent"
    },
    {
      "address": "0x2Cf0373c31114594De14581dDf3800aaf4CD3647",
      "txHash": "0x6d2aef5d14cbc74e1cd95f71fc1c7a2f9726fec75025f6626018d14ba39bcf6b",
      "kind": "transparent"
    },
    {
      "address": "0xb6993993DAf7b20CF830F9D7108245e3407F0Dde",
      "txHash": "0xc6259fbbc5f2eaf5ebdc207219d55146465d038685720fd7b844bdfd5cb39b4c",
      "kind": "transparent"
    },
    {
      "address": "0x680760147794C49C084A0e6C8B089991e693fF2C",
      "txHash": "0xb1ba22f811cc89b8f059a5aadd054540c0e3cca147202406efae25896332deed",
      "kind": "transparent"
    },
    {
      "address": "0x3206561dC335bA921c69d82E542a045aE012cc5D",
      "txHash": "0xf9be560d61077211518733be6b09ec0a169b329dcc239fdf55abdf4a008a3eea",
      "kind": "transparent"
    },
    {
      "address": "0x055990629C779fb768d4F4A25Ea1c8105Ef0385D",
      "txHash": "0xf0ebe1c8c9c72cd59fc3bf99de7e1f7ea0775be677ffa23ad06b6b2bd7617866",
      "kind": "transparent"
    },
    {
      "address": "0x5A9AB4b070a734Be6d0f16a547Ae9EC36C52DD4b",
      "txHash": "0xdfd977bf6936ae1eb4e15469d4a10af13606a5029e87ac19e595b591fc11b776",
      "kind": "transparent"
    },
    {
      "address": "0xF302B0bBA3d933b6Eacb399243c1faE5331233b3",
      "txHash": "0x96553eed7c36ac98b941262cf92370b6d46bb2fa6cbfd1709df1b7f2d15d346d",
      "kind": "transparent"
    },
    {
      "address": "0xE83903b6B20C6EF339Fa47Df2DddE05A26Ca346C",
      "txHash": "0x5749d6d1e4c9b35af4a456e90207aa8a780e12e264e6b9c75942c9864601a49a",
      "kind": "transparent"
    },
    {
      "address": "0x9aEFec3aF58507919CB42a02177194778eB38235",
      "txHash": "0x2ae3ff2d4a7f42d9cd720fe224c7ac85d8a179626db338409e2d217ca2e47e81",
      "kind": "transparent"
    },
    {
      "address": "0x81f9031C30eA2e8B9Ad3672Eb543A8061FC90bAB",
      "txHash": "0x135e5d59bcad22f92700e42791149762f1722ba83264c8623ca2a79498c787d1",
      "kind": "transparent"
    },
    {
      "address": "0x3B8535dF5680E2aEcf297512F6d0A293D8eE2109",
      "txHash": "0xef7902ca2728279cad7426a7ab99430d88e7b800ead777b0be0213ce273697b2",
      "kind": "transparent"
    },
    {
      "address": "0xdEEE8F8fb755B19510fA4C8402212BfecCe6bc75",
      "txHash": "0xd54349a3529d8f35a7eaf2cbd88d7799a3627a9c1ddd08234c7d0eaf1f8b51cb",
      "kind": "transparent"
    },
    {
      "address": "0xb2AaE55D1E73fd4B0216abBBa2F46FE1c55A9E55",
      "txHash": "0xe1d8572c6070139dc1531e083c552a2ce2cc5c3d5f4a5b5906b418a315765250",
      "kind": "transparent"
    },
    {
      "address": "0x7F197dDF6458ae82b0ed274ed4dcD3549B35c213",
      "txHash": "0x99f1c1d9cbcf44e5bbeeb436b461ba7e55d85959d848374895d94e25c64762cc",
      "kind": "transparent"
    },
    {
      "address": "0x674247A756FcDCf0fEEfb9f2BE5cdc4013F7d446",
      "txHash": "0x5751b4ac20fe9f9b3de0e7ce0e87dabe949c90f0572317e461ac6985209bc7a9",
      "kind": "transparent"
    },
    {
      "address": "0x95712a0676576D30cE2c6E7F2F59f8Eb3EE0F2A7",
      "txHash": "0xd03f7aa6b6e21642d495517a864e45e896081ab5df5bea306f95946f7c2b5a16",
      "kind": "transparent"
    },
    {
      "address": "0x87415F063e46E7b0D779694f0527a963C707e1FC",
      "txHash": "0x598d942e0c0eddb9ba5626b0c9dbdbe2593f64eb97444266374d40ad4125cd25",
      "kind": "transparent"
    },
    {
      "address": "0xE0e8CB6d835048B636EF34a9dB20581f81Dda221",
      "txHash": "0xf775ff5a48d5d37a9b55b5afe60d6dce5b77ba2d736069349ff33c3e8f65037a",
      "kind": "transparent"
    },
    {
      "address": "0x925818B4e287720D48f8867A15b5B1b7BB0E3337",
      "txHash": "0x3b72d7e7ea9b66f85ed8bd3421ca4d8372e0f5923d8a121346da221874d0ea66",
      "kind": "transparent"
    },
    {
      "address": "0xf69b5285DF13aE148F54FDA2525F092597852412",
      "txHash": "0x90780ed3370aee1150878109dcb75d7360752ba88146cd55b36810f905a00883",
      "kind": "transparent"
    },
    {
      "address": "0x000ca6f002b89fC98426618d018D70fE7bcE9B90",
      "txHash": "0x9263a01e6d37a396401397868b3b61e12503201e17002d2cbfb70365593d72fb",
      "kind": "transparent"
    },
    {
      "address": "0x1984a7f7a47cAb4f2936d918D33A9126812D805d",
      "txHash": "0x12329290082c723cf0832bc7e49eae8f4cc918a6e55f5bccb81324cf87353fa4",
      "kind": "transparent"
    },
    {
      "address": "0xFF603E9A3408f56c6A598D256f38608882e5B994",
      "txHash": "0x5c4fd0446bcccff195e7212c334863294571b9cf689babfb85cee518e57e3614",
      "kind": "transparent"
    },
    {
      "address": "0xad0484967C1090C8f6F9703419b8928eD244Ddb3",
      "txHash": "0x4de81c980fd40e717085be7603276bbc49192d218aca5a68686d92c1f99f3bbc",
      "kind": "transparent"
    },
    {
      "address": "0x7557BC36AA2c21dC7b2E437cdC4195f4cca41390",
      "txHash": "0xf6167a72a3fa8fdc5cc1a0941089b496eaa308bb974beab0bd7d30cd6897e8ce",
      "kind": "transparent"
    },
    {
      "address": "0xffFdD5418cFC29CA96cFEEBF2ff205212F49E826",
      "txHash": "0x770ea279b37d774a51b2b64c8d16017c0c4b0b62be855b883c217272a4f9ba99",
      "kind": "transparent"
    },
    {
      "address": "0x05dFCC73BeA4361FE180a4433ED7facC421c2BD6",
      "txHash": "0xa96b3e1ef666da8f4b7919754354c615b1f9e840ebbd41ce564e2fb32b7c831b",
      "kind": "transparent"
    },
    {
      "address": "0xD61d41ca6b208AA9E73d5645B56F1ad10Bc7Ffe8",
      "txHash": "0x46ee90e5cd1116ddd073ed9d26cb47e2b0ac6e9a12c7568ac847fdcf2ec3ba93",
      "kind": "transparent"
    },
    {
      "address": "0xfA0c346D46E6a8cc23f8c5E9638978B568AC0eFc",
      "txHash": "0x299a372d8ade21b651aeec7f4917d9ed313cdc09366316335ecd359c32aa437a",
      "kind": "transparent"
    },
    {
      "address": "0xc8901a064Ae2a23ef25d92C794199C2a03BdEb50",
      "txHash": "0x363d8d676e965735418e5529fb25b38af7537dbbf656a7d13c2c2855d0e0958f",
      "kind": "transparent"
    },
    {
      "address": "0xedA4552cE3952E748921Cdc76CD02C7D7aE89638",
      "txHash": "0x18ac87918abdf1bf0f3c312c89d06a99951185a2cac7f1d582e9ced78d058729",
      "kind": "transparent"
    },
    {
      "address": "0x2A20dEa8aD7D5B6D1af8A6bF448519c366695191",
      "txHash": "0x6794d965693222a12540fbb0f46db479e534b0ccbc5fc842e2fbb2a6ca496b3e",
      "kind": "transparent"
    },
    {
      "address": "0x297ef6298C0B9534E5Dfda6E7C72ecbFb2b8c7Bd",
      "txHash": "0xe43cc33d01f38bf868205a4f50c0440b12079192d648c08557141fc6bea1ee2a",
      "kind": "transparent"
    },
    {
      "address": "0xd55758c84AF2Dff0cd5a5DcF9E1C771E46B7f917",
      "txHash": "0x8b34601d8c748cc53596c209df2d735c30e04dff24344f637b7bae87a2f6d298",
      "kind": "transparent"
    },
    {
      "address": "0x7D834159EBb79e7ACF20E42f5812E447BAB1Eff8",
      "txHash": "0xede5ad4194ca9d0326e754932b1c490d604e0c0c5444cc3544caa1b3d88474f5",
      "kind": "transparent"
    },
    {
      "address": "0xc5888a2FC5c8CA521410fe05bbeeD7B8232F0271",
      "txHash": "0x183de4ba022e4c751ecc38f92db4e14b8de1c681d9d9e329159f4b54033fe220",
      "kind": "transparent"
    },
    {
      "address": "0x5D22e7EA9D01613d50C59e2B84AA80144Ab6948c",
      "txHash": "0xab812dcef14867e5722e562c36b1953dfbca68211a230a1f21da6658e0ca06dc",
      "kind": "transparent"
    },
    {
      "address": "0xfe3c9459fb60c3fFF9FA0eFAaA814E549729b3b0",
      "txHash": "0x36de78fe3bc3118f234034084c8c933af2b71fcb9be163cabaf546ab5e8ddb86",
      "kind": "transparent"
    },
    {
      "address": "0x8483d2f262a9d74901c5a0De704DB9bBa60B3f3f",
      "txHash": "0xd265225aa570446d969242a870d46c34fb662621e13901197522ab2838b8cc8a",
      "kind": "transparent"
    },
    {
      "address": "0x1AFdA6851C639530C789A163f6B01684cED96535",
      "txHash": "0xf04424eb740151cf80e8cadb74e108a7e03738624365a5a3098916d850d149fb",
      "kind": "transparent"
    },
    {
      "address": "0x6d7cA6612f629e4686375741d8e227FE5E2d7AfE",
      "txHash": "0x1e30906004f01e7fbaa9bdcdb65be939048fd2e5a333af4772a7abf15f6d4c91",
      "kind": "transparent"
    },
    {
      "address": "0xacDa538e97a930fE6fB8e4D1655b48bE128a1d49",
      "txHash": "0x1accf79cccdfc8a41902e89d31583f7aeda97dbb4aa3aa3e9dff8fd467184f54",
      "kind": "transparent"
    },
    {
      "address": "0x1C90d344677b5751c811e63bd22b3672bbFA006d",
      "txHash": "0xb71ec282a85458f7565f690f3f636b9997fb1312dd1b41bdaf4f746636f73ed0",
      "kind": "transparent"
    },
    {
      "address": "0xe08EbBA5750E0F069f63Ea27d02abB2e51d09179",
      "txHash": "0xfe1997d3e7d3e0f8bb7571a78460be493de9ff8a7c2e26352ca0fb384020b9cd",
      "kind": "transparent"
    },
    {
      "address": "0xC44D7A494365B45dC48A04e50EB8112f54d09c34",
      "txHash": "0x7e8441be25adfe92c2a44d976ecf287b04aebccb169c1b51360ff735b293b736",
      "kind": "transparent"
    },
    {
      "address": "0xCB20da7FB9F5ccB7fF8EB9461D04B956f41272A9",
      "txHash": "0xe4523dd32712c0e5590532f8f543d90237783c25c15968eff0fc7e10020c5068",
      "kind": "transparent"
    },
    {
      "address": "0xD81E58e8eE4853208DfB2876EF94aD5a69Ed074a",
      "txHash": "0x74402ea9c3b95f6aaa6a53a913d76cd11711f05d3f4a99c03aaa15c1b96e6470",
      "kind": "transparent"
    },
    {
      "address": "0x84166E98F5c21E6F003e4B1892b8622f342208b0",
      "txHash": "0xb0d773be4e2fa6a8a98c47bee16dc98c921b197a4ef29ced56f7f20479d88975",
      "kind": "transparent"
    },
    {
      "address": "0x51A2c2fd29e404631Ee0cC489578A213c0c65099",
      "txHash": "0x812ca95a915c670f9f06027138c05670cb9097027cd545f3fb94723354070e93",
      "kind": "transparent"
    },
    {
      "address": "0xf0C4dDCF5E60bEA3cC722E0D5e0C92F357403395",
      "txHash": "0x95c2bbc0e00670abab9b60759b7d0819f84c7971b1722f63aff7f18c24a8049b",
      "kind": "transparent"
    },
    {
      "address": "0x87D8f1aEd4e7d9Ea7cbD8379D204bE99bC84fA29",
      "txHash": "0x8f31622f6aa175cea40ac415f6f0e409908f34862fbdbfecce049f82358edfa7",
      "kind": "transparent"
    },
    {
      "address": "0x9556d989EdB6b3e45A97127e55465a6221BBD023",
      "txHash": "0x3d77bff1e9b25aa86e018c6addaf7aac853061d43f3914aece8814dfb4298f0f",
      "kind": "transparent"
    },
    {
      "address": "0xbf7B7AF0F1ADA8CCDa732A53AC584e3c2b93fAa7",
      "txHash": "0x390db9fa58eb6beeedd2dddc4c01e5c5d59ce7b4c95fb2b0725c94b06ef5629d",
      "kind": "transparent"
    },
    {
      "address": "0x16F871A6CcD200F5a2A102FE169BD8FfdB4114ad",
      "txHash": "0x81502752e969b2e8ce8dd2a3b806690c80660eaadfe9df04ea5954422a82d50d",
      "kind": "transparent"
    },
    {
      "address": "0x1A416Cd0CC16037110D84a27E85E608282117d2a",
      "txHash": "0x2dbbfc90e7d9596136d4a7535c3d2b63885482cccb1fcd66b951e7a22ffddb42",
      "kind": "transparent"
    },
    {
      "address": "0xb6E57525C89A2217c23AF38C73dB314681D9d110",
      "txHash": "0x326449bd3a7e64028cfb7b552e7f02f6cffbc599bec983184ed273a0f7d4a8d7",
      "kind": "transparent"
    },
    {
      "address": "0xf27C20E73843ae1Caf61308D972f19B6Ef0070d1",
      "txHash": "0x8206e5abdeaa305169727c5cb56a6812eeaad2e74bc2a608a89e14bf14461555",
      "kind": "transparent"
    },
    {
      "address": "0x5CF825f32228060B7D76FDA66a27b728F192Ac16",
      "txHash": "0x0a293976adc27cad442d6a0c314481deaf6e57fdfcc1af68577596ab7c8853db",
      "kind": "transparent"
    },
    {
      "address": "0xb37006566F99181BC4b10Eb4Ce1F16e0C6C8fAD4",
      "txHash": "0x66156bfdf97575e9d502c06416ec214c8ec8319b827f7072f3c23682afe8f7de",
      "kind": "transparent"
    },
    {
      "address": "0xFe192b98C2aB01814Df72ed5604b23DEBcE90f73",
      "txHash": "0x5c91f09825766509ccd72f6aba011c660d290efca5cd8d00dda2e0ea25f678c1",
      "kind": "transparent"
    },
    {
      "address": "0x04A5c735b6FfFbcC9b8F7aEd78b54c01BEB508Af",
      "txHash": "0xa2f0ea43f04d86d822b0822be77d65576928aa357d824110cd2823892540f76b",
      "kind": "transparent"
    },
    {
      "address": "0x78575651742eaad907B73ad639f37895C3E4B295",
      "txHash": "0x9e8120e118b43a16c6544b342fb016ff4c44a8e06b97472ae9bf4715327c8d90",
      "kind": "transparent"
    },
    {
      "address": "0x4755015f98b378A48Baa2555Ec26415f74BA41d4",
      "txHash": "0x9b6aa070928c542527b5b0caddfc5bdb1d2d8a27128f40cdc44dac9a623273bd",
      "kind": "transparent"
    },
    {
      "address": "0x827B4A7990164A4E6db2e44491a7E02E900744f4",
      "txHash": "0xac90bb991d8f07d73505c282f1561384501bb603f4237f8785e87293d204f2a8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6f5c283546b8557d5f08e2f3b24cfb3f260d5802a922ecd2e2d6152c296d847b": {
      "address": "0x5310B54c6E0A676C12f512e744f5E69940112f7D",
      "txHash": "0x0083c62e24ccacc3dcf4a4c7b59164d4c64f5ac51e4aca6ca934ec0d2afb716c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ce9e5796be4f257847397ecaab449c03282bbda4a613c25092560f653460a0c5": {
      "address": "0x1f5A945dc87A984C048abC77B2CcEc1C65372d50",
      "txHash": "0x84a7e7f880f8401fa2eace406aa387f6abc2b6481f966469716612a92c4fdfac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f20d081aca46ac83b116c342e2297c4b441a2edf46f187c8255470666816299f": {
      "address": "0x0a886D17C3C22F5Cb275C5a08Bcc6c998E801662",
      "txHash": "0x09ec92597955eba97c16211115c32885e4f172db4641c115d9cf6654ae5270b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5b9b90b1ffff44add1843bfa7fcd0a8c08f48413b3ae7608df2f3e146de89aeb": {
      "address": "0x315beeB1B77602Def08f5982777849f89DA5779c",
      "txHash": "0xfa1c2adafe9a7fef1ba4a20786195682ef1fa6a38ee19996914486f74fefa149",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "281541c5f6905dfce6536f2d1f7a01b6cfc8d4c5787b369ae5430b1c497f3fea": {
      "address": "0x1Df75BF3A916FD98CA45b1475141166cc0BF8f81",
      "txHash": "0x94548d169c1266d3ef76815d6643254d13805aeb22e551c683553b3c66a2729e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6b6154fbd312d39abec0761fd15379bcbad43062d31054448a7d8b4223dfbb5f": {
      "address": "0xe62DDF685a6d7a1faDA1fa73E98C8c33B7C42904",
      "txHash": "0x25ea13be35de809bb0387eeb35e462e41deb3025189fb2b501afdbd108a6c2c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0b2ae8e08d34e3351dfa7613c682a73f22a2624a6491a90bd9f2d9d3f7beea06": {
      "address": "0xa128105168F7fD66d3C6f9031a417d3e4628a2AA",
      "txHash": "0x94c2e22063954239735891381fcaa519557233cb117bf3fc52f293d4dba2ac4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "46fce64c235be85681401789bcc00b335e27755fbb1b0fda3e5d1dcbb35ad0a8": {
      "address": "0x390039a1D8ab08D34f9FE19289f277ecB6c45FbF",
      "txHash": "0xd4695517b641c2e75875b797447907830dcefdef6cb130e9ff0a7f9ce90317f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5fac7ba5708fb83d1d699bbcdf0e86424fd3582495c10e0ce2ad218859f5f7f2": {
      "address": "0x75D876CE7e61C2a1a5cA8811F793358267F01E18",
      "txHash": "0x63934cbaf157ee166ac599915a8d61b459c1121d32aea6fe1a24256bced6f680",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3a0c39876228eb0d7992c89d8dd1cf6788bf102563922d0aa3c2b24f3942461c": {
      "address": "0xD07Ae5619B366B101181b6b1053842e87b54f432",
      "txHash": "0x7abc385f6c13b6505b039104088fca869a0aece0d27606f524efb6dadb61a24d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32c16fd22f06e3969dad2feba780c33ade198995491d30acc2ed198fea7e646e": {
      "address": "0xb28ff7d7a2531C0Bd2e65d4Af46575f037279cd3",
      "txHash": "0xf42d8cf3481ae7ebe8758c299d65b89af486061b6d06bee3415b4894972bc70d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2843b53066c48253fe93727ed3874810ae01a457b9c3b96241fb23ea47e76c71": {
      "address": "0x660AB8b81D391b90dED684Bf0919dd5C0F600219",
      "txHash": "0xcfcac695da046b247b27df03af0e329a8a7244d43629e6080c569597958d5bd6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6184df7ac468fd3d89fed6465febb85989ab5428a479e1c986e15505dd1262fc": {
      "address": "0x2adB6E0DD15355a986Be095554C5806F8d0e6D24",
      "txHash": "0x6b644306092ab7533b2888ab15c154d559e1e5573676cab762b49822c554ebb2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:109"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e3316212c24898fd7d93af6dada2b92871f9550733efa89eb8305ca6d2b6360": {
      "address": "0xe57E602535A086F623Fbb8EE4a2bf83dD14329D2",
      "txHash": "0xb4956055ff145e693b8b37aafd4505eb0f97701cf6d065cfec555112fce9adcb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "366561bcf99bbfd04e3686903cc52048579fda20222439673a0717765c6627b2": {
      "address": "0xbce335EC2488Cc4848a8786900288194fca14fCB",
      "txHash": "0xec0733c379604e8290acbe8e1eeaca3e2a8b2957e00741f9bdc5c2a0050aa744",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fcb6748783357a95187009270f552859b23dd072e3cb66bc54a440bf5b547249": {
      "address": "0x6670f641859234cdD66Ebb50E1Cd2cCd25f550c5",
      "txHash": "0x4b400c09198315124aec98862e606c34dca8d9ad5247bba0d2ec885dd2013023",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "06e9fbc6f0699753ea8c91c40b20e40814852bddc9c14ae5737cacf770f60a91": {
      "address": "0xFC19bb4A7a999292b0a0F1E74Ca044fEb915ab9d",
      "txHash": "0x20027d8ed4820a2ae0f04b1729b0053ccd36e9faa2c6b79df15b90f895d64be3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd0794f7765b70a44c81cb78a81ac43717a60d9d569867e058e7f847d767a5fa": {
      "address": "0x684C259205DB8fCf2c660dC532563097cB4ae28C",
      "txHash": "0xcd4975360964811ee7128f47a66b2e7b852e52a735a749e5d45d269c0f180270",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eea594eb021f7f095a8b4d3d7b026146a2071ecbf0767d100a5b459f3f473d76": {
      "address": "0xf7Acb6f3EfbC78ea2c78f90f9f41698f6DD8480A",
      "txHash": "0xc256af8bd5b2d63ad1e0434d6823d625daff85b611c31c0f2b444ff423041a14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ed3c765e77464fdde3132bdc11daec31001e1a47e809b7cd8dd18bd0759b2cf": {
      "address": "0x50C9d19c7b8159BfAAeF55DE245c0e68BEda9537",
      "txHash": "0x794e1dcc210e18487d0db36e3614c6a058971808ca7a63f7647db57d08fd54fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9f7359350fd63613468aa8c1884d50fe5f81f63d773ff1b3e0a0aeb4b788d212": {
      "address": "0xE1a9E5836f8cd60EEeE661fe1F783AF84f364981",
      "txHash": "0xa64612a75af76b847c6e927439be2ebea37534745601d573716d19fe25d28d30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "161b923800b51b7c2b5b639a26c0fd1242e5bbd97343233bfd91525ccfcc99ca": {
      "address": "0x0Bd584D7dDAe4Aa4f96125a719F078A066902511",
      "txHash": "0x4ad4de62c70274ed42e46af6ed70615f83c1ab1adb22136a09f7386e412d4312",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c04110061952752fd0d38b1db3de8aadd351a9db413edca3fed08e6b15700b95": {
      "address": "0x706660E64392e3f222bC82FDE743fCd134d30cC9",
      "txHash": "0x9c3e637d326dccc60bc933e31b316cdeb496650074f1b8bb44a6b4eca17edd82",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eda14815ba3d089a1f964cb8a40b6c1f51423bee84eb405cc221fb5ed681df5b": {
      "address": "0xA1EB6924Eb25f7F7fa184F1DACef03affaDf88F4",
      "txHash": "0x726397cace734265e2ab08fe5dc24a8183f11f9eb1e4ac5a4022e446fdc949bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a9f4621d32d39269dd2493aeaad15172340fb6b5caa7ad6ae1863ec989589b2e": {
      "address": "0xc37200c275452Cd9920E3d99e0E1bc8f24879a2F",
      "txHash": "0x7c504307b1fe2acdaa8c66d7a68e73e8a3f9d4fb100ff4049cfdf72e046d4de0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9b0a29dda6b64bd4ab766d612992a051b027a31b938e243b95c2ed0f1f278f97": {
      "address": "0x07da7C8af8Eec39a4c94a2B1B4B564A1241FBE22",
      "txHash": "0x9bc0d7b96901e94e1a0ac707c35080bc5b4f66264570ef47f24d7abda709fdfe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "393751cc8fec121ee3170cc424ecb33da193af6492c963b513c0448683cfec7e": {
      "address": "0xA1B4c0f776FC78Cf4A4DFc8DFbF5081C68f7f5dF",
      "txHash": "0x8bd844ffa1f15062fc9241534606a8f3dc6b22d2416abc61b740fb6a42374b55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9037c94a33bb7b12c0f6dc59c8e6648f523ba5b88eff7911a10ef7b4617905a2": {
      "address": "0xBABF18b66b800B881Efd0d364C1e30140FEb5e7A",
      "txHash": "0x7a8456646230ae118ad6c8a8d55337e60a395830774ddb378dc7ad7dcc0dea06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e884591d03b675a9f04f89a10524e08b8eac3e1da62e40a92965d3ec133dca9": {
      "address": "0xe2385871c69aA9aD883E197C5A77B8dfdfA96DaF",
      "txHash": "0x1ef49cdd7266aa644c0b3ed564db29cf274931d434654d96eef708219a4a907c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "21d8e4843eef803aad6553ca9fd9264a6fef3ef22b1d0a4364f91c95a76a67de": {
      "address": "0xc03a3654aE0584302AbEeBc72a65aD566C772539",
      "txHash": "0x61f27eb55e6d96a46dc114a0240896c4946954a470c6ac62b32cee8c6ae5698e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abfbb9f24c1b87002a8fda263aaae3a43171a3380718aa1c2891c68f8bf368c1": {
      "address": "0x8F2f8bdb841C0903A0613b4746A58d7fdA18b01a",
      "txHash": "0xf7080c9c0d454a3541d3f380acddab7619a9103f38fe115653b1b371af781a9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "12800880df6ba376d124e0042e0b11f89604d3ef3040857d462c8a13fbfec6cb": {
      "address": "0x2b605A431f14A7d6cC05fd9c68DE28a39C993724",
      "txHash": "0x3307a9bc41970b2403f1d7d06eb20bfd50ae22ae844831384457ea8842601008",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "40063f68ce7e96e0210f95103bc34d5593e7c912f95983dfed4e2d7792c43b0a": {
      "address": "0x35c5Ed00094D0EdeceC5503b8B55Eb4407164825",
      "txHash": "0x99378cc7b1e658a564417c379f2ae0809ceed55a3da33627e2177269312e0913",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ebedfb85f330dab463463e316fefc6b9fbcd040fa29b89ee9c08836144104daa": {
      "address": "0xA8D9253D07dE2A49F57F9836428b1c644cfA029D",
      "txHash": "0xb7934155c22acae35c09d788b7a69a68b74c3b10dd0b837412f8c9fe4f2e72a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf4d655a214b553a862241036d9e10c66295bea4881630c0463965b388ecf95f": {
      "address": "0x89c97fbB1202Af704A50488398Ed5828a916bF55",
      "txHash": "0x974a17aee215c045bdb99b33c5285465bf80915565069cf482ddd569dd844ee6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e54ae3d16e4ef78af2ce0fe241661d3789c4e62b43f344e5134537c0ebef293": {
      "address": "0x3B91b45B49bA76321B9DbfBc88f565725925092B",
      "txHash": "0xd5d115c3d69e2ed5e465288ad8d2af5c724862f8e0a029c46061f723a89fc4d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "48651d725d9ff209b9098a8d1b9614141fe4e3f2d118f5f7dadf7fb95ebe121d": {
      "address": "0x0145fA7e768C0De94B6a79B8d5441cd7F9Db13c9",
      "txHash": "0xbd9e7645785ad1286ba03bc53a9726b2eb39aac6c20a2e467a39d52a0a629703",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4daeb8e8d357dd2b456733f33d9cc6f7d4d483f97a532b1224af486c6ada6b0b": {
      "address": "0x2396E610b8e9e2708F4c288b394eccB2EC09355A",
      "txHash": "0x57d317d096908df4050f9b60bb5d60965b20d7625e6a0a982f4d6685979ed098",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ab5ee5951856d432f15ce2dfea224d9fcbf1576afe848c85a973bb87d4179e2c": {
      "address": "0x76ce99F8179Ab136C45B42930e3664019047Ee9e",
      "txHash": "0x84f1f54eab36f29f71bf327a90ef5329fb94656d033f537dffdcf043464eb34b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22ff41b0d7faa07c3444ae1660a8e60ad9e89ac24976b0921ac37814425087f3": {
      "address": "0x168373dEB5eC705ea51a9AFd639c23cD1f9BEf1c",
      "txHash": "0xbcb73dd08901af6524d469b782a8c2b1443607bc0557e6677c8581c5e2eb0f83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "857a5ec748a8b55b05247bd66b6b9e9c1318e0fedfdc55629ad5c718da231830": {
      "address": "0x16bBc93ec25ab38E54dD7DAEbf7521e918ddfFd2",
      "txHash": "0x7e1f5da7d29c4c3ea2ba36adad7db7da1f4fc90a1dcd603f14ed8bdd43cfe24a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6324a6fc82a87515c096cf1186e2a62e7d8890880966ba3d67871af55f15e09a": {
      "address": "0x0Ac8E9ebe12539e61E8A331390F242841486696D",
      "txHash": "0x2c947b9e0e646f9ff27df4d93024941e94528f41a909b7061ccdf0b9ef3d7605",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:147"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7dea430516e055ae98766b62399087870369db2ca2f9d3f41131a15d4186a1de": {
      "address": "0x6744aCd00001a2bB7f650b0De64D875CA2a28d65",
      "txHash": "0x670a09a4cf0f0eea463bdd62424a211f98970bab637d2a07a1d0db47f55d3355",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:148"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd9e76fc180d9a2ad6971377f4129c3d9fab8d7192fd0fe99b9bb386de80ecd3": {
      "address": "0x70567f907C5ef08FD016829d19c8E5381C65e25F",
      "txHash": "0x4ee497f5dcaf013907affa8570aec85d192e04acc0c6cec351bfc8bbbc441080",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:148"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4e2f6f86998b0ac581df362e67afd6d3e05cd16c2823981915ff8895bcaee17a": {
      "address": "0x395ca8b24D3eA292883389Ce4525e7527d00A46F",
      "txHash": "0xadfc7916460e2f007288679285b5ed21a737394c834dc6581e487e8de29d639d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:148"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b26fab984937284624771ea16130ada78e97780acda63e6255fb1d05ce13a5cc": {
      "address": "0xA7d4625b5529fF6c9125cF1090aE8e6fa36cB2dD",
      "txHash": "0xab09c490d9ccb158e8d03035a0fd3e03cd9bfffe5c63f787de2d919307c6de6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:227"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f1a5af9f73d8bea6029177ab3cd2b6e8ebeb103e855629602dc41cc732443260": {
      "address": "0x1c058c980b1e1b428A147A4b422167cc655e3a10",
      "txHash": "0x0a564445bbcae5d9372183e7afa5ed7a1c97502c7edc5711373e424c9492d5b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:229"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8695e2ea543a67e1874ca2e78e6db2dac0a3bba80bcdf97a98b5616c25d24f2b": {
      "address": "0xCE9Aa23E21C68516e68a5C42d82c9c5e7b5DdC86",
      "txHash": "0xacbb76913ba01fd0dd144dbb7d5474687b04dfd60236606e06cea98d601bcfa6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "75015a1b37c96980df017018891a1464d7f6b7b6f26f1b78cb2b1bf7b4c61a3d": {
      "address": "0x88C030bf6B5B42dFa106b2D6b9dB58CE8879fa9C",
      "txHash": "0xfcdc8ffda74e793ac6455f5121f7b3cf15562933d1812f5a2784bfe43c2da5e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:229"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9c4c9abe33a3a003680a3298830189d65b3ebe410f88e6eada6c04fd0f79ed66": {
      "address": "0xB7987e9568c68E9f54B5bD15F1094DD097B5E798",
      "txHash": "0xaf7b8205a3574cc042de5e812835655b2f97615f89f7dcff2b443ff95b7584cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9a26ee90b4981f3d530fa690f1036069b1e033944783af8415a02ef6f7f2dc88": {
      "address": "0x40416A8C6C82Ad47A9087660e627A84ff9B3ffb9",
      "txHash": "0x5d0a8b7924a82e532aa7d65bed6354459da303517d91c3850607fcf61b891cbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b17d0ce58fce98e3e94c214467c2b7ddcf521be1b4cf966691af7329be0b267b": {
      "address": "0x2b1F6789892b86A36949482D91D45E80707D6FfE",
      "txHash": "0xf4ed642863467a5551c586f852e839359ff80190440db5a22fc60c2f8a395e04",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ce18e4881fcde96a5af160c2430b98e0d60ee52403f53ab628e7c8a497145cfd": {
      "address": "0xaB199195721002A6754C9728B3037DefA9BbDc3f",
      "txHash": "0x07152a029115bb93ce2262b22fa9d7337111b38fcd2955969f888a5cb2b7d472",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c4c24253e30d0252cf6557c5de0b6ec7da5bd5610fde2dd297378d1b2508940d": {
      "address": "0x13690D51aed61aE893bd143E4F9555C658b7a4C6",
      "txHash": "0x1694d355207243af606b997ec1ce82355b56224f6333abd0413370b15ad7458f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b53d444b5c4c43a7de4b616ef624f2f2347c5b131ff854c4108bfdff7c08d008": {
      "address": "0x9fE04f788106c6FF48eC95984Cb79AA325ba71F8",
      "txHash": "0x231dde5769506da64bd78e7223d436c3252bd0c8958cec75ddbba88b2b3e6d79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "69c7f20f23fe986001801914d134804dc4d35df4096fc04729be813c4371d2a0": {
      "address": "0xa5522Ff241789885f11b8b0a0A40FA67867C5CB5",
      "txHash": "0x63b693f03e6e73cbc2813618bafabde10728f206e6b3856060113f3b44dc9821",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "88717c8ec2d23c70222dea06849ecc639f2f891d77c484c53d2ac66f0378314a": {
      "address": "0x3a909293C907C216eFB8Ab64800F915700841892",
      "txHash": "0x362f3c9b85dd6557c73545bc1840255079fc3b80d768cddeae7d069a92e6ab9a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "46cb166a0517b0c35675f6383bfb356b124b3ff42b5272785e6526911fb48189": {
      "address": "0x11F2A79C16b64085B39f3B8Cd67DB36d01716D5f",
      "txHash": "0xde95850a96d8b69be0c0d48ca48802542fc4d160ba898493a2e9091a56255cec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "81ba0988fcfb30e46e9303d72c5e80ba509ea872a432207e2fe3e475baf6ab07": {
      "address": "0xE4F9a6a5f7660A096CA7895A3d5018488f1c4da9",
      "txHash": "0x67099633f8d7e289550cc04d0fc99198ad460d5df21d5385a4360c163d5f15b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ef8700d975477ff00d62ccc58ca4972bae69b24c8ebeeb431882c6d50a4c0da6": {
      "address": "0x99916B6421696Ded3F3f1bBD518d4E7DA4f6DF17",
      "txHash": "0x3f3328f1a36b3ac7e4082e70f9ff2d27a03d53a86b4f749d6e21263c6141e227",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e0bcee7e4e2634fbee14df63fbe58e05a2b43cb4d0544fb49ffb1a086d202ccd": {
      "address": "0x971ab74c22E80F441d57857Dd00dBf5B0255a6a4",
      "txHash": "0xc9d944d6e2dbc8acbc3968d3b463fcc8a2e625250e1137ff5611679ec0bb7c0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1061c9a0343ce0858ebdf017b978e237e9d8d35e23769f60bc582fdfd1235bda": {
      "address": "0x48C821Ec753058231EBB56a4fEBc5492a5B44ceC",
      "txHash": "0x3628b12bcdcd2e0b244c5e08607f69527830d62d2c1e18e5c433167f8b26e3a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8f5c238a5305a7dd1ce10d8f42632f10eeee937898a87321ecfddbeb7dfd0271": {
      "address": "0x0D4803a7B6e35f92F28f453DDE60370F18712f2B",
      "txHash": "0xad4c4040d473acb1511a5dd6859c39616ed41980c725fe0849d77f7e8b2ec0c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "29c90050ce189a854956f6dc8113ba914d770e795cf96c676f9f1916928599af": {
      "address": "0x411f43Bf6ce73167f16674Eb64dB336c17A3CCF2",
      "txHash": "0xbbc5cc2e4611b38d3a3ddba04d6bb51d0e2b8256e53d15fcab5e0057bf699a8a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d2a5440ac15c8aef999d25434c5eaa5aac147ed80836e58ee93c7b90c1cfc575": {
      "address": "0x0b63dB38E57B13132FBB16C9724dE6D827cEc93e",
      "txHash": "0xe1c705ccba8974cbd8e84e7d7005e736d54c0178d6f06d7e1a3c2dcd7b7865a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e5b74b4ae965a42403b8ddd503d36d61fc2d8b6fc0503008d8f9f5002ed99b00": {
      "address": "0x7291faCFCc257643AF90E9d94940e8Db5C628FF4",
      "txHash": "0x2cce63ce227e649c286637b39168eaaa17771afb2a2362d73ed7abff5c274095",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a5760dd54e82944bbf5d793266024e5d69610334ddc1734e1bb123883b66e63e": {
      "address": "0x2bd265e6dF00A6056650Ee1c7731D69DF9Ba8710",
      "txHash": "0xb0f23039f8f2e885622135c2f5676ba05f940e587753a40bca3f3f32fe2b1da0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6f1f626994447c87da7821638a261d816dbb42260bb364825cac0205bc3714dc": {
      "address": "0x907dd2d1200357aBf5E46CA15b4fa837F7B8C13b",
      "txHash": "0x3c1c011611fc22848ce1310aff17e85581674748a0bfd92e74ad41d457a112d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d4f82ad198e07861d871d7e742e6d8fbc124f7062185b09fc94d34dc631abda8": {
      "address": "0x155F8DaF4C95BD70Ff63B3117FFc03918aD7F36f",
      "txHash": "0xe888f8784c8d8895dfbf14b26657dd5cca36942f449a38af9c80edf3975ba0ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c11227d6e5e306e293425c90f9a73bcd7e25e626d0acdb2ff26673a5d0bd79b": {
      "address": "0xF9ff95AD4bc482a3bFAaa64A011B8f6c2e18B3d8",
      "txHash": "0x1db8f6cde99c88d7d8a745fb2ef5177a0c2834d93ede5acfe49b5bcdc9a594d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "edb28bfa5be8f1506330dd664a26cd3214f37f90cf48e3b07ed176e634f4a3fb": {
      "address": "0x460dAcA0c649a1468CDB471E71e3A65Bf56191a2",
      "txHash": "0x0f8d833fc44ce3bfc5ad0b774f56f22798812d24303dff9ae6351e313a7fd15e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:30"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:244"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc2d6a521f5a7d840edaac6ce06f61080d3e12ed99ce62e4804cf8dfb6fd3e59": {
      "address": "0xbd04d2538aD4f4835e2e74C07990A6fd34f8c94a",
      "txHash": "0x11bae56ebf763d4b3bbee51744030f651fcf7633b647064c50dae174132817dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:30"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:244"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ef779be2c991bb61f35e7446deab2dc0d123cf7ccaaf2c039dafeffd19e1ac85": {
      "address": "0xbDC7B6b24049E09941D6068E5f311197Cf19659f",
      "txHash": "0x4a1fa561b4ec7b9f9ac9a6a86dfb8378e2aca2719d499ce49576af3b345dba22",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:245"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7ce638742de4c4d4c4ac08b337bc95a554017b9f94d94d9537b94d4a742863b6": {
      "address": "0xbd7DE97D07CD9F935989C8A91a01cd2eb789a367",
      "txHash": "0x79391d05d7db339017b96b88db3ffbdbec7deb5ac31fadfea1d9b0a297ad1ad6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "11acb41e2f8f8232cfb65278e3c4521e4d40c29f193d8c9ef688b2c251118908": {
      "address": "0xad528effd96595441BE0d7fd425E09C8D142C8F6",
      "txHash": "0x1b2c35671b8cc3b09022aa053c38fa9bb902dad63c9e1d2147ec6b35fd0c12b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b023ddc8e604f72c8422fe1c5eb9ccbb10de291f271c78a7841788c5b1a3c261": {
      "address": "0x5F10133e4417A90c09A4Ae761e65AbA74325A178",
      "txHash": "0xa97ccbb272767966c17c6097803860eeffb2c1ffc33b4d610f2a4e20f10817cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "134d0fd33744266cedf2176b33b4ac42bd8c712f053b8e471f8f178caa5ba0eb": {
      "address": "0x6467061Dd81feA9629b12b10868b702564E637bA",
      "txHash": "0xd11add86098c4eb5e479c83fbf30965376f4fbbf55b79e6dc4940db1119edaae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e7dbaec6ffe7ac048984c4bb30a14aaedf5f91046ef559695ca67a286ae21891": {
      "address": "0xEa8b3eACA8C0b383aE556472dBAc3C716Eb5359D",
      "txHash": "0x1362d80352f62ae25484a26bb3e12774523f7ac1b7ae8f2473abca35d1e7f4ac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e69df3d3415afaaa2e3d97d92d72a3ccc84e1d9e2533fdb9ce55d3172e41289d": {
      "address": "0xAE6f32deF9D14ae01b2311BF70669075b79af7A1",
      "txHash": "0x8bb322cf9162342798b32e0131bca47bf18d9bca94fab55b570e31a059a7b958",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "18016786255039d7d4b7698f6e1cc9177e75ee75f4f68f733c8933498a1cead5": {
      "address": "0xd96952c1E04C542Dc9001BD9CA923a156ea70ef6",
      "txHash": "0x7125d1b49f7c8442e99bb30a6c6362bb338f2a678eab19a82bd3d0ba667f52c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b83c6c35c80ec1108ee8ae8830541fe1ed28e3aa3cf56bbcdb69a275e3a05cf1": {
      "address": "0x3B1E279C898B83a893Bea20f4dfE32a146e1e5b8",
      "txHash": "0x7838fff47b05125d9f48d1489a263d95c487a141a20a9580b03a4890d7774e9f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e93eebb39995ccf6bf090bca656fcbc141adb7d7dc78561274fed7ff072c6d28": {
      "address": "0x573Da641b8De1f121ad01A234e4290fE62C626f6",
      "txHash": "0x29ade37d25fc69ec79ff6647314a9bfa2f5dc50e5ff4585b3e8e7cb23c551111",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f7af43204a92cb7ff51b604eb7af73ed0f0a9d196b44900410f090b8be8a0d52": {
      "address": "0xbB0e579f4ca0Bc552e84C3Efb5FD57A4dC3aDd62",
      "txHash": "0x1a32e74c242d54690b8f1ed6e34b3ae6064516821f4493d7c70c63282fdf526d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "028e4126a03c58db3753d68a988a6d2fc0de327e1c197fa3816e8db7ded5bbed": {
      "address": "0x5F6fD5E6129cB049F7bf098A6E875CB364d5104E",
      "txHash": "0x0fbcfcb1225dcad8dc0dcebdb4f5ac2be50956d0dbfedc5cf3b5025065dded76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5ff3af60732997efeb953ce39ac784dcf9b27e7ac8ad00ff4bf831f4438d3dda": {
      "address": "0x52F686ef186d40DF9627927A0d3b20F320D1D41c",
      "txHash": "0x4a9a0cfb520867f53fa930ca6f21d658cdf133a967756eee490ca96cc878d937",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "43198f9dd010bb577def3260c3f301fb99f1b04768299597ded273d3e224f9c1": {
      "address": "0x89193121422424A80b8E6Fb2d1768A0BE3b08A97",
      "txHash": "0xe6365aff45a7a535efd7fe2fce36913eb53b37d502afb07b3b718df8a0bf5a15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f716b3a97d9cd978d041e51e337313e29845f5e40bf83c2ac39f02a015f4bc8": {
      "address": "0x3B72038CD94f69A747bf26EaB624b23154C1667E",
      "txHash": "0xe1be3690a2b3955a489b720fa0fb2a687ad4a1188b128b56482b236f4e6eaeca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "08193ade70ccbfb3d2c27fb1ea992cf04ac60da242a656a0702af3e084bbfe84": {
      "address": "0xB72f14D88da0aAF25F150adf19fC7DDb97EC893A",
      "txHash": "0xd493037badacdade6ebd00643abbd395c5b59afce222befb1a62e7c2e157a2b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "59816d3aec48051d4033d81bf83dd9d78d6b5e983a30bf1905baf39a65d4f8f1": {
      "address": "0x2F9FC7572786e1D8E3c95dD50898233Bc1390c36",
      "txHash": "0x2dbb4e3d2d02435c4d5070c7b97de843fb910ca75e5d03c9162cc56972b510e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "04c69cb5b492c045e870f420f262b4320b07b755f5e06d9010956ed9a86e87c2": {
      "address": "0x3E41D276f116977d575d695E83565996ae1c4236",
      "txHash": "0x46422f5125cf6475d5c9d17c8fccdaa91213b5b1028c376108d08882838e7d25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2732fc7f2cd5cbb7f4d7405cbbabde43af7e5136e25d526a6ced09710d66699c": {
      "address": "0xde55BADA8b25149f826A5598D6bB119DA526dBDd",
      "txHash": "0x9cceacd24c9f0ec9b1a331103988e57c31b18ccd942442ca5fa829e0d6b5a43e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f0f67afe4e25e571a24edcfc7a363a6c2e11343feab5a49370ea01e21bab96c7": {
      "address": "0x5baD16bfDf017947e4deD714804C94084966456a",
      "txHash": "0xb076d5f90e156e5d350b8880ee57c841de71b9eb600b22329c89597a7541d2a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4388e8c3df94d33119f1ea9f65433feed22ece7c9ffc6b164f58a500860281e9": {
      "address": "0xA37bd9A96ea6C2D614a5cE80470f8b7CEEaBfDA3",
      "txHash": "0xbdebfbc88d7f47e191b9e5ee1bf2a8f1bb625ac1c728f64e31f77a7c656908fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "632b6b94944178a8f01c2fb57cc928892b5d77e87c4573dad558ebfe7acb01b6": {
      "address": "0x27130143995EA1Ff5Ec33510cc624C8329C578dF",
      "txHash": "0xedab121382f9f869797c0dff47bd169401eca27330eb0b540e8b0a61ff56f7da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b315f166c6aed78934453005eef163717ae35f5d66f99e20c0c51ac3a6a32717": {
      "address": "0x18f6883D628D5d26f7F7D0D72bAa04F5cd4B8b83",
      "txHash": "0x3f209b7094d7b3eccb4b43adff327495b337893f67816574dd054316bf2eab0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a1cc8725243330071dda3606c7b2bc9b07de9f02043bd746b2e96f316a2d5c48": {
      "address": "0xD8206D98AbeeEF9c67ED6FC69d82D296e89a0a30",
      "txHash": "0xf2e9d43108029fd4984e7c44dcb60bb045290ea568c367c13ba3e13100dbff0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f6f7d0b0f80807dc59c718fe769638f8337b063119404ed805a3f82db5900084": {
      "address": "0x6A68f65009AE061ca8a3E115e8195F235da3D7E4",
      "txHash": "0xf42314d79780fe89b70463abd8a7a048049769034c4279269d2e94fc43ba53a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1371_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)3727_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:248"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)3727_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)3727_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1371_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)1371_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "29625f22c74f1141e3a0d3d9db461ba81dbd631c39e3c8b97647ac6e532dd9d4": {
      "address": "0x3f8FA08A7b5dde5DF1C64A1B9d20175Fb11Af835",
      "txHash": "0xb498e184ebdb615bee7f045567d121e7727e0bc4aa3763eff87dc7c0192fa1fa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2258_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:50"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:264"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2258_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2258_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e0b9dcad386f737a61bd521a4fe829aa5be43254b3b3eef63301920d47346ed2": {
      "address": "0xe085357bD12d181C3849Ac85227478611b039F12",
      "txHash": "0x2d7f66527c71dfee706c732f16b6957560887612bef36dd6d57f80d63bec2fb6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2258_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:50"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:266"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2258_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2258_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "90d51c9e944890597300ea5de274a82827be95e1a602ec32c8d7f8bdd31d7b6a": {
      "address": "0x87f03a3d16C462155CD15b6Aa182A9DF3D482dF8",
      "txHash": "0x53e3b92f1283add75e6727685650eacc26da4f8432efacea6b24ba502619985f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2258_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:50"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_struct(Swat)2258_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2258_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "78598b4bafc13090d6356badb3a2f1645eea437503c30e1768c1eda3f7e3c1dc": {
      "address": "0x2B693222e63610D37579159C75c67d701D2e4082",
      "txHash": "0xf13b9a3dff709c471936adf1c0e9b928fdfbc1d1bbb2133dcc0dd029ec6f61f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2258_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:50"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_struct(Swat)2258_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2258_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c962f290787ad2aab5f8d3ab07d4946d5d18871a35c9bcbe4ccfc71c32e04ed2": {
      "address": "0x4218b9622fb1Ad4178806a1d5Dd0522ea41d004d",
      "txHash": "0xc2b17dce0eb724436ec058f47fe9a2d50bc0ea424bb030ff17947ea84de96668",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2258_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:50"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_struct(Swat)2258_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2258_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "72a550d176cef0103fbb23ae9b7272f4aa8425eb0c8555eb790ca30b2723eda0": {
      "address": "0x4d535bb3c7a9b86f3f94e9f0ECddE53cEcD4a44B",
      "txHash": "0x99335b8bf9242ad977cffb52ece218d33482c76f4598e48537cddcac00742fc7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2258_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:50"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_struct(Swat)2258_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2258_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a24cb5704d615975573e05c6cbd3b90e10b0296220d5af1a6b932fa9b7b39d9e": {
      "address": "0x6e6045d80004FC0a3CB344fF3BbB99340fCd1cA9",
      "txHash": "0x507dfd902dd2ee165e49754f2085fcc9c8a9c372b51872180c44bc4fe4736ebf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2258_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:50"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_struct(Swat)2258_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2258_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5d928e6da29a2e5bb8c6d77a4a0084eb00fa39cda869f78b9718d3b0c5318394": {
      "address": "0x83704c05AC27D5Bb60c2e731917834F0d120839E",
      "txHash": "0xb9aaadee1bba5631ac3d02d01233ae9f9cc977fb27e6c19c0f7199bd9b4c8ca7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2258_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:50"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_struct(Swat)2258_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2258_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8e7e8f4da3cf4732f7a757ff022230bf7d4f45671c11faba1e1a9e30f1a92b8f": {
      "address": "0xbfd0b006659d78E097a4df2C5795CB85A3Ba0a9c",
      "txHash": "0x1fae02d802fe5a28d853e48c381477bcb2b1a0da575f0de31acc46416231ee0f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3389",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3389": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "713dfd022278fb1a0e585837d935be7dce1d96d0020ac18d83ec0e418ececb48": {
      "address": "0x9e97a342Ded6A2011c64A51D58751C965d00d1b0",
      "txHash": "0xf24de8d05cffe3d4f1ffad7b20664ffcf49b61cef1255494012285221254b168",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3389",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3389": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0d5bdefa54780ab5b3af004ef7732718d5e7aa4673855a1c4c00823768cace42": {
      "address": "0x19a21541E28E2fba42C710bA6850F83242098e68",
      "txHash": "0x1d39f15677e3e5e6efd11ff987030e154def42dd6fe02b8cf6e9bc8ab87ec98f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3390",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3390": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7228c5d464f77901168fa254de670e324667bb68942f40fa389e75168c3c4390": {
      "address": "0xD47f3ba93E8D98cc9360C1FCef50Ac868e08c397",
      "txHash": "0xf90d99cb49f7fccf40bf62ff336b8c8a8b3b370620522a4a7cd57f1b7a755d71",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3390",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3390": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3879bb503624fbf8ba71c03d849a6baa553312035ba41ff22b1cd258a46d989a": {
      "address": "0xeB99F0810000ce4b44A5EF44c597E62183B69E37",
      "txHash": "0x7a86352682e957ec501b6f99888336670b89fed80f6f0c5f87937734942e73ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3399",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3399": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2a39d616f2719a76ee0d9ee9be6a9c0a610893b914d59a7e37be7e9b79c055c8": {
      "address": "0x6fEED7890de002c63805B6Dab102C0afd1e26e79",
      "txHash": "0x3fb905415db7897a911f742f1ccd1b2d29b49367de00647626156b5348c6bc76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3424",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3424": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "137d560692295e0a80cb3e345411b99f9877e8ada7821dbe70172447aedf777f": {
      "address": "0x3EA53feC509cC36827F1F8d01113A3Dd7C3B01E2",
      "txHash": "0x57e3b1bc14a9db6ad3d7b3241c13c8f34d6e1b51e5a4a5fd99babade9d840fc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3445",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3445": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7f0973718daffe95e46709ff1b38040d63ccd3d9cc4b3c848bc59fc49aef0295": {
      "address": "0x12B95dA71F9070cdC93E1916c37b91B5Dd0C9Cc3",
      "txHash": "0x762f83d0a4134c4ad398a459c5118cf13c4870c195851d3ec992a38f2fa3056f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3465",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3465": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2b796b85f277db8314aabda406c15d7996e67f9556b4edbc1ed937998751f6f5": {
      "address": "0x193D10cF9925B4C5da977fa49F76Ba82925f7FE7",
      "txHash": "0x2a6ecf4cc59cc493801fb65ca5071995fc2b3feae23dc5a955bb1550397651a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3465",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3465": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e5215a04f887c9aaebfde6576d36adadcd5b79ac598fcd47b3275e4d846f89ad": {
      "address": "0x4A165aCd97DA91939791DF24f0eD2C19027af451",
      "txHash": "0x4c1b9c8d768cd8ab1c7df89db749088faa556aad23a18fa916b317fa157235ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3465",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3465": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0c45fa99dc4ea14bcc55efd391981377f1390c7ecf35c5c9c2b7232883989ede": {
      "address": "0xb3CB476216bC598A41c9661fB4E7195D9eC9dC6C",
      "txHash": "0xd966443fe849731c3e6ce1054218cdad633b36bd951180d6e927d849d63a9bac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3465",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3465": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d42ab186744aa6028c6d0123927ca764205f7ca77531313846f684eef6464122": {
      "address": "0xd41F1245BDf7D0D7D841B40bba41Cc2E1dFb4573",
      "txHash": "0x6c41640fced815a5b27e76c033926c1653f40271c45c0af47bd992d035401226",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3465",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3465": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4940d4bccb2732490b2427203c1023c81be64fee8af8cba3cf50524074f22bf": {
      "address": "0x7ac548a76E86EBDB0c56d27199f3f11d24200584",
      "txHash": "0x55474ca4de417187a6686d3eae349d1188fe77e641c36f20f67ce6ba430aeb8f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3449",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3449": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2e5448fb6e88acceb5fe15cd81a8bcddb1329cec7fa75019fcd4e1d0078f05c3": {
      "address": "0x383927AA7519c7D0DB8702A3D3819e9f3CFF042D",
      "txHash": "0x9f21f9316aea08221d2c4854ef16ea7cfbaa14674f3d99a0009aa3003fc9d92c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2259_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:49"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:51"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3469",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:55"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2259_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2259_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3469": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3c9afb15ae903ba7a7608eca8ec444ff450add7f6db7a7b62cdd3eea93ac02f4": {
      "address": "0xB7F40B265295F9eD37b428726eBD3Fe62971aa81",
      "txHash": "0x19e14f6d3701af0552302e156108b4be38fa967c4bdcff30ecbee652db67284f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "VRFConsumerBaseUpgradeable",
            "label": "USER_SEED_PLACEHOLDER",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VRFConsumerBaseUpgradeable.sol:130"
          },
          {
            "contract": "VRFConsumerBaseUpgradeable",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "..\\project:\\contracts\\VRFConsumerBaseUpgradeable.sol:199"
          },
          {
            "contract": "VRFConsumerBaseUpgradeable",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VRFConsumerBaseUpgradeable.sol:200"
          },
          {
            "contract": "VRFConsumerBaseUpgradeable",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\VRFConsumerBaseUpgradeable.sol:205"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2407_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:53"
          },
          {
            "contract": "CryptoGuns",
            "label": "fee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "randomResult",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:55"
          },
          {
            "contract": "CryptoGuns",
            "label": "VRFCoordinator",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          },
          {
            "contract": "CryptoGuns",
            "label": "LinkToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3639",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2407_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2407_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3639": {
            "label": "contract ERC20Interface"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0ad1f8bd15c7679f639ae72e53b48799ca5184caafd108b3547a8b9abc8bbfe": {
      "address": "0x2614F2628a98741FE35C2a2B29c356Df45870B74",
      "txHash": "0x01bc614d67f6a188b27fdb6d4c27f3136276dc675369b6cfc1e404311e01d1f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:46"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:47"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2406_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:54"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3606",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:65"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:66"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2406_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2406_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyToLevel",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ERC20Interface)3606": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c4b928b4bb68d663beb6845c5a4af94ad211f568d2a15f3535ccfe6b85e7e904": {
      "address": "0x6F49A30280177BAe9994Bc60287992341e2CE13a",
      "txHash": "0x464da2d18ee8edec9c17ddbc74e4ead72842cbc9d01482a70654a2f5dbe7a062",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3569",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3569": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "422463d09473aed9a6f15b451817bf1ad86147e8b7c078b96c4f3334aac4a539": {
      "address": "0xf0A9e9e8348a64bBe8A2f95A62F09c2ea0116Fd3",
      "txHash": "0xeefb8a53cda98cb2035ce7f3bc37b58702831fa70b62865e732e62ba9e2b8bde",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3589",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3589": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dddda0168521d242daa56f8d6cd108f8a817d20e1e33fe10843b0b96fd30349c": {
      "address": "0xda590a81015cb2841eCE1DC7Db6C1c2863805a8d",
      "txHash": "0x91758ab8a76bdb95e54418a03cdefd20df8569ab1384c69e7d987a4021f07ff0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3611",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3611": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6cd49f4d7777d7ea27847459501c147ce110123a77ca2246a013ef51b5d71216": {
      "address": "0xCBb029353ad6Bf97171a5b43a17bC7D4183Df320",
      "txHash": "0x5902030699db88957ead13afc9d107b260533691e821d31fba73057a33f71ed5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3611",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3611": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3359f3e4e3d1aedea2260fa3c3d184af8bd315e2da4dd4bc1920b3f912c41aff": {
      "address": "0x212d36316A5c1e101c352Cf1EeEcC4CbebA35471",
      "txHash": "0x480ab74595cf17330a2bcfac2b8666f2057da7965a472d8dcaa9d302174f6db4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3611",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3611": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "69b6fab15c59e246c1fcc2428ea7f0f347a6e7552af8b02aefd06eed85c38567": {
      "address": "0xA6e94Cf93337ACD360aCcA56830744276d22e8BF",
      "txHash": "0xd6dff6113c5718159619a6b470c1b1b9490695b7f732dd9d8355e37d916f4910",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3620",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3620": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7dc26ef6bb08f76915c74b4a8eae13a81c67141a0c985da2167c2a349168cef4": {
      "address": "0xc8Ef72C3a1753471b990e5Fdc08E22dF9371e277",
      "txHash": "0xf05341eb751d7cf5e6e3f58bcda9910bb4a2110c32c92acf001981ff939e2896",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3624",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3624": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e7e85d9952d6b7a2a5abe28609836e91752379024b2aaa0e247482e990255df7": {
      "address": "0x82335EEa5Acd3851a843C9A2630cCc5f58f3100D",
      "txHash": "0xf2f9f4837371173162224a585356cf6e8d3cbdb56afbe0c8ab90a77819bc771b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3624",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3624": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "413b7c856c129a20af5cae3d0c31ca2c7f70d5cb2f68889f1cb130aa48deb3f1": {
      "address": "0xC0adF24A5CB3d79ebc40d27B2A19018C6E15Ed53",
      "txHash": "0x749e9b16379442c243fb2e110850afbd8cf53fe13ff48a1197fab2d94835b9c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:43"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToSender",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:44"
          },
          {
            "contract": "CryptoGuns",
            "label": "requestToTokenId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:45"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:52"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3606",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:63"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:64"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3606": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0a24f25a35fb082508dc98a358201dd1e409e58a576842999538bfbfa5ae70a4": {
      "address": "0xb936F083D8857981E9Fd4d8734Ba9B510E79DA2D",
      "txHash": "0x8268641f9f4aa65910b1ef4b20476778d8e1ab0c9a8e716b53fa76640d40cf35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3670",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3670": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3b0f7d693b1e230dd6c25365f4b68bd35c036df71d32edde5a2bc661359a68a2": {
      "address": "0xa1f097a2E504f46ED4a42324Ad71754E760001FE",
      "txHash": "0xc6be5fc5290242d3c1633dc2df7c5340be5bc190cfb22b1ef586c720cafe0ef6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3644",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3644": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e3d06661640038a8c66a7882dc74b6c9b054cfeff18813a42487dcf1c2f86058": {
      "address": "0xFe423334ce3ABcaf47b4A432313A2Ca8C98CDe85",
      "txHash": "0xfe858b3dd698e85a59bea9becd5777089d469f7f34cfb1554ec1e843c807043b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3652",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3652": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e6de4aed9490401eeca3c2062c60aba33457709b665504ec75c799261fef3509": {
      "address": "0xa15e1EC37A7f2E8eb656af07a90629BdB577333B",
      "txHash": "0x22de8e8966a773d5d415bd704a04deb4f9ade650fa1fdffe17686a46eb96714c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3665",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3665": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5612c8ff160096dd1cedf1f61d198811f94534c09e0a6806c7a25f187dbbc54f": {
      "address": "0x3407713f526e18dB912fA29D3036c51e5823FF62",
      "txHash": "0xc7be8bf0ead20aba1c84fc0610e70ec943a7be86e9f89adc3a9709286c361955",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3677",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3677": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cb96af2eb9226a680e573ff04c78a783b8b436f27a0243e78f66fd84297a99fa": {
      "address": "0xF75a60D0F1D2cD0Cadd0A7Cb59463DE1Db9da31f",
      "txHash": "0x078315bd76c80d38b30c5b8b5f70cae984f63638ae0fcf20b79f58bccc8d0244",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3665",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3665": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc4bbc829e10730e48822e160483a3879f5cbd40a6230d903573582ceb7e6be2": {
      "address": "0x3c0c96ED41A049bE7C87359187Cd0294129Ce31f",
      "txHash": "0xf05a9102bb8e63aa1e26810231755a3f015b79383bdc759afa4dbd4fec807763",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3656",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3656": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ac881b4fd6316dc8de86b7e9ba0631bf02992d0844dda2504772d99347c4860f": {
      "address": "0x7dEc6F63e797F617B6897565609D77F17dbc62fc",
      "txHash": "0x60f251cb9d78e434f0ee9a227d1335fbe0c44ee735162b7933cf8e395c8933a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3665",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3665": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "004a2e1175314bfa679c0abdca22660a903bb458257641a10e458e0f3226112f": {
      "address": "0xD092e02971e22A94531926192E64a52d8f073B44",
      "txHash": "0x5df978ca3e1169e4e0db995c9f39d0d2aecd40d3b8b329e39bd9a3ed64068bbd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3653",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3653": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2b5aafa6afd79ca5bd2619fc9d597b11b21fbce6fa579b44b841529ded265c0f": {
      "address": "0x98Dc996CEE8fe707d13EdF4e67Ae76F98DDdf523",
      "txHash": "0x87d991c824e41337f25e2f76ac788f4c8936628655f0f78766c9c7c2dcc8f23f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3653",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3653": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a189f9de72f9cc2a124c64a7811e031bd7a7fb018fd0c06ce8ce2259c94f2303": {
      "address": "0xBcE1A65737EB471d55c593802482d3CDB96C74e5",
      "txHash": "0xe9699a26a64feb380e9dbefbd0cf87d16367d51fbd988d7bddb3b0e22d11c378",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3654",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3654": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d9393d6d257150617236eebdbd5d7a955ecc5254f6351c466597f756b6283c42": {
      "address": "0xf0f35184347db732910062570a510B6D7eCE9cf0",
      "txHash": "0x33f745d978a3ba13a2f2c87c370615fa6f1722633d110d8064c473d9dc872731",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3654",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3654": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a06a0af8ea139d83ed89fc6426cd8d7f5eddc2e16d09c951e64f3d126482ef62": {
      "address": "0xB36d7d4A7516E565d5249fb78FB11684C9E16E29",
      "txHash": "0x82aa4c65fd973ed9f47e8ff33e7c39ccf160e71a2cecf631ee49ae4721e2fac1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3653",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3653": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6164574f80675f05b2f15397eb27ad342255f0c61f7541bc3377719577735391": {
      "address": "0x240352ec923B4398c609b01fE0568238786Ca687",
      "txHash": "0x522ec8b95e86b3922750a44a76810edb739b882363a582fba8d986a71bcaaec8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3666",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3666": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "deecb117cbbf973885b96f6dd3dbbf04f21e9225a8cf54d1f13a0a27d1813978": {
      "address": "0xb1af5eEABb70F5eb3E762B6dd4A847FF1FB4394C",
      "txHash": "0xfd0787727663fc6c5af4bf86ab43f69e3eea24c0c047f8460548db6a507e4d0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3620",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3620": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f3765d1e310a6e6d0dcf43a05c5dec7cafa0d3079d7dd7ed2d9dbcf886469dab": {
      "address": "0xDBBA0A306066Ad0e77b640E46a30c0206655698F",
      "txHash": "0xfd6c325c1e6616dbc2d02160fd976e5289263d7bf7220cfa19b4d0568cb5c6d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3656",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3656": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e17b85a6cfd0ee4e198134515cd331b5d78242cf49500d4026a3ecb2ad0f8e50": {
      "address": "0xB5441C0c2E3731685860f1E255F7eC5833eB3958",
      "txHash": "0x15922bc8a787ba9a40c105fa6846982bb975b66d541144a6c85b15ce37751c82",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3697",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3697": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "02513c7d666af8331c7e4792d292dbfe9d100f60dd2f7be552a1be9a1746d3ed": {
      "address": "0xC87FB24CdE51AB75E69D1696D433Cd319FC51a33",
      "txHash": "0x45c18d7fdbb9acb4cf1ad41e1fea919ded5f69e9594ca03c8f0120dbda461c1f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3713",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3713": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "35683727ee5829e15a9f7baac62d7364c5a1700951c6590b4ca3ef6fd035c045": {
      "address": "0x8F091557dB30D12A0284CaB277215520136112a8",
      "txHash": "0x1d47a040d83779d1836d7e63e26509faae4378ff346176f2e792abaefda6486d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3713",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3713": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bac99afe0096dc1be0999c6d9355d03bb9e3439b61e3ab0b5dbb1ceb3763f00d": {
      "address": "0x712918f9bA1eA4315e68cA0C77ed748b83ac6805",
      "txHash": "0xe741417eb94bb0b0631f0dcfc2133f4d260281f1aba17fe641e5747713c913bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3703",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3703": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "270cb3c7f93c3cfc52c611a5942c6f5010184f2df216948d85bcdc158e29d5d9": {
      "address": "0x283254375DE3b5Ae5227657524B12f908a22152e",
      "txHash": "0x389bab3f8654aa3b2f9a996e6e85140046637df7def6876d9929853a66dd3552",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3703",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3703": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "94a633e7f51db15b0acc550e9070553a1027e05c9f2dab340e5ddc63818fa23a": {
      "address": "0xC466DAcAc6f572a3440Be516842e2DEc3Ea6ACC0",
      "txHash": "0xcdde94c7875ddd80997a330c232d2a405f0fe65dff1743cffbe67c52502c2814",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3703",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3703": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e113262627a97365738c972c6ce84c4abd7df1cb0ce5b9bb8d9d85de1cce1d8": {
      "address": "0xEC2BBC425CfaA26cd8d86fe0654676442F8dFBd1",
      "txHash": "0xa8d6b2c0e4a47e370bfc7b962d16b6a70e58fbc847385823497481f7fda91882",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3702",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3702": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c0d4765698b3eb238810aed67aac16539915c51cdfed7039188adfea3dcc2218": {
      "address": "0xcF022754B808B5B940a36F1Ba312CA747CE840FC",
      "txHash": "0x815d6887f623a473cb37745ee9080e6a02dd687dec93df67083201bb120e6c02",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3707",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3707": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ee7b4bdd494b11c4262bb83ec8c97bd764683f1ed5822227cad48efe50fd478e": {
      "address": "0xdBc9d4452e9D4b83f97ce43F466719689eF4f49E",
      "txHash": "0xa5fdad10a5d6f0b1fdfd166e9917c22ddcbebaf537fd405cbd2d955777e111bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2402_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3707",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2402_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2402_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3707": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4659b13e8de9e82a41cdd53fce925b9da5179265c4a05d7780d0be5afcb4d74d": {
      "address": "0x07e3FBb92Fd4fB59711A87096410C49d6254f8dC",
      "txHash": "0xc88a46f0201e8650d0eb7db48e0d9f720975dfc3c26391af126b9e29619b5abb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3702",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3702": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "96c8f0f9a948f0925fc445dbbdf1ca1967cdd99a717599e1503d23959e99c309": {
      "address": "0x1DF624652fF57eF00B5282E13DFe1B470C9fBbD4",
      "txHash": "0x33e7ea4d46004f547c4859849c2747cda64557d5f8e2df1f2bb4e6912d890bb8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:48"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3705",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:61"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:62"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3705": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e9169f706870567b0c2b402fb3a2690b10440afc9f471498f744a138ef7d87a5": {
      "address": "0x9377A75C198B317427d2275Ea1C69F0665Ced2D0",
      "txHash": "0xbe602a859d483ec89867f1ae979622fa366f393a826434c9676ee5cf211d9b2c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:46"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:56"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:57"
          },
          {
            "contract": "CryptoGuns",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:58"
          },
          {
            "contract": "CryptoGuns",
            "label": "acceptedToken",
            "type": "t_contract(ERC20Interface)3678",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:59"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:60"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(ERC20Interface)3678": {
            "label": "contract ERC20Interface"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
