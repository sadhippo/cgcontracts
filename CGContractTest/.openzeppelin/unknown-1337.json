{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xC5e87C30788fB4Cc48AeEF7b5617d4Aa4DE2AaD7",
    "txHash": "0xfaf22160f6118a4ddeb2aba09abc8c5f8d8edf4a5eaff79e2096ed76c821493c"
  },
  "proxies": [
    {
      "address": "0xbD439f9ddeaC7D2661B6598983c69dDe7AA24bBe",
      "txHash": "0x611081baa4ca87395a0400d1c65ea0b97d44efdab64929ca1505890b4e4f9c0c",
      "kind": "transparent"
    },
    {
      "address": "0x8629dd914f62492Fc5262cc4b742D96a5C6524E1",
      "txHash": "0xe6180685eb796085aa4194cf190018698d86dac30a1665bae57ae5a2c63398da",
      "kind": "transparent"
    },
    {
      "address": "0xA9dBE98f1E69b14FC6f1690EdA11652Bf9f4f45D",
      "txHash": "0xe32cbf1e649e52855aabffd14f0fe341500895bccb465c458e6bae729c0d0bd0",
      "kind": "transparent"
    },
    {
      "address": "0x59261f2E6579eE7b4437B4Ea10AB9240570BA43B",
      "txHash": "0xc23cdeffb1e4e16452e5a03c61424daf106f1215a16db45f12c6dd0460ac7059",
      "kind": "transparent"
    },
    {
      "address": "0xAD85B88cF93a786fe813Ee0bF13264529FEDb627",
      "txHash": "0x1865801e60b02f68d0adaffad6a77d7189b1e843c1bae8b2672867db2b5a54d9",
      "kind": "transparent"
    },
    {
      "address": "0xca3704F8a21840de52a63f32f566a22Ef1E5625c",
      "txHash": "0xd99206f7d2d3406bf799d67dc4191fe492d2b73ca3d449f15433df0080a9adce",
      "kind": "transparent"
    },
    {
      "address": "0xD6466eB9a84C06ba1145f5ae395858A3733164C5",
      "txHash": "0xb26eb76ebd4ec3d9720b11e9851c3ba337ab1d3dd8f59e7f1573b5bf45ee6ad8",
      "kind": "transparent"
    },
    {
      "address": "0xC9d019C890b5e992EAb8034cDa22e31d63745EDF",
      "txHash": "0xb94cb849eac8fcfd77f026f2097a93a4ff4862aff3559c30e02b54183aa3112b",
      "kind": "transparent"
    },
    {
      "address": "0xcc9961F425Fa6237eaeFf987E99f9B87AC30f274",
      "txHash": "0x320d0f273362c40c1ff79275fcab7484d39e1785dc9bd3be4928bb7aa57b09a9",
      "kind": "transparent"
    },
    {
      "address": "0x4107653a8df691A0aF40a75005AcfA220D092B98",
      "txHash": "0x918d621cbb701d87536e9f00e2b9a298dc53c1d814a36511032db7ea821f3f31",
      "kind": "transparent"
    },
    {
      "address": "0x1C4c76607af768e38A754156e1EA467b30F53aF4",
      "txHash": "0x706b706b17c1f711b88ea779ea8fcf252fd8650508d3498c38d26a6e92f2a3a5",
      "kind": "transparent"
    },
    {
      "address": "0xb3b3C2b919E970fbd64B79bb1813Fc48b057Bf3b",
      "txHash": "0x3a792f40ea0203fe420b5f2847be915d21e9b1ba81dbf4dffe62a33820494656",
      "kind": "transparent"
    },
    {
      "address": "0x7871C7D2F97594828df0BDf846b3e224396Db452",
      "txHash": "0xb65a31eabf8d2293e1fa977bee730e885c66b9c5c1ee9fce2311e84f47b42348",
      "kind": "transparent"
    },
    {
      "address": "0x824E224458727Bf946A0C3539ceB39759533c57d",
      "txHash": "0xfad725360483de8c0495240c872adc8d351d41f52426409723270fcc2d3fb0a8",
      "kind": "transparent"
    },
    {
      "address": "0x867bB8b236524e0B234DE45d6665C59B8D87e766",
      "txHash": "0x750a9bc876044b7354e89b8f28ecd0944d10ab05bcd942be1b265bcf83ea261d",
      "kind": "transparent"
    },
    {
      "address": "0x92044D1fD149e5ecBD3FB5434C01B6771e115049",
      "txHash": "0x6890dad908e8a17f455da16e8214238683077dccc06972e719586593a13afdef",
      "kind": "transparent"
    },
    {
      "address": "0xB74512D48De709156D6eA17A7dDa145B7adC9E3f",
      "txHash": "0xabff151092fbabd812b7e2139686e974ccd0dac89c4b6b03af63b06858bd17a2",
      "kind": "transparent"
    },
    {
      "address": "0x9e634AB6B3a7c53221DA0cB888f29b4CfdcF27eF",
      "txHash": "0x3adcbfebbd47331ddc9d15dc86dc0f4b0a0ee2563a54de9cc5b100cefa3dc51b",
      "kind": "transparent"
    },
    {
      "address": "0x7BF5024ad032208440C9C37eBfe245474840E38c",
      "txHash": "0x30fd75a40936b416836a3071d2fdc4207ba9f7306d600f98117dfd8d8787a319",
      "kind": "transparent"
    },
    {
      "address": "0x7153027f8AD0068484338564C8ACc105802ba92c",
      "txHash": "0x684e6f67bf58e6cf8f683293bc8e9417ef6de99a6b212101fe585abddea5328e",
      "kind": "transparent"
    },
    {
      "address": "0x8317bE5185d7a7939AF25CD23C763eD733883617",
      "txHash": "0x3aa270edc916b897c7ddd4721385007125be8da713cdc8cd41593f23f920f18a",
      "kind": "transparent"
    },
    {
      "address": "0x1A9d94Fe0a5D2ca7546711784f770cE934DC020F",
      "txHash": "0xc919cfe7ca4c14daa4cc4d30c050134a615005460c5870b08c3450cecf8bc0a8",
      "kind": "transparent"
    },
    {
      "address": "0xc842151A7F2Ac09f6133920961dfb85b2bddD7E9",
      "txHash": "0xd31596f0e8e264965025b7c5761c2bcf0043c6d9c1a119861de819d21717f3c6",
      "kind": "transparent"
    },
    {
      "address": "0x58A6cF0CBfB711ADC2930068CDB32f7b71B335a3",
      "txHash": "0xf417f725f6400ead38649cbf1019148b1111d5f7103ef2f52ea27b70fad2557a",
      "kind": "transparent"
    },
    {
      "address": "0xBcfD90156e41671D4592DeF3500370e2B811b946",
      "txHash": "0x4c4f328b5e09fae4d76c2ff1305a892eecfeb7faaa2f718e0af0f0fd0105bc2b",
      "kind": "transparent"
    },
    {
      "address": "0x4bBE1EC7fC612F3518B3aA3b7CE3815Fb8d6258b",
      "txHash": "0x4eff3de05fe61555d622e9548e466accbad4a700f3475d58ccd0da18e6a5cd11",
      "kind": "transparent"
    },
    {
      "address": "0xaC758BcE2a84FB394ae665d44599e120ce663F9e",
      "txHash": "0x7f2514de73acc0a7314d25a6b68a0acceca721e90968e17123832ac011b44c10",
      "kind": "transparent"
    },
    {
      "address": "0xD83f3cfe3FCCD439679EA5fA1BD79820082B2C03",
      "txHash": "0x01456d43bf2b0fe94957e7740e781266548e3c57b68d578172facf8f30c86117",
      "kind": "transparent"
    },
    {
      "address": "0x40e2988459954C1b7D7ba1840DF0e2C777C6b1BC",
      "txHash": "0x734b502dfbbb94119d305f8abd1a459306f98214461c213336e796fb984828a9",
      "kind": "transparent"
    },
    {
      "address": "0x82e089967Ab5c0A1d460f67031ea9cE3B6412248",
      "txHash": "0xe075af3907014196bb49931c8ec5a1f1419b8b75f04784f2b78c6adac4a74e0a",
      "kind": "transparent"
    },
    {
      "address": "0x657a80da320AEEDFB375f65EBe05a10680C58322",
      "txHash": "0xade37016f9f5fb544614d36abb87d247f9d8573d06c0200c745c7463ed1fceb0",
      "kind": "transparent"
    },
    {
      "address": "0x5D3f5ceb3630A33449129Fbe0683d520883e33a0",
      "txHash": "0xb1fad3019b9a7c01754caf3a3779867225e001b3474a5095670021bd4debc37c",
      "kind": "transparent"
    },
    {
      "address": "0x986955A2AB1E0A64091F516857d32aDfE9050d72",
      "txHash": "0x735464fee5796bdfedcc3e5e09a2625fbe7bac9e9373a872863ecba157d22690",
      "kind": "transparent"
    },
    {
      "address": "0xA29B7cB3379dba6579b3fceB00A6C42d87AB7Caa",
      "txHash": "0xfa9ca2aab24bcffc1720a84190cdfe93be0eab9e1115dcd669b30994df87cd86",
      "kind": "transparent"
    },
    {
      "address": "0x1A7Cc5a1175AAE23ECE704E5b4aC08213E2A4562",
      "txHash": "0x6b275b370a9069006c11ef59fe33dd99596b8eed3f7ba9c05e01739c22807fa6",
      "kind": "transparent"
    },
    {
      "address": "0x22502955A4310a3BdEDdB701f8ABEDC3D123dF65",
      "txHash": "0x89c61224632fa733bae5269c5d2d3403f3a4f106ab0d311f79f5050e66104ebd",
      "kind": "transparent"
    },
    {
      "address": "0xc0285ABC9B5EA3735BC7282FFc71E2e6199e724A",
      "txHash": "0x08da44573fa570b400931d0b177941162b96e28ee37d75b690b97d904f7bc715",
      "kind": "transparent"
    },
    {
      "address": "0x078CDCf5Fc2B87C1494e61afa9A7F66F8d610823",
      "txHash": "0xb210ced2f337923555735cfe987440ed3a9b189298ea197fc17877137d30022a",
      "kind": "transparent"
    },
    {
      "address": "0x4b51f05D390473BD5f7cBd9a09A92f596A774e72",
      "txHash": "0xbac4db62f09ac7c6f7b45a1d48456e273a3db4328810a9437b5214a1f5eade70",
      "kind": "transparent"
    },
    {
      "address": "0xBD96271E18cbDB3532B17761ffAc72d61B6582B1",
      "txHash": "0x8481f2e1600799050196e0818bca141f86d02937d0f73c01ac585eac92b445d6",
      "kind": "transparent"
    },
    {
      "address": "0x231E969BCb1EFD2B30b080CebF2072aFAe116162",
      "txHash": "0xba8454a9eeaf0e3b59bc6b75340f318ebaa25161232975ef2cd5d6426ce89055",
      "kind": "transparent"
    },
    {
      "address": "0x904Cd85Ac6902Db8CDEf8037132EE1779AE3F57b",
      "txHash": "0x6687d439a45c535854a573c33e96f8d9507bc190cf07e7271d69ccfb05d4e5e6",
      "kind": "transparent"
    },
    {
      "address": "0x58A16A3CBEBf6CE5fa440BFe9DcFFeD032639332",
      "txHash": "0x4f8ee3f4c1dba5319f2b7d518a6d205e06e1d3ddfce866aed98c4b61b50522ee",
      "kind": "transparent"
    },
    {
      "address": "0x460b914CB5ADe7F9d8bd6150abe4fe25015Ca2C5",
      "txHash": "0xe4980aa6d06af25c799a6032552c396c069e905bc0e4aa0a9ac165f062f4bdfd",
      "kind": "transparent"
    },
    {
      "address": "0xFbC493d3CD03acA8308D75A644AF48A66b7eFABd",
      "txHash": "0xabb9923a933bff06039e64f3ab21062c4dcc92984218ec8d85bd021e753f1d71",
      "kind": "transparent"
    },
    {
      "address": "0x35785A17Cbb53e22d360adA10572D25756ea9a56",
      "txHash": "0x8b4e15c330f1755738d8c844fdd031d38136dd2db33e9e81ad1349574848c141",
      "kind": "transparent"
    },
    {
      "address": "0x74f3080768BD37fd1156Ee98D47EA65B30Dc2808",
      "txHash": "0xd62d7e37f05fca92a0b88bd4769de533fe48731e648cfa55dc1e3d865812e0c7",
      "kind": "transparent"
    },
    {
      "address": "0x38DDC967bd87fFDbe8f691a738B7a9C74e8E5299",
      "txHash": "0x74d90520cf2e9f6b7aa951e4d5f04a451ee6beda0e84c3d9ed9641f1fd9ddd39",
      "kind": "transparent"
    },
    {
      "address": "0xf964dA90F43eF9E44d6E53397dBaB97AD29186fF",
      "txHash": "0xf1276a2b25d97048795ad43213c639de49212dbe8382a0074640ee8344b9dfcc",
      "kind": "transparent"
    },
    {
      "address": "0x5c157E4fFe7375a76a35285b5Ec4ba80c1Cf4096",
      "txHash": "0x3102303586beaadeb53aaa21b6dda1913f0d1a735c8263ca9695ce051ca03656",
      "kind": "transparent"
    },
    {
      "address": "0x68EDe114244E2c33E3b6CC5851af757Aac369306",
      "txHash": "0xadec935f7b84c59c00e42707a4013f948a20b9407d056b10407a5d5342702502",
      "kind": "transparent"
    },
    {
      "address": "0xc3AEeC4e653F93f161CFA26319113b7B7A91bdED",
      "txHash": "0x1fa36a02a9d63d01948eec3351830c99ac1afac450f3f2fe73f8dba4a9725b58",
      "kind": "transparent"
    },
    {
      "address": "0x72670dD70D9071c3eFB94AE289D49E736CE41E61",
      "txHash": "0xc8500e245468bac4abbd9f6fcdc6854e59233a97a28690b9399825998b4f9e15",
      "kind": "transparent"
    },
    {
      "address": "0xcEdd1E2b1C3a6eEaf34596Dff9b5715B2e02e4ea",
      "txHash": "0x6a684fe22cf7eb82dfed9cf89508c566e4f9a72a6883de27c9d467ca9517d2d3",
      "kind": "transparent"
    },
    {
      "address": "0xF48A538fffD7bBAD54f0bD2F586D5eFA971341E0",
      "txHash": "0x96754a408b728f1201901384d6de9b283b81d514a8fc4d49e1de995d1861ef40",
      "kind": "transparent"
    },
    {
      "address": "0xEB156e88Ef52D86e99EC0816F08143668426701F",
      "txHash": "0xb012991d5bf5df64dc0b7c7ce6d510e100c67a4d9e20a5cf2f4129ca9e09c8b0",
      "kind": "transparent"
    },
    {
      "address": "0x77646888F66c1278A3846f18ec3c962D51551101",
      "txHash": "0xd7f7ae2a9899ee1585f80ee4c6347071be4c6d93503417a8aaf443fd7434798c",
      "kind": "transparent"
    },
    {
      "address": "0x2f2A2e363af8AB5B500990ca1888EE3364Bef6B3",
      "txHash": "0xa599e44c33dd5fcd9380a045a9d25cbbad9fdb3543a9427ce66247198ff95ce6",
      "kind": "transparent"
    },
    {
      "address": "0xc7136c3A5a89AeB01f310873DcBCd4Dce02F9c5A",
      "txHash": "0x65eece1c351e8821d1782ad04c02aae38dcc39a883104f139f41a6699b6741e1",
      "kind": "transparent"
    },
    {
      "address": "0x10d2C802bE2dc049C80622884Bf2EB6d932BA25a",
      "txHash": "0x213c00ffe123d43d78be95e0ae81f7d35f3868408105ea0d2815b35e4446525a",
      "kind": "transparent"
    },
    {
      "address": "0xd3178d9b53Dc7bE0a06f3366557E7569F44e75b2",
      "txHash": "0x4cc811769554f52f6ff6e29ef3a4b067fb1d3833af1a627ff9e0aa19c56542aa",
      "kind": "transparent"
    },
    {
      "address": "0xf529BA6c9791768c2b2B88Ab4B299beBcc3f84a1",
      "txHash": "0x98c5007344975f69bdaa035bd9f2872a3a478d67ba5053a98178cf78a5f86f29",
      "kind": "transparent"
    },
    {
      "address": "0x90eEE05ae0FB15778145fa05E786584548995860",
      "txHash": "0x81b98dfcfd7d774cfcacb12a9e5b4ca97fea52313547b90da59c5d53275f0694",
      "kind": "transparent"
    },
    {
      "address": "0xe6FAa23207Ac82a634fc50F3B514F4D1E586D756",
      "txHash": "0xa776dc7286a8f3a4444fa4b624e56d88e2e1372b4ce35d7fa8a3e79844065f41",
      "kind": "transparent"
    },
    {
      "address": "0xC80E7841ae1BEBb2560718Ee87d6e1B6A74351Fa",
      "txHash": "0xb21d6826cf46f9f3d292294c0dfd9481ea582cd5ef4f346418f0247f52e5bcb4",
      "kind": "transparent"
    },
    {
      "address": "0x98c5fF1E6D2E2A7B27B40dC12464CA95608d10cB",
      "txHash": "0xf87e3261f47ec8d1eae32df94edd32ae6ddbeca2b2a9d379337df691ceb9d341",
      "kind": "transparent"
    },
    {
      "address": "0xCac842df7dEdba23b2E21FA38cdb9d1ff9B3f601",
      "txHash": "0x72cb7553e590de299268464749257ae937ba1d0d7bb5aadec28cf0d45fd74ffa",
      "kind": "transparent"
    },
    {
      "address": "0xd6FD9a5b4daDB48B9C8Ae3ccf0a7FBD840a09E6B",
      "txHash": "0x2ae71ce5a22905ce720d75608a07fbcf4ad17dcb021d552c2ff7721d1cd6f9ff",
      "kind": "transparent"
    },
    {
      "address": "0x7A98803dFb1feC719BA79233aba84596f357d6D8",
      "txHash": "0x1d21f5df35156a70475d0b8c404d4a1c9d67a8bf9edd9ad9b326dc7c2651db42",
      "kind": "transparent"
    },
    {
      "address": "0xF08384842A0e1307d0fFf8CB9Dab66EE2BF10dcb",
      "txHash": "0xf7477f039a594cf7aada9d290207d6ba8756d08b7ca43203c2a4324d29b99d05",
      "kind": "transparent"
    },
    {
      "address": "0x1D6bcEe2B9a117B383c88C9A6DEE9Ad7Ea4ade8a",
      "txHash": "0x4bdff97a53888acfb41a2d722b0cb275172eb794da323f497ea8f1bb720bcea9",
      "kind": "transparent"
    },
    {
      "address": "0x07e35842a57935E02F620079B89fD06254F9C373",
      "txHash": "0x07003e78d66256aaccd5b2e6f78e5b545f6803f264a7ba65f9aff877ce5307c6",
      "kind": "transparent"
    },
    {
      "address": "0xE848d19A1B8eC79C128c3A3Fd85615b5Bf80A777",
      "txHash": "0x2158dbc8c3cce6ee11c08f16ea10175f16e64cc56d8a1e6c2e7848abff381574",
      "kind": "transparent"
    },
    {
      "address": "0x54931B5A0D291f317576674C83c884a4798F047e",
      "txHash": "0x5dc57f3ee21c604004b6d903822ef083efa619567f72290ad1784b22adf379c5",
      "kind": "transparent"
    },
    {
      "address": "0x544B0c176172cA2936727d5CAa5EBAF7c218Aea5",
      "txHash": "0x927269fa4006274295185fa8e7a41638dc960618e3e015425e5374fc892ef2e1",
      "kind": "transparent"
    },
    {
      "address": "0x1bDA85168CD5a8b1470D35080c8D0eCa8D652D5E",
      "txHash": "0xb0af6712ccdbfbdcce134e862f9e8aa060cd35f58948cc4dd1f530256b44b662",
      "kind": "transparent"
    },
    {
      "address": "0x334Ca02fAD6D356695E92137315ebd25c592EA71",
      "txHash": "0x6be0f69b2d69ebc8860fac95716018301e92495b6274a1b306a28d7690d05e5b",
      "kind": "transparent"
    },
    {
      "address": "0x4AC1d484C44f2Be4d7632681D8b9e03FB5777641",
      "txHash": "0xa71222f5527a42dc7a9fdbe150498d7f5245dde5cf76b0a4653eb243f030392b",
      "kind": "transparent"
    },
    {
      "address": "0x359D17998cca9c5b88f672e77D59b81f4D0c2BE1",
      "txHash": "0x8932af9fcab5e5566a5bfac4eaf14c5cb9e8c554bf2f6cea7cb584f97b031de8",
      "kind": "transparent"
    },
    {
      "address": "0xB8CA17C26B33716Ff579e212fCFc7920d8ba026D",
      "txHash": "0xc5fd242c8fd1fa166b70c9b3b89feb946ac932e91cd5a0e4403625f3ff80a72d",
      "kind": "transparent"
    },
    {
      "address": "0x0D08071918f50b0A4fe002e4E35882cA5AEE7D49",
      "txHash": "0xce973dc3a1961427bd584d1fdd0849b63ea38792b786816ca1733ca14d7720ad",
      "kind": "transparent"
    },
    {
      "address": "0xefeC61fE057b16f3F9aef28D3667a1b05f15E6B0",
      "txHash": "0x10280d163cd49dc0a38b45d95b57c302ace0558337ee1a1f9d3d43978166b34f",
      "kind": "transparent"
    },
    {
      "address": "0x3a9B2215cb1A4D666b11E5aA498da0b0E2c6bEd5",
      "txHash": "0xaaae68537ae016b1de12165c15c402da4ddeda6d66459e2f2cfd527a42860df3",
      "kind": "transparent"
    },
    {
      "address": "0x71926A932B2877E324C7bB28eb1459d54be88D84",
      "txHash": "0xa3aa3e73737eb7521771f992282e31e123693df301d8bd442fb471e116b11bb2",
      "kind": "transparent"
    },
    {
      "address": "0xEd1c0651ce0379a33f09242346bd2e7674463944",
      "txHash": "0x3221f6e28905448757235efa2c9fc54a76b4f69d22f5d069eb19ac47be90018e",
      "kind": "transparent"
    },
    {
      "address": "0xFD385b7E880eec0ED3706bc6b08Cfc3336e836a7",
      "txHash": "0x2af8fa0bdc576dbe0da0e86e8102c5492fa73143b78089825d3aa04348cae0e2",
      "kind": "transparent"
    },
    {
      "address": "0x12C344F0e77299846dd0cf758320Ad19cBbfEc2B",
      "txHash": "0xf871f13b9bd4ac0cd83b27d1e38be147a2f2a1b484c743aa12ed50357744fc61",
      "kind": "transparent"
    },
    {
      "address": "0x19df602bbf21Be25d93318234F31B8821625Fe8f",
      "txHash": "0x9253b6d2d3586e5feb4b586bcdfd85ff479098f10200e5822df940948bdbdc63",
      "kind": "transparent"
    },
    {
      "address": "0x2B043Ce3D57d54b7eD85FFE293086626a2B91473",
      "txHash": "0x9530d6ffa77775ee586afa30c6c0cba11da79b2b7835f03d818443294cea8009",
      "kind": "transparent"
    },
    {
      "address": "0x1647F3D5a5665741795771d9E3eD38328d240e31",
      "txHash": "0x1b80b57c8f0a207b540edaab04d36809f76bb71b1686aa8dc2c47f3ade77db17",
      "kind": "transparent"
    },
    {
      "address": "0x2D223fFE4b10499aFF84f7Dab239349990F65B58",
      "txHash": "0xefae0c5776c1b7198c1f7272186f3583d9409c02da13b81806c34252a99e2d0a",
      "kind": "transparent"
    },
    {
      "address": "0xbf88E223eeE5e59Cd4394688Cd6aB4D86438815c",
      "txHash": "0x098eb7ee40df9b7b5351ac0078c1a7188b6c57200fa08dbcecde20c27439d867",
      "kind": "transparent"
    },
    {
      "address": "0x621F9b0046205E2ed8D8A5c3Ca81dCa0F2ccB376",
      "txHash": "0xca6a52952708d8250a2c05e8c523c054ae19ca94b62822a24bd3939b8efdaff9",
      "kind": "transparent"
    },
    {
      "address": "0x35e4373beAE0abf105C94d2Ad30071D66A11bdEF",
      "txHash": "0xcf47df88230a3338ca49c3d59539fbc82f44a69c9a30878d26b3c84e521f61d6",
      "kind": "transparent"
    },
    {
      "address": "0xcFa5BE1eCb8350228cA502dBDf959E9eE324C2cF",
      "txHash": "0xe855d4ca5d6560203241e77fb4ba0bca0b82e13139c263e2a489b6e25c049f96",
      "kind": "transparent"
    },
    {
      "address": "0x15bdCA4f0C293f09330848A531751836C8480c22",
      "txHash": "0x0bed937346811948f9c37d7e08f9da6b92f697a96c40fcf0d3875a9b39efafc7",
      "kind": "transparent"
    },
    {
      "address": "0x1DDeeBc57d604e8b3ADc1E820DEEf27D048E2E6F",
      "txHash": "0xf49f1e1e409b7043a6fa2cc6128659237ec12dbe7c20732ea46b6c41e9de9704",
      "kind": "transparent"
    },
    {
      "address": "0x2c79b5F1F9fa222d99a6fE1a7FEA725ad7F630E6",
      "txHash": "0x362f1d1d8921c7914467eb9830e67cf2aed8be141cf14840f37ec12a6bafeb7d",
      "kind": "transparent"
    },
    {
      "address": "0x243F5DaBA342fF544D451E37360F41Ed4e2EF38C",
      "txHash": "0x7575df6acb1b0bc1e630d936823c43f2a19ba3cd2db50629be76f7e467a90da0",
      "kind": "transparent"
    },
    {
      "address": "0x0F942925e656fC19ebBF5240496e4309C2EF55Bc",
      "txHash": "0x3bb7c09b8a117196cbf20d74a3fcca5315f7da2e410af970de2ff3a0a81f6bff",
      "kind": "transparent"
    },
    {
      "address": "0xB0fcF1a0e17830e5f4D690e0F280b3560ecE6Fb0",
      "txHash": "0xf3ac85248922a84a625d42435a07c6aa5e75fc33d9b3ada6d4e17645aa26774a",
      "kind": "transparent"
    },
    {
      "address": "0x9f87CC6A143B6671BF5111640C8499d7D9C0971e",
      "txHash": "0x13d4a5d0c6893518753ecad533dcf6c772041b29da2cf0eb10c92f596f45e5dc",
      "kind": "transparent"
    },
    {
      "address": "0xdB7F8E3b77abC535102610dBcC478579162BF695",
      "txHash": "0x3a308c95c580f52db4ade39e70aae20bb7dfd4c2e25a3bd3f6be67441c683162",
      "kind": "transparent"
    },
    {
      "address": "0x5B6bfB5202efD7ced81Bac493E97edB3F07834D7",
      "txHash": "0xc8f43fea92be02d6eacd1702e646a159cdf08bcc432b6b46d21e86cfa2c91e9c",
      "kind": "transparent"
    },
    {
      "address": "0x0e17d24cf1BD73A46f41D0ecE25dB08d31873702",
      "txHash": "0x42fd59c599f3d2c1325b8b99ce5d900e66b02e571972b84969553a58b5744200",
      "kind": "transparent"
    },
    {
      "address": "0xA5F222331b85D226591a99FE4ca38C37fF381d3C",
      "txHash": "0x76408ed913bce9c5b0214a42bf6390bfcef86f08e4e7d4ab33e485d31033c706",
      "kind": "transparent"
    },
    {
      "address": "0x3AB1d3B8fA14272E3f9D25f02b4b4DEe6dB8280d",
      "txHash": "0x6046961b30402ab2c07cf2bfd0a2ce6764c812abae51875e301410e8997be0c5",
      "kind": "transparent"
    },
    {
      "address": "0xf4d2955baE5e47D2bE503C1489279237Cf1d29Fb",
      "txHash": "0xb961922ef88583e4275e7e06a81ccb3cfca4e2df56aebf12386f5c7e5b380b3b",
      "kind": "transparent"
    },
    {
      "address": "0xC2E1d937af1d18f12Ff237549C34a7F6d9CcBc58",
      "txHash": "0xb30d77c4d791260581e9c56110d213bdf0a077fb99c328653e39139c5bf8b27f",
      "kind": "transparent"
    },
    {
      "address": "0x32e18F2f6f87216a14C5F6bEC34E5fB1b98A2905",
      "txHash": "0x869e14680330e76f3705320c66242ef0e836a339e27e56b26466e116dbc5262a",
      "kind": "transparent"
    },
    {
      "address": "0xb8192926aD7920A02Ad27C61c6c1214E9896ccF2",
      "txHash": "0x9066043a7b92bc1940d651566b8f40f6630222fd3748be94a357fd4ce5f16109",
      "kind": "transparent"
    },
    {
      "address": "0x5dC546D37090ADeD8D8A362093466ff4Cb2F3640",
      "txHash": "0xee7c25711e39ccd06441a8717e1fded43c9910b6cdbd87798a889f764a6bba6a",
      "kind": "transparent"
    },
    {
      "address": "0x6d0566AE5ccE3396296FaC34e388a5d2906e5cC3",
      "txHash": "0x8dbdc24f5de2fd9225426550e777995728396447851297529683c8b42f89c31b",
      "kind": "transparent"
    },
    {
      "address": "0xa13e5eA9A3a3dfebdBf27CFe9B9b0Ccc3fF7ED25",
      "txHash": "0x62ff3d8d49e50bf10b62f3fe89bd3ade8149d97f527561747fbe59f8cbde3b1c",
      "kind": "transparent"
    },
    {
      "address": "0xF6d521Be89298beD349ac51D6439Bb51f7fb831A",
      "txHash": "0x86c6744e46bc2207f469d1fbbda09b1333a5e36fc3dbdcde6c1235f9b6c7be8c",
      "kind": "transparent"
    },
    {
      "address": "0x3693cA2fFAC4a80302e3Bc02304dACc28Dff9ab3",
      "txHash": "0x80a098f7e253ea1b34e4b4a403f1599296cbc2c43600c5d3cc2c95f88bffadd1",
      "kind": "transparent"
    },
    {
      "address": "0x0E20fDfb5E2305218AED531647C5166Fd261d6b4",
      "txHash": "0xd43fb71f5161c76b5722ce440fe64b0e0a60f48bcaf7d38743989c4f7e719b36",
      "kind": "transparent"
    },
    {
      "address": "0x123A74DC997D34F3ea8F7379A189717053230d4b",
      "txHash": "0x54610820f5f7ee56ba595657c1eb9274c399604fd0b5b6e5ac7f02e16feff457",
      "kind": "transparent"
    },
    {
      "address": "0xad15600271F2E59d64E30493331EE8f4c9DC44Db",
      "txHash": "0x056826ec17bfa6e0f0939e837d668d88edf5340ebd848b7f1c5792411b8de2e8",
      "kind": "transparent"
    },
    {
      "address": "0x95187D2Acca46D67Db00a163608D67C77E9f7dA2",
      "txHash": "0xb46ccaa014012925c6c056cb5858dbdafad6836ea0f65d211f835513950c9044",
      "kind": "transparent"
    },
    {
      "address": "0x4A31cf08F427fb32f09caC32B636d9B11201F6fC",
      "txHash": "0x551043e9d005ae6cacc474ba6311e3a04d15f6b7c6fe2be8b04c9f0e708392e8",
      "kind": "transparent"
    },
    {
      "address": "0x0Bb411Db3C2423b26f4F12761a63BDede9C8E25b",
      "txHash": "0x636ce5bd255c87f23df27f5238e0aa21210ce6d5bbeb0364120b677b52a89558",
      "kind": "transparent"
    },
    {
      "address": "0x642F66751C3911D590ef865B2e9f78888b135BeC",
      "txHash": "0x7976df390a9e780057fc1c59257b69afbcf34e5e47e30184e585ccd4e5dff0d7",
      "kind": "transparent"
    },
    {
      "address": "0x9a3BAB2559Fa0D4d69b1aaD05a27eedE4BCd4EfB",
      "txHash": "0x74dc683f20f60fadf22c6c65a9e9e4ef2ba8a232ec565ba111f1d57be7cc2474",
      "kind": "transparent"
    },
    {
      "address": "0x1A4Bc22B6972447020a3FEddde1DC877733Ab64D",
      "txHash": "0x4e5ef36180ff7c337bbe48dca8860cc5dc5bfff2245df3834c888810a9660c06",
      "kind": "transparent"
    },
    {
      "address": "0x25b44B84Eac1F4bDedEb6260DE66957edF4E5eB9",
      "txHash": "0x6fb0f7b16e9e043792942bcc048d4ff1b678c3e12838b8ec7731459833b71393",
      "kind": "transparent"
    },
    {
      "address": "0x75B130fca8CE3Ee55f8605EfD1505ecFcBA31702",
      "txHash": "0x63ae3f34ab208144c8277a151bb6be186081ff96cee25738794963875cd26614",
      "kind": "transparent"
    },
    {
      "address": "0x8ed528043699c5E843486b5ab1d4484e55bD7DE7",
      "txHash": "0xe1c01d6378705106d4dff74811fdca5d941de9a817ec47b01e7d997c4531ceda",
      "kind": "transparent"
    },
    {
      "address": "0xC3c3a2991667dc2aC4bBE9e4178b69B9162f09a4",
      "txHash": "0x26d1faeb82b21058a986d92f0cc8f6d21551b83efa24e5e5ed7690baf84c7bf8",
      "kind": "transparent"
    },
    {
      "address": "0xceAcbeeFf0a9aA5d118d7B1C41Df9e6Ec8fB1c9B",
      "txHash": "0xa87d389bb17c578450d06a3fcd27afd22d5a54df19f633af723604de12d2dbad",
      "kind": "transparent"
    },
    {
      "address": "0x40e9800B0224a8b45943c7E64967D389B81f601A",
      "txHash": "0x21d9d58e63faf76ba8b728c6b24243adb5f4ceb1d1f7d270c089fe1b15fed2ed",
      "kind": "transparent"
    },
    {
      "address": "0x7Eaa05471269a02776031586CF034f54892144B9",
      "txHash": "0x54b49f021fd31c54b7c38a0bbb7b9043ace518f8d4c0227725fe0843e58bff35",
      "kind": "transparent"
    },
    {
      "address": "0x8c963f03441CEeFDb4d2E8cAc6FD600B2093E50d",
      "txHash": "0xa0411ebf355babbc123711243013ec4576f3aef04db85d324dec10fba459066e",
      "kind": "transparent"
    },
    {
      "address": "0x4aE5390cd250A9dC7E775AEAE0F67c44C6557e9b",
      "txHash": "0xa4714007d45feaf72b256141186cd86a9243bccd0237278ba93e22485d098819",
      "kind": "transparent"
    },
    {
      "address": "0xFf10463afB1f2b5AEce45d2B2d2846627AE7722E",
      "txHash": "0x13c1fa68f79dfaf17da2f02c426b40c3ddb7273e5ff338c8b0391ac9a79fe17b",
      "kind": "transparent"
    },
    {
      "address": "0xD8d090eD8e274349696cD80a3498de76c8E30834",
      "txHash": "0x0528176c7aa25a4ea4284262a57f5e5223ad05d5d83fd7f753618ea59ec44eeb",
      "kind": "transparent"
    },
    {
      "address": "0xa94cDDaCeE54edbf9773484C48970125e1Be1a68",
      "txHash": "0x4c9a983be7b6093122d9832d1bd15fe5e2e87361502b1efe2ed9141adf529470",
      "kind": "transparent"
    },
    {
      "address": "0x79346b35010cdc6e06ca780B673CcC1408a61894",
      "txHash": "0xdaacb741cb9a0c4f03f67d6aa44fddf630e2f1a7554352a9be1618d8f8a2ded2",
      "kind": "transparent"
    },
    {
      "address": "0x22c4289e2cc6E1706084A48953336382aFD87C4C",
      "txHash": "0xa10bd5988cebbe3c725aa313e0f39c7181bd026c9d083e164d35f94d4285ad60",
      "kind": "transparent"
    },
    {
      "address": "0xf4175772a6F1D626B6396171fF7A7C69cf077b62",
      "txHash": "0xde95d294a1fa45d746aadeed8acfd4f229c9df75a6aee1c1f0e9c9a7e8471a8f",
      "kind": "transparent"
    },
    {
      "address": "0x2C53d80bD8C85E8a6b7A3f4b554D1d268ace3628",
      "txHash": "0xf519ce142a8ade4179b7e16bb73cecb2740d958093b0d4e51e7d12055ec3b985",
      "kind": "transparent"
    },
    {
      "address": "0x65F67727230002Fd8cAF31E2a81870D4A1B9312E",
      "txHash": "0x51fa9384ee6751881f929c7447858b038a919adc2fcf8eb60004f818e9ad0c33",
      "kind": "transparent"
    },
    {
      "address": "0x538362587c90e3ab37ffFd0A267e5956AAaE56Da",
      "txHash": "0x90dcaf0526d5b36790b713d28caf3621ae7b1f7bdfc81026cf709c52e208ff4e",
      "kind": "transparent"
    },
    {
      "address": "0xDfaCAa91b52C577143Cb5eAD526e572887270f31",
      "txHash": "0xd339e9201c3241cf42ab0b188b933d6ddcfbbf0a2757ba0b937bd27d310a9e57",
      "kind": "transparent"
    },
    {
      "address": "0x96589e1D321f7B5978a23b3c49D62e6eA29d56D0",
      "txHash": "0x9ff9328fe79f1f13b94d3bd9c8352d81de067c52afb90068fb1dc1c3ebe771f5",
      "kind": "transparent"
    },
    {
      "address": "0x0Cf408110E982cabf0Cac03dFB3A52930e15e682",
      "txHash": "0x16584e420fdb4b70d91b82a801d52d7fe29ed59bc1484e673a3389eb0f7e2c09",
      "kind": "transparent"
    },
    {
      "address": "0xF9b684eC2AA1c6B5B5aF6DdC801BC09bb9F047E9",
      "txHash": "0x960777d4f209136562ef3a441d80d533b95342f1573d0d537811318e08dd5ee9",
      "kind": "transparent"
    },
    {
      "address": "0x9E90Cb7FCb7719676B2ccA1fd2974cF54Bc33513",
      "txHash": "0x4b2298f3afef3382608b709c35f96988e95f568edcd71a9322aeebe1782f317a",
      "kind": "transparent"
    },
    {
      "address": "0x68c4bE44757D932e9F4B683a0c1aF6ABE206B8b4",
      "txHash": "0x9b65fbda58fe9e60ec2f881585e61a10d4cc6909830363fd9504590d5ea7a794",
      "kind": "transparent"
    },
    {
      "address": "0x078462754F9e1cd68FE07Dc2981552b914a084e3",
      "txHash": "0xfe4d457cbae05d314e8de43b76095a8795c20f3386935e639549f62f387108ab",
      "kind": "transparent"
    },
    {
      "address": "0x4Ba93927C6FA11844f722e65c8431Cc9617bA8cb",
      "txHash": "0xc41f87c02312cc8eb4bc3bb0f152bfbef564cdc7b3772182fdd14fd8641cb805",
      "kind": "transparent"
    },
    {
      "address": "0x361eFA6D743e770Ce62b49C6a9F99e755bECcC27",
      "txHash": "0x498f1424901a85051a67970b8ba706ff12a0c21a0896ff138dd84cfb3aeb268a",
      "kind": "transparent"
    },
    {
      "address": "0x7087de75b201F1a864b1833Ff6af190cEdbc45Ec",
      "txHash": "0x948ef4c23951ff453009311eb9b4b5da87da5eb0f9693f89ea17f0aac63d1fea",
      "kind": "transparent"
    },
    {
      "address": "0x035603233577e92b6D96D96075d4d6b9C85BCC3b",
      "txHash": "0xb5d689181c730ae12c525ced04402cba04a75e7b0c8b31cc0f4a138bb34ff0a7",
      "kind": "transparent"
    },
    {
      "address": "0xAE0153b54726A4a076f4157E22C444a95Af0E58b",
      "txHash": "0xf556a0575b42c1287533193bdf87c8e0f14dc7f47d2003d4e74c5ae2e71469f2",
      "kind": "transparent"
    },
    {
      "address": "0x32768201A481C7a4BD94eB9b6b9a74BC9B9E9c22",
      "txHash": "0xf35605ebc4dd6d16bcd02496b398e90d1bcb893532cd6a549fa8da3119171044",
      "kind": "transparent"
    },
    {
      "address": "0xEbE2d4105fa8f55f31E1B3C6a072150Cd72A36Fc",
      "txHash": "0x009acd935aa7a1e42e26acbf4ef4ffe6e9162cc17a9bcea91140f63345207553",
      "kind": "transparent"
    },
    {
      "address": "0x857D9611354aD00d5A2Aac08E43cbcc25d86A959",
      "txHash": "0x8e135ea07a8edfa2dca51dce18020a37f312548d6dc69ae990a52b1f94ba3585",
      "kind": "transparent"
    },
    {
      "address": "0x31952689066FE15640767A66e0f2641F55263fCA",
      "txHash": "0xed42bbbf2163c905997b0c767d8fd1122e9cf78a0ceaf85d67a1d79d9cf8054d",
      "kind": "transparent"
    },
    {
      "address": "0x6483617d1e68F681FdA925290000F8914749Aee3",
      "txHash": "0x839725cb43af9e99e64836530e2db9fb90cd9f0604bf6859ecd1604f727ef677",
      "kind": "transparent"
    },
    {
      "address": "0x835332542d0502facf23aDAc59dCF49f2D7eF483",
      "txHash": "0xc3c34ee283790151c5457fa98031f7421f559f804b636d7791a392e98493e2b1",
      "kind": "transparent"
    },
    {
      "address": "0x138e3cdff0fe615227c5A79488B2302f2E3ad3d9",
      "txHash": "0x36ee9dc3ce993a3b9517075c41444c73a2eda774077cce0e05d772eb0ce098f1",
      "kind": "transparent"
    },
    {
      "address": "0x3dC2F12A97c71726E769abA64C1E9b8a5e1f8c77",
      "txHash": "0x05d8e99da9a48a2b6206026c7e66a84f4c8415213037aeb50ad78df7126a03f7",
      "kind": "transparent"
    },
    {
      "address": "0x4A73ae1dAecd0fA00afFd7Ec5F846b5a96F79959",
      "txHash": "0xe566cc16e6ccf7b528ded1564947cf032021c738b911ceb44bfc0af38fb46444",
      "kind": "transparent"
    },
    {
      "address": "0xCE071eaE7956B44753DFbaDa7F21A0b43fC40F28",
      "txHash": "0xf6fbdc68544436d498744083e14498b555ef9d2fdc0d600c586d98dee0cb30b6",
      "kind": "transparent"
    },
    {
      "address": "0x1f58cB53C6d31ab5024a3a5cF6BBD3bF035Dc9a6",
      "txHash": "0x695a3b4558a219abdd7445147fee9bb581a0fda6db8d46c6fccdf463629742ce",
      "kind": "transparent"
    },
    {
      "address": "0x06F54D26c3AaB696B90845f27a133496cEa8398B",
      "txHash": "0xb957279123bad1771d415ad26dfb6aeba090e7aeac6662dec0d5e7d43f94a961",
      "kind": "transparent"
    },
    {
      "address": "0xD16A55DF6Cc51966b844b3051399b17b6Ace8Dcc",
      "txHash": "0x47a091055bd12e287ac735883522ab1a9ba59885adfbb6d0cd4745682673cf57",
      "kind": "transparent"
    },
    {
      "address": "0x59cF6028e684F63F2583c525E7170f3cDD9C2e3e",
      "txHash": "0x580ab45b4b2a83a1b65615535c91f63214d909d09f3e26c0021df0b7fa48b8a0",
      "kind": "transparent"
    },
    {
      "address": "0xC009e9481ED6cFC8600Aa3649d4ffAd10cA56A49",
      "txHash": "0x009b52c070b5d57bcc38637462135b292578069e4f65587d53118ae3fdafc4ea",
      "kind": "transparent"
    },
    {
      "address": "0x3D0f5F3cFfb0a942b5dCBdE091f27df8D0faa1c0",
      "txHash": "0x915404c9392e2d84dcbf9f330040f1dc2854973e35806e40db366870b695a304",
      "kind": "transparent"
    },
    {
      "address": "0x523bAE5fcC054BFdf2Ac0686a4405ffE5DcB78C3",
      "txHash": "0x1d5ab6ae7a7d5b90f511631bbd2a7c4beac3716b7c1a58c9381e25f554f194d2",
      "kind": "transparent"
    },
    {
      "address": "0x39ED98F77295558DdE1106D2F13ACb9578eb32fB",
      "txHash": "0xdde9cc9a5fbeeb33860e210919aa9af04f5696f9bba2c0fcb2b78e096a594cfa",
      "kind": "transparent"
    },
    {
      "address": "0x158C6fe969ABFd0D6F5C735397719293DEA0D091",
      "txHash": "0xb0cb3913d01aba0e755b650c2bc0e82a11cc18ab90ec8032573eba6676d16e4f",
      "kind": "transparent"
    },
    {
      "address": "0xEe848e93CF6bCE9db3E387FCAEE8a7E8376dB795",
      "txHash": "0x9190a098ad617505980ff635990faaa7b8e36b5f9fa065bd391bb9dff16bfb9c",
      "kind": "transparent"
    },
    {
      "address": "0xdA7D447C228669b743FadFfEd87353210bd2F904",
      "txHash": "0xb3c330f8529645b64aa0f906a90682e1f78a2604ed63e6c294864bb5e0df501f",
      "kind": "transparent"
    },
    {
      "address": "0x7ccE8B233c4cDEf97D02b9c78c6b82fB2B1F6853",
      "txHash": "0x3b888202d81333cc0ce709ad3b54dca7a755f2269b3fcb3705d8d458e2b9fb30",
      "kind": "transparent"
    },
    {
      "address": "0x29B1607841357F1d660d846FE8a3ab6F55dc0075",
      "txHash": "0x25394a9889f83582025e76f6043f0dd8d42f5635f0c1f7f7486ffb49b1aac434",
      "kind": "transparent"
    },
    {
      "address": "0x3C94e5b248A8dDE0ff5A9613Dfb300B1134cBA78",
      "txHash": "0xcd0e5f58f96606134b3fe49b6b7ab11b932c845fd03e405e553f28cfb4385ad4",
      "kind": "transparent"
    },
    {
      "address": "0xeb7c9EE27D0B8a70204c6A39518fceD11E1437Cf",
      "txHash": "0xc212507f4d43f287c89fa14dc6df3102a6e5a53700c3db35c33589b31faaec61",
      "kind": "transparent"
    },
    {
      "address": "0x6cEC18619cde231Af38DA01DA2eEA81a6C9d1Ec7",
      "txHash": "0x8e47039ab8b50ee75f8c03417cd2d415410e9ae4a3402998bd5c621cd639e121",
      "kind": "transparent"
    },
    {
      "address": "0x12648357D19aC6e65D8FEE4d52E937E4fBC8533B",
      "txHash": "0x4019ed014535132e8c78ceea7ad1710cf440514371a6fba3c007a383d12baa6f",
      "kind": "transparent"
    },
    {
      "address": "0xC875Ff38b4ca12E81F559406d573294021B67e19",
      "txHash": "0x1a01a9a8c22425217bea1f4312087f9811cc9dd71aaeb4b569cc7ef0072fe6dc",
      "kind": "transparent"
    },
    {
      "address": "0x0a950db07f850C1118BFAa3068308300300eC23D",
      "txHash": "0x1bac6d7eb3eb856114d805718d4627d737ede536f03b1402df4a73e077967bc5",
      "kind": "transparent"
    },
    {
      "address": "0xB97d8EE92797E3326f05daa0f1D599a8E38DA2df",
      "txHash": "0xec7065923a82e631d5345676558a1d9946f13184eeac9924d4adcc2edc1f6909",
      "kind": "transparent"
    },
    {
      "address": "0x278CAa8e109c745354a29Ce1fef0C2BDB67AA3E6",
      "txHash": "0xd35fd1a120e7a94b5b093a0f5ddbdb0cbe7222c4cd8ee3bddeb3b1629f382480",
      "kind": "transparent"
    },
    {
      "address": "0xf2d12BB8A2E76839fddAcA0184660F283a740a9d",
      "txHash": "0x44980c43dcd9f2a8f6daab72ceb20c1518153d24bb5544d9634d0ee15f47d85d",
      "kind": "transparent"
    },
    {
      "address": "0xbA4cc77bd9385800A0067985DF533C013BfB1DCb",
      "txHash": "0xd29d1870995c1b0702cb7890f55518c806f41674a8d4e08b99422cbeaf71a24b",
      "kind": "transparent"
    },
    {
      "address": "0xeD5A5076083dd6d4aFA0C5a3835cC2D896B02A0D",
      "txHash": "0xbac06ff0eafa70f887544b74ae863ef57ae3311fcb8b1d5ffbedd7ac4a366613",
      "kind": "transparent"
    },
    {
      "address": "0x5fAb3224dB6ea005cc24f8bf66E50629897B336d",
      "txHash": "0x1546daddbca6453a79d0c83e93d91199380e36f70180cba2f8742c1d0ba688b4",
      "kind": "transparent"
    },
    {
      "address": "0x518becB03086d12c2fF38AD2B8e3510a57F0fc9d",
      "txHash": "0x4303c8cb6094a87ecdcd376f7af143f2145f79a24f2c2addc82e3ccacab85722",
      "kind": "transparent"
    },
    {
      "address": "0xB5a49D5C6A875E9Dd45c772175aaaA2755e260d0",
      "txHash": "0x749041783b5a1a69e6b3fdbc824c439607e1ae6a141c827ac89cf5119b80f371",
      "kind": "transparent"
    },
    {
      "address": "0x58B3f84d4736A479B5FBf82558f1Baa837939B64",
      "txHash": "0xcb2c1e597ba563c576d47fa993ba52b08337d0e4f7c689bc4cfc06d7e0d8cf9f",
      "kind": "transparent"
    },
    {
      "address": "0xC1978EBB5318c076DAB0f5554C7ce57AE3667b5B",
      "txHash": "0x8f13865499c6370b6d6200fc349445f8c28365b3f7cf4c2dd0d2fd4d173f41c5",
      "kind": "transparent"
    },
    {
      "address": "0xb1c9515Da403a12a0e83Fd7136b230e09387bcBA",
      "txHash": "0xe889d046ae9bbd516e8d84923b5229445663866da2f4b4333bd6ed0ef24d6dbe",
      "kind": "transparent"
    },
    {
      "address": "0x4eD13b9CFB4d3E43EED25A38AfD8B791a8b290AA",
      "txHash": "0xfef3571c6a00cc8a476d67569dcc9715f124e1d6f7b5a9a0ea029bb82b851b6b",
      "kind": "transparent"
    },
    {
      "address": "0xC645a1DBe9A8a86d15b945d24DE03BD2Ab8E48ec",
      "txHash": "0x6d21c87ae20c43f4d022ed3a6b627ff165069d972ff59d5f24d0fd785fd5f96c",
      "kind": "transparent"
    },
    {
      "address": "0x2Db28CBb3723477F80B3701568A29311967F123b",
      "txHash": "0xca52972d23d8104b1b99e7210bae0a2c81aad58191e35b04677d5349209b5b82",
      "kind": "transparent"
    },
    {
      "address": "0xafF317cEDaf49db26c0674AFd406619f6D707315",
      "txHash": "0xc7ed177a0f78bd7f6fe50b31250ad852ed5a80692f4ee7ad66e404e0d464eb7f",
      "kind": "transparent"
    },
    {
      "address": "0x9c38C57c7aAe5A1A5145D436ee272685F29Af34E",
      "txHash": "0x4b83743b970062f258b29c5561194d8a2ba11ecc9a9c7d71b493bf6458987f75",
      "kind": "transparent"
    },
    {
      "address": "0x3A1cCE0126b5B9Cf5a8B73695931d92C2BDe6f03",
      "txHash": "0x799145fe87243544d3bfbb52390d2904cc8cde0d3cd2bae37795cf1deba5cf47",
      "kind": "transparent"
    },
    {
      "address": "0xAc2D571d3F3B8F6114e477b3E95d8384D4F39dA7",
      "txHash": "0x753ce98c6fa414dba0d0bf770c680b9fa26a269b93ed1b4bfd0ab08648e704ea",
      "kind": "transparent"
    },
    {
      "address": "0x99FF7b546eE61002C69f958F03813F44A28051b3",
      "txHash": "0x5b05f19ddb1f1068521f9162ebf3f0780062c928bfc5f4184536c75571887e27",
      "kind": "transparent"
    },
    {
      "address": "0x53940B350F6954B3cc3d489971F8fDC8415c4a42",
      "txHash": "0x13a209b099533a00828a7d24048d16d4dd6e6c4882fbaf83f4a5c434feecb6d6",
      "kind": "transparent"
    },
    {
      "address": "0xbd8Ae103122cE5D9702632cD691d87c9903e5801",
      "txHash": "0x5ea6e907454b696d39d3c689c5348f36d66b7f5928c75e414495b771fd2aeaf8",
      "kind": "transparent"
    },
    {
      "address": "0x3F91da8D4611aEE80D2437090DB47301Ce77Bc18",
      "txHash": "0x1e2924859ed2af96a944bc5a4496ae9bc772c17c2fb1de669d33e5ae83d55ee0",
      "kind": "transparent"
    },
    {
      "address": "0xD77F909eBF8e9188C17ee15E8CE4d3aDb6525d27",
      "txHash": "0x3c1bfb1594fa78513dd131027ff8cd679ce013f0adaa800cab6c9a6e1e050216",
      "kind": "transparent"
    },
    {
      "address": "0x9D1D09f83F8c43b4a3D2176AD41Ef5cadE4f50eC",
      "txHash": "0x1308506c31ecf6a8a897d5fba794645053fdfde0e70fe99256517c632eaa9e76",
      "kind": "transparent"
    },
    {
      "address": "0xe209fFb610C782BB3c78ECec83f1fA71eDcaA39b",
      "txHash": "0xe37fe0aeada7c8a43bfa809a1e5d262a5ac383259bd59fa28723ca39975d441d",
      "kind": "transparent"
    },
    {
      "address": "0xCcb007e3d71BAba93fA997fB6323760d8F303F06",
      "txHash": "0x6fe72c1da57382d3eadee912795c5e79a717de213c4cd9baba9dc5f31b9c804c",
      "kind": "transparent"
    },
    {
      "address": "0x254cC4542E1D618A395319d36355875628D8D8d4",
      "txHash": "0x08e4bd13fb6b3dfe48a95c2cb0a57afeadd0285005e83260e0564a3a3b1b32dd",
      "kind": "transparent"
    },
    {
      "address": "0xc8758179f335681B6bEf74e0F441e5aF9d76CFb6",
      "txHash": "0xbda695a01197d1a08ea9eee5c7883ab61ea3e3f6b38e0ed07523e49e0a9b3801",
      "kind": "transparent"
    },
    {
      "address": "0x44bbc19c9CBe5b506A45a3CD9247e58B47375bdc",
      "txHash": "0x5ae4af4d7bba79b9a53ff28e2fccc33194709520dadce1116efca95ae0dacf7c",
      "kind": "transparent"
    },
    {
      "address": "0x0837002372aaaD05f15390dEc1B555af2B113f7c",
      "txHash": "0xb6dd280a0fc41ba65ebc5eda51043de4a25b06ba3d680fa1f8341fd505f141d2",
      "kind": "transparent"
    },
    {
      "address": "0x77C72f3bCcB4bD9598457D2AE1A61A2581c540d4",
      "txHash": "0x5ccb47e2eadbe16ba964e251e53d7298030c16201b9e78b111c32b8bf34446c4",
      "kind": "transparent"
    },
    {
      "address": "0x7E72176bbA60BE8F8ce57f270c57f829a991FE03",
      "txHash": "0x564ca56cc07275c989cc696af7dacab88a2b12dab9dbdfb2fdc9a29ab64e37d6",
      "kind": "transparent"
    },
    {
      "address": "0x6f4e26C68e9d564498254528754d6cA456079172",
      "txHash": "0xcf1488bb3622bca676e7e7b14a2e8acf6fbe35e3dffba07fe30b39c91a90cacb",
      "kind": "transparent"
    },
    {
      "address": "0xd08a632E34617b247681978DcB74a2395F844F20",
      "txHash": "0x81c0875970f984feef24858ef30da27fa9e68191480e80e4be33def9e4326e94",
      "kind": "transparent"
    },
    {
      "address": "0x618E0E32b5209BB4A87972cBAfb3060BE3C070b3",
      "txHash": "0x797512f847d6a2ffc605d5d185d881da6c49b71662f8098f19a8bfebcc17d563",
      "kind": "transparent"
    },
    {
      "address": "0x34723fa920326Ade5b5350B1e0EdFd594ebF882B",
      "txHash": "0x82b9c661f2364110350c491d7f9bb34d59c2599c681223f110564026b6753755",
      "kind": "transparent"
    },
    {
      "address": "0xD9a0f9F49F2cb760fE352110B9DB6B1Aa119EA44",
      "txHash": "0x465c666657e6206fe6b09c8feb1989f84b337e0b4c27b0c6c9d9da813da4e873",
      "kind": "transparent"
    },
    {
      "address": "0x1DbEF0b5A4e64DB83721B6b1C6B957e9bf44929B",
      "txHash": "0x1be9b01dd534714815e4c52d72cee40bf43cce30affc528b1f079c00709fbc7f",
      "kind": "transparent"
    },
    {
      "address": "0x69ee43aaB5b2A24Bf87ab767D710db451eca319E",
      "txHash": "0x00953bd61e0d6dc39c5acf2c2f0399288d4f4226689cb4c46a038b857a5ab2a6",
      "kind": "transparent"
    },
    {
      "address": "0x603E27f23D6276D5D11F22Aa401215f8f9ebb6bD",
      "txHash": "0xd0e0c3046cb568da16b950765481511d6ba555ee815c909a957479aaf32a0f7c",
      "kind": "transparent"
    },
    {
      "address": "0xC6A0B1Bcd8a4B4a1d34e9b2F926e646F783e5A45",
      "txHash": "0xecda212233ed0577fa87751bc241fc7cccf0223edb229001c85e8d263f2d6e1c",
      "kind": "transparent"
    },
    {
      "address": "0x78a931bB39d8aD1A803Af503e5A80ceb4f7dA9fC",
      "txHash": "0x3511a4a8204f8189f3c585588688f176174ffa8b121d12947a9f64f2355904eb",
      "kind": "transparent"
    },
    {
      "address": "0x68345Ac4D53a2D516863728a5cA2bE67BB198126",
      "txHash": "0xb440d4d9cb5e1490392dca4072898d800a595336afe3e14c4a78964627c795b4",
      "kind": "transparent"
    },
    {
      "address": "0x755391a8fd67f5ad216Faf002628Eab38eE64320",
      "txHash": "0x6442d756f01c0bdb7140a3cb6b44f9841af086aa321e808f377123f75b903b82",
      "kind": "transparent"
    },
    {
      "address": "0x5214dE5Cdf672b73979EF49e648460b1715d8804",
      "txHash": "0x8425618dfc95561b25bfe2e4b24b6f540b8e28fdb5afa16a16ebdbeeef0b6345",
      "kind": "transparent"
    },
    {
      "address": "0x3ba560F2DC48fE86747C018c6b48fCEf53263857",
      "txHash": "0x874b19aa9dd6a8c82ec825af677a57d5cdf9182df23c64c09517d937a399d271",
      "kind": "transparent"
    },
    {
      "address": "0x7ec521797C5E56edF51909e91cdbA0410f0565b4",
      "txHash": "0x2f3c76997ca979f834b05baa40bbca236c406750ec6b16508ef4a48d3c275ef7",
      "kind": "transparent"
    },
    {
      "address": "0x7D93F6967C6d2f10C73b4450Eadc1Ec5a2a484CA",
      "txHash": "0x0b8256d1f9080eb7553e8c99f4a182f827254ca67a9c4350ae0eea958dea8b15",
      "kind": "transparent"
    },
    {
      "address": "0x473543b968645A4Aba84De5f9D049429062e9D96",
      "txHash": "0xec889252f791af8dab3e12c0c9e0dd0251bfe06abc409180a73d4ab6f07b756b",
      "kind": "transparent"
    },
    {
      "address": "0x2034870f73A154aBEB99Eac697a9F418Ef2a1c17",
      "txHash": "0x00b0f14e86c78de329644be978e24757227464d2609f18d2041b558bc4e3f923",
      "kind": "transparent"
    },
    {
      "address": "0xa288EA89be00611754C9Ec70333d8a3F28f662Dd",
      "txHash": "0xea99c528d11244b0acb27d107f33f18a7e3cdc275f0575140dda70ceeaa93655",
      "kind": "transparent"
    },
    {
      "address": "0x0Ea8C72d8Be4fC83e1D7Fa900b59b697Bfc0bF7A",
      "txHash": "0x1017775349886b9fa0c35eb8bac4c7a450b72f2ce9474bcab6d151a27ac2dbb1",
      "kind": "transparent"
    },
    {
      "address": "0x4A3226FD20B713c176Df0421DbB74B2BfDdf6FC2",
      "txHash": "0x4214ace3cca75eb9ff7046df184957e0a09c045c7ebe1ae639841f5136be3ee8",
      "kind": "transparent"
    },
    {
      "address": "0x57E2f435A8b4e9d5B4d18EC11a4037376F799427",
      "txHash": "0x4a9a3f8a57fc109f1ad9475173182b80d757f8bc0d2f86f9860ba97bc12b2b66",
      "kind": "transparent"
    },
    {
      "address": "0x79d8B86CC855e7B7BFa09C4F4Fcd1cD599E57B49",
      "txHash": "0xe45f8aa2485fb32a66b6f8e8b6ccc281d4da59da2e84e4789f5462dfed770b65",
      "kind": "transparent"
    },
    {
      "address": "0xd4579C4bD2Ba4Ae75FE53789003562b6E5Df374B",
      "txHash": "0x7f7266e3d6a029a1b2e4b38538d52c6190b6aef73a83df22e2a80b89b3a893c9",
      "kind": "transparent"
    },
    {
      "address": "0xb4CCC442DDE37B3989696fC5EFca71ce6FAa8b1D",
      "txHash": "0x76153a1e263108f67ec00896db6f9f8e1606ca6e03a1a82c484fe97d0908d9d8",
      "kind": "transparent"
    },
    {
      "address": "0xaB3Aa92672f90cC9a5222F128aF27cF61EfF48aE",
      "txHash": "0x97af0ea61196b29217cb4e7228a6e394ad6f672539caac39fca6d3e254e8cdf8",
      "kind": "transparent"
    },
    {
      "address": "0x41074076B30feE2765c98823A40823BfAab47f55",
      "txHash": "0xb18f2dcafdc92eb360c59aa43d385737db58f9965e097651c95b92a6bdd74f93",
      "kind": "transparent"
    },
    {
      "address": "0x1DCd76eEc23a8abd66b5b4E79050B7522B1aB79C",
      "txHash": "0xa3f871f148346be5317453f312dd67a0c64c367fe7743b10c41df7fa004b678d",
      "kind": "transparent"
    },
    {
      "address": "0xaA0D195aE983DcE884aF216013E586ba68b6a156",
      "txHash": "0x853fcbc461720bf67950f2ce3b38dc8a77817c9e289a5ab8c08a6c0929627b7f",
      "kind": "transparent"
    },
    {
      "address": "0xC56246d2f0EE2f9d407Db6f7B1cED76421075c2e",
      "txHash": "0xe60b7373e555f75b8cae899527bc63a72ab9f9ca8c4b1fcc09862ba41425c9b3",
      "kind": "transparent"
    },
    {
      "address": "0x4eb416E929FB637Bd51Aa122d5d4F2389d00A1CF",
      "txHash": "0xbae0de4fdfaf7021bb3a7c02e24a4295509103c55ec8b20071b0136a775042e0",
      "kind": "transparent"
    },
    {
      "address": "0x061E32A7B85Ae683c2A8834B1f571b3c14E70350",
      "txHash": "0xf7268b9296c2085ca13c96a35c36a3c2c4fdb22020876c9498832ebd41bfac5d",
      "kind": "transparent"
    },
    {
      "address": "0xDE0E938a120C1Ed547442BF194302d1660094745",
      "txHash": "0x180886564efb9e4327dc5f1ff94cee0141004ac11d1c001483ba33383ece638b",
      "kind": "transparent"
    },
    {
      "address": "0x7F4c0F3EB14f05ccDF556fe0A1a27CFAf929FAe6",
      "txHash": "0xb948b21aa88397d2b7848393b5c152bfdca523258ee14c6ebee09df6634f4927",
      "kind": "transparent"
    },
    {
      "address": "0x36D01F87eCF42C24DA1c3Dc895335188fdE58Eca",
      "txHash": "0x63cdf3f42b98ba5b8140b3d669251743fa4ba8b866a8f2f9a15b4b026c7617e1",
      "kind": "transparent"
    },
    {
      "address": "0x69b2Ca54243B5C1158fF79d67A73f6c83EE01Bc5",
      "txHash": "0xeb02631972dff921a2fc71b0500fa80c376cc856edc5d561b55189a7afc55a12",
      "kind": "transparent"
    },
    {
      "address": "0xDe711F18a1a3475e66175582e17A0055577200DE",
      "txHash": "0x985e5052c3edab2305b97e9d8667c67e74cf04fb1bc0fa3065a04192dc68e718",
      "kind": "transparent"
    },
    {
      "address": "0x18897dea703CbFd66FB28669BF4525aeE310c97d",
      "txHash": "0xfad935f28bb83ef97891b8af8d8bf632cfa80daaeed3c6f7739bc27c5ce3616a",
      "kind": "transparent"
    },
    {
      "address": "0xFEFA0c65A859f1a554B41104CB64463560fA7d76",
      "txHash": "0x6173b2866eef02ce5132d5973c17c2f60ee4c0616becf3ab270bb34de8c5c677",
      "kind": "transparent"
    },
    {
      "address": "0xBF941D6EAea92Ea05c4f2fF11e3BCc163cEe13a4",
      "txHash": "0xe3e2df5ed1592a31240f6d0076e72f127a1be234aeb74c21d874b4e43463323a",
      "kind": "transparent"
    },
    {
      "address": "0xfC4fab745C6CDB166C90f81C853764e1130Fed80",
      "txHash": "0x736fe2ffd28bba779e3eb859f4278ae998cb30a503b40f98ce11ce356cf2d33b",
      "kind": "transparent"
    },
    {
      "address": "0xD2287900Bb751Fa0540c3e1b1dAA366fdE7cc6b6",
      "txHash": "0x1f1c39e3e4ae9a7a38758a6133e46e87a51519c0d703d92b649f9c7b3f635411",
      "kind": "transparent"
    },
    {
      "address": "0x20349102203cc4E5730A880c21ED121B7b2B7e6D",
      "txHash": "0x740cd25297ff4f918fe151bb3e7579ec780c3d1a43c538eb224fe8f2f84fc129",
      "kind": "transparent"
    },
    {
      "address": "0xAC1D7dCC2D9037Ad9a12db531593534ca58Ed60c",
      "txHash": "0x6b20532209a17fa1f2cf1d902bac5682eb7b21f5c3899fbd637971c810778f9e",
      "kind": "transparent"
    },
    {
      "address": "0xD639fdD499A62b1417016bBC61988211E8633b10",
      "txHash": "0xe20e3bbb98b6c386ee9db1c81c8e375b4a89277761fc6f7b44c663b427965cd2",
      "kind": "transparent"
    },
    {
      "address": "0xdD3aBFFF9F5e3691cE3AF5dcD8024756548798cc",
      "txHash": "0x7508bdc7386173501d8b5fbf97110b0f44729babd515bf02d67de186b2c36d4e",
      "kind": "transparent"
    },
    {
      "address": "0x75D46DE2788d7cca2C7d92e7d8788dc58f4E6992",
      "txHash": "0xc40858e590632f4aa69501ac707c2c71ba380150730c63191b554418b43e330e",
      "kind": "transparent"
    },
    {
      "address": "0x25a637a833eDb19848BA01c28a19E00f301627b0",
      "txHash": "0xb6f81c1b8c05546a881494ac6b3e5a58dc5bf4ca03a2dba505eeed74cb0e9274",
      "kind": "transparent"
    },
    {
      "address": "0x17413F6B8358344f669b9fc562353F6B6200595F",
      "txHash": "0xb1686e125ffb9d5fd7986f063cbe5aaea15a996687acd658c0581b6c85a0a622",
      "kind": "transparent"
    },
    {
      "address": "0xC0355Fa58FAa6f690AaEf4fe6E9A65e8C914db0C",
      "txHash": "0x80a4abd9de8cbe8343dd42ffd7cd242837d89195b7cdd14aef542a59ceafde67",
      "kind": "transparent"
    },
    {
      "address": "0x2C4779eAd1e28564Dd061F2b40C395F49457006f",
      "txHash": "0x63f9600181417c6aca0e264abf67d1d6d19d36f6a48907b79a77cdc52a1dcb0c",
      "kind": "transparent"
    },
    {
      "address": "0xbDeE633F5944F37dB59F671188B40Cc8fbbFaBd4",
      "txHash": "0x1194b2001ec6dbdb291b9f68a23a15b90c61810f8a60bad52eb7f804491cc0f4",
      "kind": "transparent"
    },
    {
      "address": "0x7aa5C09108F2b809266C30Da1c87A7FC4CdeAf01",
      "txHash": "0x11bbf516e2f3e7dcfb3d8f6323e3a3d743a36988e59c2d37de7a3fbe1a05d666",
      "kind": "transparent"
    },
    {
      "address": "0x6d5a7ec6908Ef224Ad2516f862892687DC1B3Aac",
      "txHash": "0x315ec8b828c746c9cea3a8a65f2c41cb79f377f251deada989ca2c61b24ecda8",
      "kind": "transparent"
    },
    {
      "address": "0x7b91868dC6A086A2Fb564057E57A74127037a503",
      "txHash": "0xd0c92c41f5ebc9681bad78a8ebeab69800eda30b0effdeeff594136301f209cf",
      "kind": "transparent"
    },
    {
      "address": "0x234C4C4f1E352d02943D2B5567811f62B9A46345",
      "txHash": "0xeaf955aff24dfc66d17edd1275b7b4bdc77dc6ce846ef033a2f2b129af32d207",
      "kind": "transparent"
    },
    {
      "address": "0x12cD80d523Ae8bC849317E859Aea41Dc980239d3",
      "txHash": "0xb0a6d01cca81650f70388fdace9a9ed19ba0e9712e156f051342feac817e26b8",
      "kind": "transparent"
    },
    {
      "address": "0xF90521CdA90EeB3c304B1B8B032B5dA43D53E2c0",
      "txHash": "0x3d016b8ffac05a25fa1e5c383caf7599fb6f2713370db9b43ad3b0049a6716d5",
      "kind": "transparent"
    },
    {
      "address": "0xA22f7D63684854d1Fa6438a2dC9951b5d2feF087",
      "txHash": "0x20bec1f2d86fd387daf2f85d4655b129ec716a378b9913dc72cb4deb3ee99408",
      "kind": "transparent"
    },
    {
      "address": "0x5DAb20E477d5576A0C03e1928A7632C8c9D71D84",
      "txHash": "0x83f3d69ddd104d56b70f9e1a9a45244e6a97233ab135cdfa542fcb2bf0dc8d87",
      "kind": "transparent"
    },
    {
      "address": "0xD445b99d29596be3DFBb5104D772588a0daA9B40",
      "txHash": "0xfdad8a514d9bf0abfddc4272c9d574ce1053e22a1bce8415b32620ad2e07b328",
      "kind": "transparent"
    },
    {
      "address": "0x6b39c39cF661f91264B76e41770Eb8d99CeA58C6",
      "txHash": "0xa01d14c2b382bc0123b422a2851e784f63739049de1a7b310ecda35ac827c88e",
      "kind": "transparent"
    },
    {
      "address": "0x4AEFAa2Bb55a80B6b116B9f7403F5101Fe8f8e17",
      "txHash": "0x563ba63e73c5c0125d5e96a3b3e19cc6bda71bc454b53a9578757ce372d305d7",
      "kind": "transparent"
    },
    {
      "address": "0xF437b6cB1A12abAa6A05b5915B81cb819a4aC1ED",
      "txHash": "0xbaa62c2ff41144ba9adf217754c232f82d22c9cbdf1b59b6d42896118a824e60",
      "kind": "transparent"
    },
    {
      "address": "0x269571D571FF154750996178C72D28cBcE9fD8c1",
      "txHash": "0x78b36f0c49f5eebee9075546e2aac6c61d97ecbb37bbda4461479235950184af",
      "kind": "transparent"
    },
    {
      "address": "0x45eDfaD333475e371e95ED85F235Dd2b043c6B7f",
      "txHash": "0x1a6cd6812ca7f52a28045c0ca0518402bff4aa193ef38d8b8b9accb504e7158c",
      "kind": "transparent"
    },
    {
      "address": "0xE16B62F223979591Edaa307058a92735C52D1861",
      "txHash": "0xf87cb008403afef244e1c0c11fb4073af4d50234cc464e52498f5fa3c6b5995f",
      "kind": "transparent"
    },
    {
      "address": "0x86F69474a582dDC5A03435CC2A0EaC2ccF1DF56f",
      "txHash": "0x2784576e2b901533f1d52c4220d66b40dcb41dc59905a3cb458df356367747ba",
      "kind": "transparent"
    },
    {
      "address": "0x586e0eeC06cF1B8eFFC9FDcA86E867150dcfF4fA",
      "txHash": "0x513e19b0f258af17172dd484a6d95f0c70c1df92d52fc27108a122f3a4314a12",
      "kind": "transparent"
    },
    {
      "address": "0xE421167311f49b32F4E76fb359944259F86091fE",
      "txHash": "0xb0bb01cc80fd2310df4a6e0315d5ef726ede13cbc3178a72ccf1ad6cb77e21d3",
      "kind": "transparent"
    },
    {
      "address": "0xdE4AD233F8A816E0eAe32A57E097F334D126C488",
      "txHash": "0x21555374b03fd5c00b7d5484dec09176a29b092bf133df28fcbbd02b93b856eb",
      "kind": "transparent"
    },
    {
      "address": "0xdB79E6F36cB5b306257136d3a4A32A3C682f3147",
      "txHash": "0x8d4815c139f9256ca5fb4d496a6b173c4872a99fbcb244b10fd7d8a80e73b510",
      "kind": "transparent"
    },
    {
      "address": "0x288A6B71eF866054CCDc6a6cA0d78dB13FedA8f7",
      "txHash": "0xe2437926580749f46e9d0b5f33b1c8e03b5968b4b188b92174dbeae18ae7073f",
      "kind": "transparent"
    },
    {
      "address": "0x0740c872B90Ce907C118C70fc9ae8b885e0FC92f",
      "txHash": "0x140ad73f71dece9321a4d6a24fb0b1a022fd9b2b68459e7fa4074ac627b02f34",
      "kind": "transparent"
    },
    {
      "address": "0x69b58E5d5F9Eea330C5627E7FBF5516Bf8B1Bbdd",
      "txHash": "0x7f150584fa01ca8ea8f18d6b5598894a4ab8baf072c9ea3ad85f9ea423f15605",
      "kind": "transparent"
    },
    {
      "address": "0x0D9F28F17F21fd154D2B22B6881B4BA0E26236e8",
      "txHash": "0xcb803bcef9dcc7140cb35cbb740a0c669a12df11618e646e43e2b4adfa739345",
      "kind": "transparent"
    },
    {
      "address": "0x08A444696F71Fe0014D34579C87Fe4D0AB856bCD",
      "txHash": "0x5590eb20750c19235f77ec9467ce77081f679eec21b97ffcd017e3150a7c4e89",
      "kind": "transparent"
    },
    {
      "address": "0xeBC156ab1605B6c47D5d1dBecB526B4eF2bDEAc0",
      "txHash": "0x6024c861ede7bed356b997f22e04512472789565ba1c33d7877255e61b3b3bda",
      "kind": "transparent"
    },
    {
      "address": "0xf1179E39B2372bf5Ee1243962716Fc1f6a4CEaF3",
      "txHash": "0x0cfc161ff8ef1b2a10b91567a260c07b8899db294ec00013fa8d2046cd29d29b",
      "kind": "transparent"
    },
    {
      "address": "0x697E8Ec2E984cef5f5CB37f38757b05C0966032c",
      "txHash": "0x867781f60a6816f75d94019f0ec68e4b46ec9365ccc3c0c0460846e5fd636a2d",
      "kind": "transparent"
    },
    {
      "address": "0x923017331834393cD7e098d6EC627F31f867e442",
      "txHash": "0x0badd961866846970caebf43a582242e6ea19e42ccee05fb6e4e0113fc93a28a",
      "kind": "transparent"
    },
    {
      "address": "0x7811FB938B9FA83730c9Ef6602aAaBA907235599",
      "txHash": "0x97a08d6e3e3c45ba58235722c32c06887587b76ba5f809ac587d5394afa16df5",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6f5c283546b8557d5f08e2f3b24cfb3f260d5802a922ecd2e2d6152c296d847b": {
      "address": "0x5310B54c6E0A676C12f512e744f5E69940112f7D",
      "txHash": "0x0083c62e24ccacc3dcf4a4c7b59164d4c64f5ac51e4aca6ca934ec0d2afb716c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ce9e5796be4f257847397ecaab449c03282bbda4a613c25092560f653460a0c5": {
      "address": "0x1f5A945dc87A984C048abC77B2CcEc1C65372d50",
      "txHash": "0x84a7e7f880f8401fa2eace406aa387f6abc2b6481f966469716612a92c4fdfac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f20d081aca46ac83b116c342e2297c4b441a2edf46f187c8255470666816299f": {
      "address": "0x0a886D17C3C22F5Cb275C5a08Bcc6c998E801662",
      "txHash": "0x09ec92597955eba97c16211115c32885e4f172db4641c115d9cf6654ae5270b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5b9b90b1ffff44add1843bfa7fcd0a8c08f48413b3ae7608df2f3e146de89aeb": {
      "address": "0x315beeB1B77602Def08f5982777849f89DA5779c",
      "txHash": "0xfa1c2adafe9a7fef1ba4a20786195682ef1fa6a38ee19996914486f74fefa149",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "281541c5f6905dfce6536f2d1f7a01b6cfc8d4c5787b369ae5430b1c497f3fea": {
      "address": "0x1Df75BF3A916FD98CA45b1475141166cc0BF8f81",
      "txHash": "0x94548d169c1266d3ef76815d6643254d13805aeb22e551c683553b3c66a2729e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6b6154fbd312d39abec0761fd15379bcbad43062d31054448a7d8b4223dfbb5f": {
      "address": "0xe62DDF685a6d7a1faDA1fa73E98C8c33B7C42904",
      "txHash": "0x25ea13be35de809bb0387eeb35e462e41deb3025189fb2b501afdbd108a6c2c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0b2ae8e08d34e3351dfa7613c682a73f22a2624a6491a90bd9f2d9d3f7beea06": {
      "address": "0xa128105168F7fD66d3C6f9031a417d3e4628a2AA",
      "txHash": "0x94c2e22063954239735891381fcaa519557233cb117bf3fc52f293d4dba2ac4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "46fce64c235be85681401789bcc00b335e27755fbb1b0fda3e5d1dcbb35ad0a8": {
      "address": "0x390039a1D8ab08D34f9FE19289f277ecB6c45FbF",
      "txHash": "0xd4695517b641c2e75875b797447907830dcefdef6cb130e9ff0a7f9ce90317f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5fac7ba5708fb83d1d699bbcdf0e86424fd3582495c10e0ce2ad218859f5f7f2": {
      "address": "0x75D876CE7e61C2a1a5cA8811F793358267F01E18",
      "txHash": "0x63934cbaf157ee166ac599915a8d61b459c1121d32aea6fe1a24256bced6f680",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3a0c39876228eb0d7992c89d8dd1cf6788bf102563922d0aa3c2b24f3942461c": {
      "address": "0xD07Ae5619B366B101181b6b1053842e87b54f432",
      "txHash": "0x7abc385f6c13b6505b039104088fca869a0aece0d27606f524efb6dadb61a24d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32c16fd22f06e3969dad2feba780c33ade198995491d30acc2ed198fea7e646e": {
      "address": "0xb28ff7d7a2531C0Bd2e65d4Af46575f037279cd3",
      "txHash": "0xf42d8cf3481ae7ebe8758c299d65b89af486061b6d06bee3415b4894972bc70d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2843b53066c48253fe93727ed3874810ae01a457b9c3b96241fb23ea47e76c71": {
      "address": "0x660AB8b81D391b90dED684Bf0919dd5C0F600219",
      "txHash": "0xcfcac695da046b247b27df03af0e329a8a7244d43629e6080c569597958d5bd6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6184df7ac468fd3d89fed6465febb85989ab5428a479e1c986e15505dd1262fc": {
      "address": "0x2adB6E0DD15355a986Be095554C5806F8d0e6D24",
      "txHash": "0x6b644306092ab7533b2888ab15c154d559e1e5573676cab762b49822c554ebb2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:109"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e3316212c24898fd7d93af6dada2b92871f9550733efa89eb8305ca6d2b6360": {
      "address": "0xe57E602535A086F623Fbb8EE4a2bf83dD14329D2",
      "txHash": "0xb4956055ff145e693b8b37aafd4505eb0f97701cf6d065cfec555112fce9adcb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "366561bcf99bbfd04e3686903cc52048579fda20222439673a0717765c6627b2": {
      "address": "0xbce335EC2488Cc4848a8786900288194fca14fCB",
      "txHash": "0xec0733c379604e8290acbe8e1eeaca3e2a8b2957e00741f9bdc5c2a0050aa744",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fcb6748783357a95187009270f552859b23dd072e3cb66bc54a440bf5b547249": {
      "address": "0x6670f641859234cdD66Ebb50E1Cd2cCd25f550c5",
      "txHash": "0x4b400c09198315124aec98862e606c34dca8d9ad5247bba0d2ec885dd2013023",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "06e9fbc6f0699753ea8c91c40b20e40814852bddc9c14ae5737cacf770f60a91": {
      "address": "0xFC19bb4A7a999292b0a0F1E74Ca044fEb915ab9d",
      "txHash": "0x20027d8ed4820a2ae0f04b1729b0053ccd36e9faa2c6b79df15b90f895d64be3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd0794f7765b70a44c81cb78a81ac43717a60d9d569867e058e7f847d767a5fa": {
      "address": "0x684C259205DB8fCf2c660dC532563097cB4ae28C",
      "txHash": "0xcd4975360964811ee7128f47a66b2e7b852e52a735a749e5d45d269c0f180270",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eea594eb021f7f095a8b4d3d7b026146a2071ecbf0767d100a5b459f3f473d76": {
      "address": "0xf7Acb6f3EfbC78ea2c78f90f9f41698f6DD8480A",
      "txHash": "0xc256af8bd5b2d63ad1e0434d6823d625daff85b611c31c0f2b444ff423041a14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ed3c765e77464fdde3132bdc11daec31001e1a47e809b7cd8dd18bd0759b2cf": {
      "address": "0x50C9d19c7b8159BfAAeF55DE245c0e68BEda9537",
      "txHash": "0x794e1dcc210e18487d0db36e3614c6a058971808ca7a63f7647db57d08fd54fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9f7359350fd63613468aa8c1884d50fe5f81f63d773ff1b3e0a0aeb4b788d212": {
      "address": "0xE1a9E5836f8cd60EEeE661fe1F783AF84f364981",
      "txHash": "0xa64612a75af76b847c6e927439be2ebea37534745601d573716d19fe25d28d30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "161b923800b51b7c2b5b639a26c0fd1242e5bbd97343233bfd91525ccfcc99ca": {
      "address": "0x0Bd584D7dDAe4Aa4f96125a719F078A066902511",
      "txHash": "0x4ad4de62c70274ed42e46af6ed70615f83c1ab1adb22136a09f7386e412d4312",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c04110061952752fd0d38b1db3de8aadd351a9db413edca3fed08e6b15700b95": {
      "address": "0x706660E64392e3f222bC82FDE743fCd134d30cC9",
      "txHash": "0x9c3e637d326dccc60bc933e31b316cdeb496650074f1b8bb44a6b4eca17edd82",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eda14815ba3d089a1f964cb8a40b6c1f51423bee84eb405cc221fb5ed681df5b": {
      "address": "0xA1EB6924Eb25f7F7fa184F1DACef03affaDf88F4",
      "txHash": "0x726397cace734265e2ab08fe5dc24a8183f11f9eb1e4ac5a4022e446fdc949bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a9f4621d32d39269dd2493aeaad15172340fb6b5caa7ad6ae1863ec989589b2e": {
      "address": "0xc37200c275452Cd9920E3d99e0E1bc8f24879a2F",
      "txHash": "0x7c504307b1fe2acdaa8c66d7a68e73e8a3f9d4fb100ff4049cfdf72e046d4de0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9b0a29dda6b64bd4ab766d612992a051b027a31b938e243b95c2ed0f1f278f97": {
      "address": "0x07da7C8af8Eec39a4c94a2B1B4B564A1241FBE22",
      "txHash": "0x9bc0d7b96901e94e1a0ac707c35080bc5b4f66264570ef47f24d7abda709fdfe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "393751cc8fec121ee3170cc424ecb33da193af6492c963b513c0448683cfec7e": {
      "address": "0xA1B4c0f776FC78Cf4A4DFc8DFbF5081C68f7f5dF",
      "txHash": "0x8bd844ffa1f15062fc9241534606a8f3dc6b22d2416abc61b740fb6a42374b55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9037c94a33bb7b12c0f6dc59c8e6648f523ba5b88eff7911a10ef7b4617905a2": {
      "address": "0xBABF18b66b800B881Efd0d364C1e30140FEb5e7A",
      "txHash": "0x7a8456646230ae118ad6c8a8d55337e60a395830774ddb378dc7ad7dcc0dea06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e884591d03b675a9f04f89a10524e08b8eac3e1da62e40a92965d3ec133dca9": {
      "address": "0xe2385871c69aA9aD883E197C5A77B8dfdfA96DaF",
      "txHash": "0x1ef49cdd7266aa644c0b3ed564db29cf274931d434654d96eef708219a4a907c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "21d8e4843eef803aad6553ca9fd9264a6fef3ef22b1d0a4364f91c95a76a67de": {
      "address": "0xc03a3654aE0584302AbEeBc72a65aD566C772539",
      "txHash": "0x61f27eb55e6d96a46dc114a0240896c4946954a470c6ac62b32cee8c6ae5698e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abfbb9f24c1b87002a8fda263aaae3a43171a3380718aa1c2891c68f8bf368c1": {
      "address": "0x8F2f8bdb841C0903A0613b4746A58d7fdA18b01a",
      "txHash": "0xf7080c9c0d454a3541d3f380acddab7619a9103f38fe115653b1b371af781a9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "12800880df6ba376d124e0042e0b11f89604d3ef3040857d462c8a13fbfec6cb": {
      "address": "0x2b605A431f14A7d6cC05fd9c68DE28a39C993724",
      "txHash": "0x3307a9bc41970b2403f1d7d06eb20bfd50ae22ae844831384457ea8842601008",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "40063f68ce7e96e0210f95103bc34d5593e7c912f95983dfed4e2d7792c43b0a": {
      "address": "0x35c5Ed00094D0EdeceC5503b8B55Eb4407164825",
      "txHash": "0x99378cc7b1e658a564417c379f2ae0809ceed55a3da33627e2177269312e0913",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ebedfb85f330dab463463e316fefc6b9fbcd040fa29b89ee9c08836144104daa": {
      "address": "0xA8D9253D07dE2A49F57F9836428b1c644cfA029D",
      "txHash": "0xb7934155c22acae35c09d788b7a69a68b74c3b10dd0b837412f8c9fe4f2e72a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf4d655a214b553a862241036d9e10c66295bea4881630c0463965b388ecf95f": {
      "address": "0x89c97fbB1202Af704A50488398Ed5828a916bF55",
      "txHash": "0x974a17aee215c045bdb99b33c5285465bf80915565069cf482ddd569dd844ee6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e54ae3d16e4ef78af2ce0fe241661d3789c4e62b43f344e5134537c0ebef293": {
      "address": "0x3B91b45B49bA76321B9DbfBc88f565725925092B",
      "txHash": "0xd5d115c3d69e2ed5e465288ad8d2af5c724862f8e0a029c46061f723a89fc4d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "48651d725d9ff209b9098a8d1b9614141fe4e3f2d118f5f7dadf7fb95ebe121d": {
      "address": "0x0145fA7e768C0De94B6a79B8d5441cd7F9Db13c9",
      "txHash": "0xbd9e7645785ad1286ba03bc53a9726b2eb39aac6c20a2e467a39d52a0a629703",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4daeb8e8d357dd2b456733f33d9cc6f7d4d483f97a532b1224af486c6ada6b0b": {
      "address": "0x2396E610b8e9e2708F4c288b394eccB2EC09355A",
      "txHash": "0x57d317d096908df4050f9b60bb5d60965b20d7625e6a0a982f4d6685979ed098",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ab5ee5951856d432f15ce2dfea224d9fcbf1576afe848c85a973bb87d4179e2c": {
      "address": "0x76ce99F8179Ab136C45B42930e3664019047Ee9e",
      "txHash": "0x84f1f54eab36f29f71bf327a90ef5329fb94656d033f537dffdcf043464eb34b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22ff41b0d7faa07c3444ae1660a8e60ad9e89ac24976b0921ac37814425087f3": {
      "address": "0x168373dEB5eC705ea51a9AFd639c23cD1f9BEf1c",
      "txHash": "0xbcb73dd08901af6524d469b782a8c2b1443607bc0557e6677c8581c5e2eb0f83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "857a5ec748a8b55b05247bd66b6b9e9c1318e0fedfdc55629ad5c718da231830": {
      "address": "0x16bBc93ec25ab38E54dD7DAEbf7521e918ddfFd2",
      "txHash": "0x7e1f5da7d29c4c3ea2ba36adad7db7da1f4fc90a1dcd603f14ed8bdd43cfe24a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:134"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6324a6fc82a87515c096cf1186e2a62e7d8890880966ba3d67871af55f15e09a": {
      "address": "0x0Ac8E9ebe12539e61E8A331390F242841486696D",
      "txHash": "0x2c947b9e0e646f9ff27df4d93024941e94528f41a909b7061ccdf0b9ef3d7605",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:147"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7dea430516e055ae98766b62399087870369db2ca2f9d3f41131a15d4186a1de": {
      "address": "0x6744aCd00001a2bB7f650b0De64D875CA2a28d65",
      "txHash": "0x670a09a4cf0f0eea463bdd62424a211f98970bab637d2a07a1d0db47f55d3355",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:148"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd9e76fc180d9a2ad6971377f4129c3d9fab8d7192fd0fe99b9bb386de80ecd3": {
      "address": "0x70567f907C5ef08FD016829d19c8E5381C65e25F",
      "txHash": "0x4ee497f5dcaf013907affa8570aec85d192e04acc0c6cec351bfc8bbbc441080",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:148"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4e2f6f86998b0ac581df362e67afd6d3e05cd16c2823981915ff8895bcaee17a": {
      "address": "0x395ca8b24D3eA292883389Ce4525e7527d00A46F",
      "txHash": "0xadfc7916460e2f007288679285b5ed21a737394c834dc6581e487e8de29d639d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:148"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b26fab984937284624771ea16130ada78e97780acda63e6255fb1d05ce13a5cc": {
      "address": "0xA7d4625b5529fF6c9125cF1090aE8e6fa36cB2dD",
      "txHash": "0xab09c490d9ccb158e8d03035a0fd3e03cd9bfffe5c63f787de2d919307c6de6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:227"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f1a5af9f73d8bea6029177ab3cd2b6e8ebeb103e855629602dc41cc732443260": {
      "address": "0x1c058c980b1e1b428A147A4b422167cc655e3a10",
      "txHash": "0x0a564445bbcae5d9372183e7afa5ed7a1c97502c7edc5711373e424c9492d5b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:229"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8695e2ea543a67e1874ca2e78e6db2dac0a3bba80bcdf97a98b5616c25d24f2b": {
      "address": "0xCE9Aa23E21C68516e68a5C42d82c9c5e7b5DdC86",
      "txHash": "0xacbb76913ba01fd0dd144dbb7d5474687b04dfd60236606e06cea98d601bcfa6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "75015a1b37c96980df017018891a1464d7f6b7b6f26f1b78cb2b1bf7b4c61a3d": {
      "address": "0x88C030bf6B5B42dFa106b2D6b9dB58CE8879fa9C",
      "txHash": "0xfcdc8ffda74e793ac6455f5121f7b3cf15562933d1812f5a2784bfe43c2da5e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:229"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9c4c9abe33a3a003680a3298830189d65b3ebe410f88e6eada6c04fd0f79ed66": {
      "address": "0xB7987e9568c68E9f54B5bD15F1094DD097B5E798",
      "txHash": "0xaf7b8205a3574cc042de5e812835655b2f97615f89f7dcff2b443ff95b7584cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9a26ee90b4981f3d530fa690f1036069b1e033944783af8415a02ef6f7f2dc88": {
      "address": "0x40416A8C6C82Ad47A9087660e627A84ff9B3ffb9",
      "txHash": "0x5d0a8b7924a82e532aa7d65bed6354459da303517d91c3850607fcf61b891cbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b17d0ce58fce98e3e94c214467c2b7ddcf521be1b4cf966691af7329be0b267b": {
      "address": "0x2b1F6789892b86A36949482D91D45E80707D6FfE",
      "txHash": "0xf4ed642863467a5551c586f852e839359ff80190440db5a22fc60c2f8a395e04",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ce18e4881fcde96a5af160c2430b98e0d60ee52403f53ab628e7c8a497145cfd": {
      "address": "0xaB199195721002A6754C9728B3037DefA9BbDc3f",
      "txHash": "0x07152a029115bb93ce2262b22fa9d7337111b38fcd2955969f888a5cb2b7d472",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c4c24253e30d0252cf6557c5de0b6ec7da5bd5610fde2dd297378d1b2508940d": {
      "address": "0x13690D51aed61aE893bd143E4F9555C658b7a4C6",
      "txHash": "0x1694d355207243af606b997ec1ce82355b56224f6333abd0413370b15ad7458f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b53d444b5c4c43a7de4b616ef624f2f2347c5b131ff854c4108bfdff7c08d008": {
      "address": "0x9fE04f788106c6FF48eC95984Cb79AA325ba71F8",
      "txHash": "0x231dde5769506da64bd78e7223d436c3252bd0c8958cec75ddbba88b2b3e6d79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "69c7f20f23fe986001801914d134804dc4d35df4096fc04729be813c4371d2a0": {
      "address": "0xa5522Ff241789885f11b8b0a0A40FA67867C5CB5",
      "txHash": "0x63b693f03e6e73cbc2813618bafabde10728f206e6b3856060113f3b44dc9821",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "88717c8ec2d23c70222dea06849ecc639f2f891d77c484c53d2ac66f0378314a": {
      "address": "0x3a909293C907C216eFB8Ab64800F915700841892",
      "txHash": "0x362f3c9b85dd6557c73545bc1840255079fc3b80d768cddeae7d069a92e6ab9a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "46cb166a0517b0c35675f6383bfb356b124b3ff42b5272785e6526911fb48189": {
      "address": "0x11F2A79C16b64085B39f3B8Cd67DB36d01716D5f",
      "txHash": "0xde95850a96d8b69be0c0d48ca48802542fc4d160ba898493a2e9091a56255cec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "81ba0988fcfb30e46e9303d72c5e80ba509ea872a432207e2fe3e475baf6ab07": {
      "address": "0xE4F9a6a5f7660A096CA7895A3d5018488f1c4da9",
      "txHash": "0x67099633f8d7e289550cc04d0fc99198ad460d5df21d5385a4360c163d5f15b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ef8700d975477ff00d62ccc58ca4972bae69b24c8ebeeb431882c6d50a4c0da6": {
      "address": "0x99916B6421696Ded3F3f1bBD518d4E7DA4f6DF17",
      "txHash": "0x3f3328f1a36b3ac7e4082e70f9ff2d27a03d53a86b4f749d6e21263c6141e227",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:232"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e0bcee7e4e2634fbee14df63fbe58e05a2b43cb4d0544fb49ffb1a086d202ccd": {
      "address": "0x971ab74c22E80F441d57857Dd00dBf5B0255a6a4",
      "txHash": "0xc9d944d6e2dbc8acbc3968d3b463fcc8a2e625250e1137ff5611679ec0bb7c0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1061c9a0343ce0858ebdf017b978e237e9d8d35e23769f60bc582fdfd1235bda": {
      "address": "0x48C821Ec753058231EBB56a4fEBc5492a5B44ceC",
      "txHash": "0x3628b12bcdcd2e0b244c5e08607f69527830d62d2c1e18e5c433167f8b26e3a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8f5c238a5305a7dd1ce10d8f42632f10eeee937898a87321ecfddbeb7dfd0271": {
      "address": "0x0D4803a7B6e35f92F28f453DDE60370F18712f2B",
      "txHash": "0xad4c4040d473acb1511a5dd6859c39616ed41980c725fe0849d77f7e8b2ec0c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:233"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "29c90050ce189a854956f6dc8113ba914d770e795cf96c676f9f1916928599af": {
      "address": "0x411f43Bf6ce73167f16674Eb64dB336c17A3CCF2",
      "txHash": "0xbbc5cc2e4611b38d3a3ddba04d6bb51d0e2b8256e53d15fcab5e0057bf699a8a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d2a5440ac15c8aef999d25434c5eaa5aac147ed80836e58ee93c7b90c1cfc575": {
      "address": "0x0b63dB38E57B13132FBB16C9724dE6D827cEc93e",
      "txHash": "0xe1c705ccba8974cbd8e84e7d7005e736d54c0178d6f06d7e1a3c2dcd7b7865a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e5b74b4ae965a42403b8ddd503d36d61fc2d8b6fc0503008d8f9f5002ed99b00": {
      "address": "0x7291faCFCc257643AF90E9d94940e8Db5C628FF4",
      "txHash": "0x2cce63ce227e649c286637b39168eaaa17771afb2a2362d73ed7abff5c274095",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a5760dd54e82944bbf5d793266024e5d69610334ddc1734e1bb123883b66e63e": {
      "address": "0x2bd265e6dF00A6056650Ee1c7731D69DF9Ba8710",
      "txHash": "0xb0f23039f8f2e885622135c2f5676ba05f940e587753a40bca3f3f32fe2b1da0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6f1f626994447c87da7821638a261d816dbb42260bb364825cac0205bc3714dc": {
      "address": "0x907dd2d1200357aBf5E46CA15b4fa837F7B8C13b",
      "txHash": "0x3c1c011611fc22848ce1310aff17e85581674748a0bfd92e74ad41d457a112d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d4f82ad198e07861d871d7e742e6d8fbc124f7062185b09fc94d34dc631abda8": {
      "address": "0x155F8DaF4C95BD70Ff63B3117FFc03918aD7F36f",
      "txHash": "0xe888f8784c8d8895dfbf14b26657dd5cca36942f449a38af9c80edf3975ba0ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c11227d6e5e306e293425c90f9a73bcd7e25e626d0acdb2ff26673a5d0bd79b": {
      "address": "0xF9ff95AD4bc482a3bFAaa64A011B8f6c2e18B3d8",
      "txHash": "0x1db8f6cde99c88d7d8a745fb2ef5177a0c2834d93ede5acfe49b5bcdc9a594d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:228"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "edb28bfa5be8f1506330dd664a26cd3214f37f90cf48e3b07ed176e634f4a3fb": {
      "address": "0x460dAcA0c649a1468CDB471E71e3A65Bf56191a2",
      "txHash": "0x0f8d833fc44ce3bfc5ad0b774f56f22798812d24303dff9ae6351e313a7fd15e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:30"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:244"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc2d6a521f5a7d840edaac6ce06f61080d3e12ed99ce62e4804cf8dfb6fd3e59": {
      "address": "0xbd04d2538aD4f4835e2e74C07990A6fd34f8c94a",
      "txHash": "0x11bae56ebf763d4b3bbee51744030f651fcf7633b647064c50dae174132817dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:30"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:244"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
