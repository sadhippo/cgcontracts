{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8c37543A893e677aE74cc9bc95Dd252cAE1902b2",
    "txHash": "0xaf18e8c64b62231db0c5a5dc458b63ee850364383746cec5609dfbec27e0795c"
  },
  "proxies": [
    {
      "address": "0xd2e6afEBB31fa3338Fa6E2E49e3d46038f789799",
      "txHash": "0x63fb8383bfcf8da38ba323a32e90d3918c4b6a53b7ccfd98b2305830cd6ae2ee",
      "kind": "transparent"
    },
    {
      "address": "0xeFB8289A1a99aF53Bcb96e1151a198A7c445C235",
      "txHash": "0x773f0f6a790877e754540c663266951b3ba2ec19c213d78abdec962eba543ea1",
      "kind": "transparent"
    },
    {
      "address": "0xF409966b6DB7324929CdC1ca7D7084fF9C7af772",
      "txHash": "0x56888bb17125f0afdf40844e6dd86630266760f202deac805ec09b056c91f431",
      "kind": "transparent"
    },
    {
      "address": "0x2a5724d53d69048E6a4d1C02888AFf57dFc4134F",
      "txHash": "0x4bd4f06f775b3af2cf380ad12ab3063983db3e02a0654e3a8188354d68a2da15",
      "kind": "transparent"
    },
    {
      "address": "0x16926A1f465C80D95475a81Ce62945A6601048f7",
      "txHash": "0xa12107f3e9363e0863dec5833325019ba71438e3b552069f0ad972873bf20f9f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ce9e5796be4f257847397ecaab449c03282bbda4a613c25092560f653460a0c5": {
      "address": "0xA75a47091d62A97B0f115053e2BbD17d2c5601F1",
      "txHash": "0x9bf80ee86b35ecb76a84e259b581b5b3f12ae62098c68a3b5f2dc6ac06d2aae1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f20d081aca46ac83b116c342e2297c4b441a2edf46f187c8255470666816299f": {
      "address": "0x0d304721729515005F48C0fd759E351882928DFA",
      "txHash": "0x746df760eec208e730e1f61a9e1eee8831812de31a9eaa3b8780d70a4542d504",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b43d84301bc2095455299b31b87e230a62165b074f1601561d3ca87866c3b110": {
      "address": "0x7929073F5Fe6e5206121ECCfADca907890841CdC",
      "txHash": "0xc95eab465b179260f5c12ba0c0f05b5b710efc47fa444ec18698126b65643194",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:22"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2183_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:107"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2183_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2183_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              },
              {
                "label": "winCount",
                "type": "t_uint16"
              },
              {
                "label": "lossCount",
                "type": "t_uint16"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9f7359350fd63613468aa8c1884d50fe5f81f63d773ff1b3e0a0aeb4b788d212": {
      "address": "0x5c401E6971e720B00F709e1AAf0b77Ae0891646d",
      "txHash": "0x9ece98fff32991bb1cbc021fe2fd71e4d180c25625efdf24ba5ed1096c219492",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:16"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:17"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2187_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:122"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2187_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2187_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "health",
                "type": "t_uint32"
              },
              {
                "label": "damage",
                "type": "t_uint16"
              },
              {
                "label": "defense",
                "type": "t_uint16"
              },
              {
                "label": "critchance",
                "type": "t_uint32"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7dea430516e055ae98766b62399087870369db2ca2f9d3f41131a15d4186a1de": {
      "address": "0x446788E04740d9E00Da772Ba6Bc20911E78Eda72",
      "txHash": "0xe60e76e91e50e240040031cf089155e5a0cafd46c4a25b967f4735b62091c2ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:19"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:20"
          },
          {
            "contract": "CryptoGuns",
            "label": "levelUpFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:21"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:35"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:36"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:37"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:148"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
