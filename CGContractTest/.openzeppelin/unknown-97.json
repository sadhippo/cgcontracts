{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5Ca30B7A04F289C7d77E0Ae120e5BC65CBA4975E",
    "txHash": "0x262e7576ec110aaf64d28e50d1deb906e92ffeb5e77a8aa4ed26988ab0967643"
  },
  "proxies": [
    {
      "address": "0xcb58AA49B2C1B5232eaEf7008353cA313Ead3a02",
      "txHash": "0xe3982d85efda3e5fcb457c4174bc7dd3ca8e81f9a56c19c631276ca5552d9270",
      "kind": "transparent"
    },
    {
      "address": "0x5Bb4157324ffFB8E942894E75CF0B21E98D7865a",
      "txHash": "0x6bccb3e0034301a89a5dd31941f7a9d0863dc31299c8bfdc3d94de1526d143ac",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b26fab984937284624771ea16130ada78e97780acda63e6255fb1d05ce13a5cc": {
      "address": "0x9b19e634B63d753eF62B286766908A8353B934Db",
      "txHash": "0xad7a05ffe665913cfcc7ccdbdfec5b773d4c3a03435281fea319d9c3b42556e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:18"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:29"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:227"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Swat)2393_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2393_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "edb28bfa5be8f1506330dd664a26cd3214f37f90cf48e3b07ed176e634f4a3fb": {
      "address": "0x88796266cd3ADFc278e8ac08c8CccAD4F79e3c10",
      "txHash": "0x9e030456985361b42dde297f111cb054c3a07ff6380f64fdd90e06fbd32c769c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "CryptoGuns",
            "label": "swats",
            "type": "t_array(t_struct(Swat)2399_storage)dyn_storage",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:30"
          },
          {
            "contract": "CryptoGuns",
            "label": "_acceptedToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:31"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:32"
          },
          {
            "contract": "CryptoGuns",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:33"
          },
          {
            "contract": "CryptoGuns",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:34"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:38"
          },
          {
            "contract": "CryptoGuns",
            "label": "ownerSwatCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:39"
          },
          {
            "contract": "CryptoGuns",
            "label": "userOwnedSwats",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:40"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatIsAtIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:41"
          },
          {
            "contract": "CryptoGuns",
            "label": "_tokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:42"
          },
          {
            "contract": "CryptoGuns",
            "label": "swatApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\CryptoGuns.sol:244"
          }
        ],
        "types": {
          "t_array(t_struct(Swat)2399_storage)dyn_storage": {
            "label": "struct CryptoGuns.Swat[]"
          },
          "t_struct(Swat)2399_storage": {
            "label": "struct CryptoGuns.Swat",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "rarity",
                "type": "t_string_storage"
              },
              {
                "label": "level",
                "type": "t_uint32"
              },
              {
                "label": "upgraded",
                "type": "t_bool"
              },
              {
                "label": "readyTime",
                "type": "t_uint32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
